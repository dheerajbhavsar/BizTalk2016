<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Label_Commands" xml:space="preserve">
    <value>Commands:</value>
  </data>
  <data name="DeployAppSuccess" xml:space="preserve">
    <value>Deploy {0} "{1}" with action "{2}"  succeeded.</value>
  </data>
  <data name="Command_DeployApp.Example" xml:space="preserve">
    <value>Deploy -Type:Full -Environment:DEV -Application:"SomeApp" -Version:"1.0.0.0" -Action:Install</value>
  </data>
  <data name="Command_Deploy.Example" xml:space="preserve">
    <value>Deploy</value>
  </data>
  <data name="Command_BTSDeployHost.exe.Description" xml:space="preserve">
    <value>Performs BizTalk deployment tasks.</value>
  </data>
  <data name="ProgramUsage" xml:space="preserve">
    <value>BTSDeployHost.exe &lt;Command&gt; [[&lt;Parameter&gt;] ...]</value>
  </data>
  <data name="Command_BTSDeployHost.exe.Notes" xml:space="preserve">
    <value>Parameter names are not case-sensitive and may be abbreviated.</value>
  </data>
  <data name="Label_Example" xml:space="preserve">
    <value>Example:</value>
  </data>
  <data name="EmptyResourceSpec" xml:space="preserve">
    <value>The given resource spec file "{0}" does not contain any resources.</value>
  </data>
  <data name="UnknownCommand" xml:space="preserve">
    <value>Unknown command "{0}". Use /? for help.</value>
  </data>
  <data name="Command_BTSDeployHost.exe.Example" xml:space="preserve">
    <value>BTSDeployHost.exe &lt;Command&gt; [[-Name:Value] ...]
  For help on command: BTSDeployHost.exe &lt;Command&gt; /?</value>
  </data>
  <data name="CommandSupportsNoParam" xml:space="preserve">
    <value>This command does not support any parameters.</value>
  </data>
  <data name="InvalidValue" xml:space="preserve">
    <value>Invalid value specified for parameter "{0}".</value>
  </data>
  <data name="Command_DeployApp.Notes" xml:space="preserve">
    <value>Parameter names are not case-sensitive and may be abbreviated. You either deploy an application or an adapter.</value>
  </data>
  <data name="Command_Deploy.Notes" xml:space="preserve">
    <value>Start the deployment utility in interactive mode.</value>
  </data>
  <data name="ProgramUsageHint" xml:space="preserve">
    <value>Use {0} /? for program help.</value>
  </data>
  <data name="Command_DeployApp.Description" xml:space="preserve">
    <value>Deploys a BizTalk Adapter or Application to a BizTalk Group.</value>
  </data>
  <data name="Command_Deploy.Description" xml:space="preserve">
    <value>Deploys a BizTalk Adapter or Application to a BizTalk Group in interactive mode.</value>
  </data>
  <data name="DeployApp" xml:space="preserve">
    <value>Deploy BizTalk {0} "{1}" with action {2} ...</value>
  </data>
  <data name="PackageNotFound" xml:space="preserve">
    <value>Package "{0}" does not exist!</value>
  </data>
  <data name="PackageNotSpecified" xml:space="preserve">
    <value>The Package parameter is mandatory.</value>
  </data>
  <data name="CommandUsageHint" xml:space="preserve">
    <value>Use {0} /? for command help.</value>
  </data>
  <data name="ExtraUnnamedArguments" xml:space="preserve">
    <value>Extra unnamed arguments: {0}.</value>
  </data>
  <data name="Label_Parameters" xml:space="preserve">
    <value>Parameters:</value>
  </data>
  <data name="Label_Usage" xml:space="preserve">
    <value>Usage:</value>
  </data>
  <data name="Label_Notes" xml:space="preserve">
    <value>Notes:</value>
  </data>
  <data name="DatabaseInvalid" xml:space="preserve">
    <value>Invalid database name "{0}".</value>
  </data>
  <data name="DatabaseNotSpecified" xml:space="preserve">
    <value>Server was specified. Database is required.</value>
  </data>
  <data name="ApplicationNotSpecified" xml:space="preserve">
    <value>Application is mandatory.</value>
  </data>
  <data name="ParamDesc_Environment" xml:space="preserve">
    <value>Required. The name of the BizTalk Environment: </value>
  </data>
  <data name="ParamDesc_Application" xml:space="preserve">
    <value>Required. The name of the BizTalk Application. (Required either application or adapter deployment)</value>
  </data>
  <data name="ParamDesc_Type" xml:space="preserve">
    <value>Required. Deployment Type: </value>
  </data>
  <data name="ParamDesc_Version" xml:space="preserve">
    <value>Required. The version of the application to deploy. (need this when application was specified)</value>
  </data>
  <data name="ServerInvalid" xml:space="preserve">
    <value>Invalid server name "{0}".</value>
  </data>
  <data name="ParamDesc_Adapter" xml:space="preserve">
    <value>Required. The name of the adapter to deploy.</value>
  </data>
  <data name="TimeoutInvalid" xml:space="preserve">
    <value>Invalid timeout value: "{0}"</value>
  </data>
  <data name="ServerNotSpecified" xml:space="preserve">
    <value>Server was not specified and is required.</value>
  </data>
  <data name="Deploy" xml:space="preserve">
    <value>Deploy BizTalk application or adapter</value>
  </data>
  <data name="DeploySuccess" xml:space="preserve">
    <value>Deploy succeeded.</value>
  </data>
  <data name="ActionNotPossible" xml:space="preserve">
    <value>The Action '{0}' is not possible for the Type '{1}'.</value>
  </data>
  <data name="ActionNotSpecified" xml:space="preserve">
    <value>The Action parameter is mandatory.</value>
  </data>
  <data name="ApplicationAdapterNotSpecified" xml:space="preserve">
    <value>The Application or Adapter parameter is mandatory.</value>
  </data>
  <data name="EnvironmentNotSpecified" xml:space="preserve">
    <value>The Environment parameter is mandatory.</value>
  </data>
  <data name="InvalidAction" xml:space="preserve">
    <value>The Action '{0}' is invalid.</value>
  </data>
  <data name="InvalidAdapter" xml:space="preserve">
    <value>The Adapter '{0}' is invalid.</value>
  </data>
  <data name="InvalidApplication" xml:space="preserve">
    <value>The Application '{0}' is not available for deployment.</value>
  </data>
  <data name="InvalidEnvironment" xml:space="preserve">
    <value>The Environment '{0}' is invalid.</value>
  </data>
  <data name="InvalidType" xml:space="preserve">
    <value>The Type '{0}' is invalid!</value>
  </data>
  <data name="InvalidVersion" xml:space="preserve">
    <value>The Version '{0}' is invalid for the Application '{1}'.</value>
  </data>
  <data name="ParamDesc_Action" xml:space="preserve">
    <value>Required. Indicates the deployment action: </value>
  </data>
  <data name="TypeNotSpecified" xml:space="preserve">
    <value>The Type parameter in mandatory.</value>
  </data>
  <data name="VersionNotSpecified" xml:space="preserve">
    <value>The Version parameter is mandatory when the Application parameter was provided.</value>
  </data>
  <data name="ParamDesc_Log" xml:space="preserve">
    <value>Optional. With or without logging.</value>
  </data>
  <data name="InvalidLogValue" xml:space="preserve">
    <value>Please specify 'True' or 'False' as Log value.</value>
  </data>
  <data name="TypeNotPossible" xml:space="preserve">
    <value>The Type '{1}' is not possible for the Action '{0}'.</value>
  </data>
</root>