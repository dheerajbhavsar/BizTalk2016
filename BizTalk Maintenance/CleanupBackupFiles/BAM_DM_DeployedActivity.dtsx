<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="7/27/2005 5:40:03 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="Microsoft"
  DTS:CreatorName="Microsoft"
  DTS:DelayValidation="True"
  DTS:Description="This package archives records in the completed tables."
  DTS:DTSID="{0CD2A9A6-8175-4D25-8094-6F54EE3749F2}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:ISOLevel="4096"
  DTS:LastModifiedProductVersion="13.0.2164.0"
  DTS:LocaleID="1033"
  DTS:MaxConcurrentExecutables="4"
  DTS:ObjectName="BAM_DM_DeployedActivity"
  DTS:PackagePriorityClass="2"
  DTS:VersionBuild="60"
  DTS:VersionGUID="{76F2B677-9133-4858-A099-6060BDA07326}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[1]"
      DTS:CreationName="OLEDB"
      DTS:DelayValidation="True"
      DTS:Description="Connection to BAM Primary Import database."
      DTS:DTSID="{2F54EC70-CACF-4E0A-A976-48BD1320F963}"
      DTS:ObjectName="1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=SQL-2016\BIZTALK;Initial Catalog=BAMPrimaryImport;Provider=SQLNCLI11.1;Persist Security Info=False;Integrated Security=SSPI;Auto Translate=False;Application Name=Data Maintenance DTS;Use Encryption for Data=False;connection timeout=120;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[2]"
      DTS:CreationName="OLEDB"
      DTS:DelayValidation="True"
      DTS:Description="Connection to BAM Archive database."
      DTS:DTSID="{4FFB7AE1-6945-4E33-86B2-588ECF4E3BA6}"
      DTS:ObjectName="2">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=SQL-2016\BIZTALK;Initial Catalog=BAMArchive;Use Encryption for Data=False;Application Name=Data Maintenance DTS;Connection Timeout=120;Provider=SQLNCLI11.1;Integrated Security=SSPI;Persist Security Info=False;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[3]"
      DTS:CreationName="OLEDB"
      DTS:DelayValidation="True"
      DTS:Description="This connection is for logging to the MSDB database of the Primary Import server."
      DTS:DTSID="{F036902C-D561-4845-BB5E-99FE586F418B}"
      DTS:ObjectName="3">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=SQL-2016\BIZTALK;Initial Catalog=msdb;Use Encryption for Data=False;Application Name=Data Maintenance DTS;Connection Timeout=120;Provider=SQLNCLI11.1;Integrated Security=SSPI;Persist Security Info=False;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{53DCFB95-1170-4FB0-97B9-0F820AA1EA98}"
      DTS:ObjectName="PrimaryImportDatabase"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">BAMPrimaryImport</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{CE1A7C36-8C2D-4B09-9339-102864591C93}"
      DTS:ObjectName="PrimaryImportServer"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">SQL-2016\BIZTALK</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6EB500D4-4719-4A4B-B207-227D0330677B}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ActivityList">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A1142DF1-5F9E-4A65-A60B-DA80750A6AB0}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace=""
      DTS:ObjectName="ActivityName">
      <DTS:VariableValue
        DTS:DataType="8">AS2InterchangeActivity</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CD2EF432-1C7F-4A08-A7B0-CD6B0C1A7B66}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace=""
      DTS:ObjectName="ArchivingDatabase">
      <DTS:VariableValue
        DTS:DataType="8">BAMArchive</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{978351E1-6BC2-486A-A4F1-738B9EC62A78}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace=""
      DTS:ObjectName="ArchivingServer">
      <DTS:VariableValue
        DTS:DataType="8">SQL-2016\BIZTALK</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="2" />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Task"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{5e8d44a4-bac3-449c-8318-05ad2541e231}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Task"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="1" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2F54EC70-CACF-4E0A-A976-48BD1320F963}"
          SQLTask:SqlStatementSource="SELECT [ActivityName],[OnlineWindowTimeUnit],[OnlineWindowTimeLength],[Archive]&#xA;  FROM [dbo].[bam_Metadata_Activities]&#xA;"
          SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::ActivityList" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{DCD04703-0151-4156-83C0-2E861447CE0F}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachADOEnumerator"
        DTS:DTSID="{5BA0ECCB-5DF8-459A-9F0E-BEFBA8C9D3A6}"
        DTS:ObjectName="{5BA0ECCB-5DF8-459A-9F0E-BEFBA8C9D3A6}">
        <DTS:ObjectData>
          <FEEADO
            EnumType="EnumerateRowsInFirstTable"
            VarName="User::ActivityList" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:DTSID="{2A098644-E621-4973-A4AF-B68E0E717E76}"
          DTS:EvaluateAsExpression="True"
          DTS:Expression="&quot;[dbo].[bam_&quot; + @ActivityName + &quot;_Instances]&quot;"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace=""
          DTS:ObjectName="DestinationInstanceTable">
          <DTS:VariableValue
            DTS:DataType="8">[dbo].[bam_AS2InterchangeActivity_Instances]</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:DTSID="{F3E47C0E-9E06-411A-BF37-544DDFE3DCB6}"
          DTS:EvaluateAsExpression="True"
          DTS:Expression="&quot;[dbo].[bam_&quot; + @ActivityName + &quot;_Relationships]&quot;"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace=""
          DTS:ObjectName="DestinationRelationshipTable">
          <DTS:VariableValue
            DTS:DataType="8">[dbo].[bam_AS2InterchangeActivity_Relationships]</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:DTSID="{37FA71FE-6A32-451E-81F0-F1CD2E494D5B}"
          DTS:EvaluateAsExpression="True"
          DTS:Expression="&quot;[dbo].[bam_&quot; + @ActivityName + &quot;_InstancesForArchive]&quot;"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace=""
          DTS:ObjectName="SourceInstanceTable">
          <DTS:VariableValue
            DTS:DataType="8">[dbo].[bam_AS2InterchangeActivity_InstancesForArchive]</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:DTSID="{38819D94-E6DA-463C-B12D-25A2C1874D96}"
          DTS:EvaluateAsExpression="True"
          DTS:Expression="&quot;[dbo].[bam_&quot; + @ActivityName + &quot;_RelationshipsForArchive]&quot;"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace=""
          DTS:ObjectName="SourceRelationshipTable">
          <DTS:VariableValue
            DTS:DataType="8">[dbo].[bam_AS2InterchangeActivity_RelationshipsForArchive]</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="1" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Archiving instance data"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Archiving the completed instance data"
          DTS:DTSID="{14DE19AC-C2CC-48D0-8534-4DA254666478}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Archiving instance data"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <ScriptProject
              Name="ScriptTask_444c0dba41f54389a8cd887567583f8e"
              VSTAMajorVersion="14"
              VSTAMinorVersion="0"
              Language="VisualBasic"
              ReadOnlyVariables="PrimaryImportServer,PrimaryImportDatabase,ArchivingServer,ArchivingDatabase,SourceInstanceTable,DestinationInstanceTable">
              <ProjectItem
                Name="scripttask_444c0dba41f54389a8cd887567583f8e.vbproj"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <RootNamespace>ScriptTask_444c0dba41f54389a8cd887567583f8e.vbproj</RootNamespace>
    <AssemblyName>ScriptTask_444c0dba41f54389a8cd887567583f8e.vbproj</AssemblyName>
    <StartupObject></StartupObject>
    <OptionExplicit>On</OptionExplicit>
    <OptionCompare>Binary</OptionCompare>
    <OptionStrict>Off</OptionStrict>
    <OptionInfer>On</OptionInfer>
    <ProjectGuid>{31830EA3-C63A-4AB3-ABD9-A5120ACCFBA8}</ProjectGuid>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <!-- Visual Basic supports Importing namespaces (equivalent to using statements in C#).-->
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.designer.vb">
      <DependentUpon>ScriptMain.Designer.xml</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
    <None Include="ScriptMain.Designer.xml">
      <DependentUpon>ScriptMain.vb</DependentUpon>
    </None>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="SSIS_ScriptTask">
          <HostItem Name="ScriptMain" Code="ScriptMain.vb" CanonicalName="ScriptMain" DisplayName="ScriptMain" Blueprint="ScriptMain.Designer.xml" GeneratedCode="ScriptMain.designer.vb" />
        </Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
  <PropertyGroup>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.vb"
                Encoding="UTF8"><![CDATA['<copyright file="DataMaintenanceScriptTask" company="Microsoft">
' Copyright (c) 1998-2006 Microsoft Corporation. All rights reserved. 
'  
' THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, 
' WHETHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED 
' WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE. 
' THE ENTIRE RISK OF USE OR RESULTS IN CONNECTION WITH THE USE OF THIS CODE 
' AND INFORMATION REMAINS WITH THE USER. 
'</copyright>

Imports System
Imports System.Collections.Specialized
Imports System.Data.SqlClient
Imports System.Globalization
Imports System.Text
Imports Microsoft.SqlServer.Dts.Runtime

<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute> _
Partial Class ScriptMain

	Private Sub ScriptMain_Startup(ByVal sender As Object, ByVal e As System.EventArgs)

	End Sub

	Private Sub ScriptMain_Shutdown(ByVal sender As Object, ByVal e As System.EventArgs)

		Try
			' Unlock variables from the read-only and read-write variable collection properties
			If (Dts.Variables.Count <> 0) Then
				Dts.Variables.Unlock()
			End If
		Catch ex As Exception
		End Try
	End Sub

	Enum ScriptResults
		Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
		Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
	End Enum

    ' The DTS execution engine calls this method when the task executes.
    ' To access the DTS object model, use the Dts object. Connections, variables, events,
    ' and logging features are available as static members of the Dts class.
    ' Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
    ' 
    ' To open Code and Text Editor Help, press F1.
    ' To open Object Browser, press Ctrl+Alt+J.

    Public Sub Main()
        Const PrimaryImportServer As String = "PrimaryImportServer"
        Const PrimaryImportDatabase As String = "PrimaryImportDatabase"
        Const ArchivingServer As String = "ArchivingServer"
        Const ArchivingDatabase As String = "ArchivingDatabase"
        Const SourceTable As String = "SourceInstanceTable"
        Const DestinationTable As String = "DestinationInstanceTable"
        Const LocalizedResources As String = "LocalizedResources"
        Const BatchSize As Integer = 100
        Dim primaryImportConnectionString As String
        Dim archiveConnectionString As String
        Dim sourceTableName As String
        Dim destinationTableName As String
        Dim localizedResourcesContainer As StringDictionary
        Dim primaryImportSqlConnection As SqlConnection
        Dim archiveSqlConnection As SqlConnection
        Dim primaryImportCommand As SqlCommand
        Dim archiveCommand As SqlCommand
        Dim primaryImportReader As SqlDataReader
        Dim emptyBytes(0) As Byte

        primaryImportConnectionString = CreateConnectionString(CStr(Dts.Variables(PrimaryImportServer).Value), _
            CStr(Dts.Variables(PrimaryImportDatabase).Value))
        archiveConnectionString = CreateConnectionString(CStr(Dts.Variables(ArchivingServer).Value), _
            CStr(Dts.Variables(ArchivingDatabase).Value))
        sourceTableName = CStr(Dts.Variables(SourceTable).Value)
        destinationTableName = CStr(Dts.Variables(DestinationTable).Value)
        'localizedResourcesContainer = Dts.Variables(LocalizedResources).Value
        primaryImportSqlConnection = New SqlConnection(primaryImportConnectionString)
        archiveSqlConnection = New SqlConnection(archiveConnectionString)
        Try
            Dts.Log("Starting instance Archive", 0, emptyBytes)
            primaryImportSqlConnection.Open()
            primaryImportCommand = New SqlCommand("select * from " + sourceTableName, primaryImportSqlConnection)
            primaryImportReader = primaryImportCommand.ExecuteReader()
            archiveSqlConnection.Open()
            archiveCommand = New SqlCommand()
            archiveCommand.CommandType = Data.CommandType.Text
            archiveCommand.Connection = archiveSqlConnection
            Dim insertStatement As StringBuilder
            insertStatement = New StringBuilder()
            Dim recordCount As Integer
            While (primaryImportReader.Read())
                recordCount = recordCount + 1
                AppendInsertStatement(primaryImportReader, destinationTableName, insertStatement)
                If (recordCount = BatchSize) Then
                    archiveCommand.CommandText = insertStatement.ToString()
                    archiveCommand.ExecuteNonQuery()
                    insertStatement = insertStatement.Remove(0, insertStatement.Length)
                    recordCount = 0
                End If
            End While
            If (insertStatement.Length > 0) Then
                archiveCommand.CommandText = insertStatement.ToString()
                archiveCommand.ExecuteNonQuery()
            End If

        Catch ex As Exception
            Dts.Events.FireError(0, "", ex.Message & ControlChars.CrLf & ex.StackTrace, "", 0)
        Finally
            If Not (primaryImportReader Is Nothing) Then
                primaryImportReader.Close()
            End If
            If Not (primaryImportSqlConnection Is Nothing) Then
                primaryImportSqlConnection.Close()
            End If
            If Not (archiveSqlConnection Is Nothing) Then
                archiveSqlConnection.Close()
            End If
        End Try

    End Sub

    Private Sub AppendInsertStatement(ByVal dataReader As SqlDataReader, ByVal destinationTableName As String, ByVal insertStatement As StringBuilder)

        Dim i As Integer
        insertStatement.Append("insert " + destinationTableName + " values(")
        ' we skip 0 because that is RecordId
        For i = 0 To dataReader.FieldCount - 1
            If (dataReader.Item(i) Is Nothing) Or IsDBNull(dataReader.Item(i)) Then
                insertStatement.Append(" null,")
            Else
                If (TypeOf dataReader.Item(i) Is System.DateTime) Then
                    Dim dt As DateTime
                    Dim sb As StringBuilder
                    dt = CType(dataReader.Item(i), DateTime)
                    sb = New StringBuilder(" '")
                    sb.Append(dt.Year.ToString(CultureInfo.InvariantCulture))
                    sb.Append(dt.Month.ToString("d2", CultureInfo.InvariantCulture))
                    sb.Append(dt.Day.ToString("d2", CultureInfo.InvariantCulture))
                    sb.Append(" ")
                    sb.Append(dt.Hour)
                    sb.Append(":")
                    sb.Append(dt.Minute)
                    sb.Append(":")
                    sb.Append(dt.Second)
                    sb.Append(":")
                    sb.Append(dt.Millisecond)
                    sb.Append("',")
                    insertStatement.Append(sb.ToString())
                ElseIf (TypeOf dataReader.Item(i) Is String) Then
                    insertStatement.Append(" N'" + EscapeQuotes(dataReader.Item(i).ToString()) + "',")
                Else
                    insertStatement.Append(" '" + EscapeQuotes(Convert.ToString(dataReader.Item(i), CultureInfo.InvariantCulture)) + "',")
                End If
            End If
        Next
        insertStatement.Remove(insertStatement.Length - 1, 1)
        insertStatement.AppendLine(")")
    End Sub

    Private Function EscapeQuotes(ByVal s As String) As String
        If (s Is Nothing) Then
            EscapeQuotes = Nothing
        Else
            EscapeQuotes = s.Replace("'", "''") ' Security mitigation, don't allow ' in the generated SQL
        End If
    End Function

    Private Function CreateConnectionString(ByVal server As String, ByVal database As String) As String

        Dim connectionString As StringBuilder
        connectionString = New StringBuilder()
        connectionString.Append("Data Source=")
        connectionString.Append(server)
        connectionString.Append(";Initial Catalog=")
        connectionString.Append(database)
        connectionString.Append(";Integrated Security=SSPI;Persist Security Info=false;Application Name=Data Maintenance DTS;")
        CreateConnectionString = connectionString.ToString()
    End Function

End Class]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.Designer.xml"
                Encoding="UTF8"><![CDATA[<hostitem:hostItem hostitem:identifier="ScriptMain" hostitem:namespace="" hostitem:primaryCookie="ScriptMain" hostitem:baseType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTAProxy.VSTARTScriptObjectModelBaseEntryPoint" hostitem:interfaceType="Microsoft.VisualStudio.Tools.Applications.Runtime.IEntryPoint" hostitem:displayName="ScriptMain" hostitem:generateCode="true" hostitem:startupIndex="0" xmlns:hostitem="http://schemas.microsoft.com/2006/VisualStudio/Tools/Applications/HostItem.xsd" />]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>scripttask_444c0dba41f54389a8cd887567583f8e</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:NoContent>Reference;Import;Folder</msb:NoContent>
		<msb:ProjectId>{45AAE321-0142-4248-8B80-13C6D39B51BF}</msb:ProjectId>
		<msb:DisplayName>scripttask_444c0dba41f54389a8cd887567583f8e</msb:DisplayName>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="ScriptMain.designer.vb"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:File Include="ScriptMain.Designer.xml"/>
		<msb:Project Include="scripttask_444c0dba41f54389a8cd887567583f8e.vbproj"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.designer.vb"
                Encoding="UTF8"><![CDATA[<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
	Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
End Class]]></ProjectItem>
              <ProjectItem
                Name="My Project\AssemblyInfo.vb"
                Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ScriptTask_444c0dba41f54389a8cd887567583f8e.vbproj")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("MS")> 
<Assembly: AssemblyProduct("ScriptTask_444c0dba41f54389a8cd887567583f8e.vbproj")> 
<Assembly: AssemblyCopyright("Copyright @ MS 2008")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("f0841a8f-c7ed-4777-ad89-4871d4edfad5")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
              <BinaryItem
                Name="ScriptTask_444c0dba41f54389a8cd887567583f8e.vbproj.dll">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
AAAAAOQAAADDAAAApwEAAEQAAAAeAAABAgAAAOQAAAAHAQAA6wEAACAAAAAAAAAAEzAFAPIBAAAZ
AAARBXJ/AQBwBHKPAQBwKEEAAApvRQAACiYWA29GAAAKF9oNCjinAQAAAwZvRwAAChT+AQMGb0cA
AAooEQAACihIAAAKYCwRBXKhAQBwb0UAAAomOHQBAAADBm9HAAAKdSwAAAE5+QAAAAMGb0cAAAoo
SQAACgtyrwEAcHNKAAAKDAgSAShLAAAKEwQSBChMAAAKKE0AAApvRQAACiYIEgEoTgAAChMEEgRy
tQEAcChMAAAKKE8AAApvRQAACiYIEgEoUAAAChMEEgRytQEAcChMAAAKKE8AAApvRQAACiYIcrsB
AHBvRQAACiYIEgEoUQAACm9SAAAKJghyvwEAcG9FAAAKJggSAShTAAAKb1IAAAomCHK/AQBwb0UA
AAomCBIBKFQAAApvUgAACiYIcr8BAHBvRQAACiYIEgEoVQAACm9SAAAKJghywwEAcG9FAAAKJgUI
bzgAAApvRQAACiYragMGb0cAAAp1KQAAASwqBXLJAQBwAgMGb0cAAApvFQAACm8dAAAGcsMBAHAo
QQAACm9FAAAKJisyBXKvAQBwAgMGb0cAAAooEQAACihMAAAKKFYAAApvHQAABnLDAQBwKEEAAApv
RQAACiYGF9YKBgk+Uv7//wUFbzsAAAoX2hdvPAAACiYFctEBAHBvVwAACiYqAAATMAMAGgAAABoA
ABEDLQQUCisRA3LVAQBwctkBAHBvWAAACgoGKgAAEzACAEMAAAAbAAARczcAAAoKBnLfAQBwb0UA
AAomBgNvRQAACiYGcvkBAHBvRQAACiYGBG9FAAAKJgZyHQIAcG9FAAAKJgZvOAAACgsHKrQAAADO
yu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZl
cnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5
MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFE
UEFEULQAAAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAA4AkAACN+AABMCgAA
yAwAACNTdHJpbmdzAAAAABQXAADYAgAAI1VTAOwZAAAQAAAAI0dVSUQAAAD8GQAAgAQAACNCbG9i
AAAAAAAAAAIAAAFXHaIJCQ8AAAD6JTMAFgAAAQAAAD0AAAAKAAAADAAAAB4AAAAOAAAAZQAAAAIA
AAA2AAAAGwAAAAQAAAAIAAAACQAAAAkAAAABAAAABgAAAAEAAAADAAAAAwAAAAIAAAAAAJEMAQAA
AAAACgB4AU4BCgCsAY4BBgC8AbUBCgAUAk4BBgCSArUBCgAUA+oCBgBKAzkDBgB3A2IDDgDeA8kD
EgBdBDQEBgB5BLUBFgDaBMQEBgD0BOgEBgB+BbUBDgCxBZsFDgDKBZsFDgD3Bd8FBgAhBg4GCgBg
BjkGCgB4BhMADgCtBpAGBgDiBsIGBgAAB7UBBgAkB7UBCgA9BxMABgCBB2IHBgCnB5UHBgDOB70H
BgDhBw4GBgD+B7UBEgAICDQEGgBhCEEIGgB5CEEICgCkCDkGFgDSCMQEFgDdCMQEDgAKCesIBgAb
CbUBGgAgCUEICgAyCTkGBgBHCbUBFgBjCbgEEgDFCTQEBgAPCrUBCgAuChMABgBoCrUBBgBuCrUB
BgC/CrUBBgDaCrUBEgDwCjQEBgBZC8IGBgB5C8IGBgCxC5cLBgDKC5UHBgDnC2IHBgD1C5UHBgAQ
DJUHBgArDJUHBgBEDJUHBgBdDJUHBgB6DJUHAAAAAAEAAAAAAAEAAQAAAAAAKQA3AAUAAQABAAAA
AABtADcACQABAAIAAAEQAHgANwANAAEAAwAFAQAAggAAAA0ABQAIAAUBAACQAAAADQAFAA8AAAAA
AKsAtwANAAYAEQAAARAA9wACASUACAAVAAEAAAA1AQIBKQAKABgAAgEAAEABAAA5AAoAHwAxANcB
IAAxAAACLQAxACICOgAxAEcCRwAhACMDkAARAFoDnQARAIMDoQARAPYDvwARAP4DwwAGBoMF9ABW
gIsF9wBWgJMF9wBQIAAAAAAGGIgBEwABAFggAAAAAAYYiAETAAEAYCAAAAAAERjDARcAAQCMIAAA
AAATCMoBGwABAKQgAAAAABMI8AEoAAEAvCAAAAAAEwgZAjUAAQDUIAAAAAATCDcCQgABAOwgAAAA
AEYCfQJjAAEACCEAAAAARgKGAmgAAgAcIQAAAACDAJcCbAACADQhAAAAAEYCnwJxAAIASCEAAAAA
EQCoAngAAgBkIQAAAAABAMYCgAADAIAhAAAAAAYYiAETAAQAiCEAAAAAAwjaAosABAC8IQAAAAAG
GIgBEwAEANAhAAAAAAMYiAETAAQA2CEAAAAAFgiPA6UABAAUIgAAAAAWCKMDqgAEACgiAAAAABYI
rwOvAAQAMCIAAAAAERjDARcABQBEIgAAAAAGGIgBEwAFAEwiAAAAABYICwTGAAUAqCIAAAAABhiI
ARMABQCwIgAAAAABAIME2QAFALQiAAAAAAEAnwTZAAcABCMAAAAABgCzBBMACQBQJQAAAAABAAIF
4AAJAFAnAAAAAAEASAXpAAwAeCcAAAAAAQBXBe4ADQAAAAEAhAIAAAEAvQIAAAEAvQIAAAEAuwMA
AAEAlgQAAAIAnQQAAAEAlgQAAAIAnQQAAAEAGAUAAAIAIwUAAAMAOAUAAAEAVQUAAAEAbgUAAAIA
dQUJAIgBEwB5AIgBBQGJAIgBFAERAIgBEwCRAIgBEwAkAIgBEwAsAIgBEwA0AIgBEwA8AIgBEwAk
ANoCiwAsANoCiwA0ANoCiwA8ANoCiwCZAIgBEwChAIgBEwCpAIgBYwGxAPEGrgEZAH0CYwAZAIYC
aAApABIHuwEZAJ8CcQDBAC4HywEZAIgBEwDJAIgB2wFEACMDkABMAAsEiwBMAFgHWAJMAIgBEwDR
AIgBZwIpALAHcgI5AIgBdwJJAIgBEwDhANYHkwLhANwHkwLpAIgBEwBRAIgBEwBRABoInQL5AGsI
ogIJAZMIaAABAZ0IEwARAbAIqAIRAcAIFwABASkJtgI5AQsEvQJBAZ8CwQIhAYgBYwH5AD4JxgIh
AUIJEwBJAU4JzgIZAYgB1AIZAVUJ3AIZAYgBEwAZAW8J4QIZAX8J6AJpAIgBEwBpAJ8CcQAZAY4J
YwEZAZ4JaABpAK4JaABpALkJ7wJhAMAJ9gL5ANkJ+gLxAOQJcQDxAPAJcQBJAU4JAANZAf8JBwNh
AAkKEwAhAQkKEwBpABgKLwNhAB8KaABhACkJNQNpAToKOgNBAUMKPwNpAIgBYwFhAUoKaABBAFMK
qgBxAZ8CRgNhAX4KaABxAZ8CTQNhAYgKaABhAZAKaABpABgKVQNhAZkKaABhAaQKaABhAa8KaACB
AZ8CWwNpAMcKLwNJAdIK7gCJAYgBZwKRAYgBEwCZAYgBdAOhAYgBEwCpAYgBYwGxAYgBYwG5AYgB
YwHBAYgBYwHJAYgBYwHRAYgBYwHZAYgBYwHhAYgBYwHpAYgBYwEIACwA+wAIADAAAAEpAIMAfAEu
ACMDbAIuABsDdwQuAPMC6QMuABMDPwQuACsDPwQuANsCeQMuAOMCggMuAOsCoQMuAPsC9gMuAOsA
bAIuAMsCIAQuAAMDbAIuAAsDJgRAACsAAAFAABMACwFDABMACwFDABsAGgFJAIMAaAFjABMACwFj
ABsAGgFpAIMAoQGAACsAAAGDAHsAAAGDAHMAAAGDABsAGgGJAIMAjQGgACsAAAGjAMMA4wGjABMA
CwHAACsAAAHDABMACwHDAOsAbALJABMAigLgACsAAAHpABMAigIAARMACwEAASsAAAEJARsBAAEg
ARMACwEgASsAAAEjAcsCbAIjAdMCAAFAARMACwFAASsAAAFgARMACwFgASsAAAGAASsAAAGgASsA
AAHAASsAAAHAARMACwHgASsAAAEAAisAAAEAAhMACwFPAVQBWQFeAbMBtwHCAccB1gHWAV4CfgKF
ApgCrgKzArMC9ACzArMCswKzArMCEANjA8cBbgMEAAEABgAFAAcABgAIAAgAAACsAU8AAABlAlQA
AAAUAlkAAABxAl4AAAAtA5gAAABKA7UAAADBA7oAAAC7A8sAAgAEAAMAAgAFAAUAAgAGAAcAAgAH
AAkAAgAPAAsAAgASAA0AAgATAA8AAQAUAA8AAgAXABEAdQB1AIgAMwE6AUEBSAFFAkwCBIAAAAEA
AAAAAAAAAAAAAAAAAgEAAAQAAAAAAAAAAAAAAAEACgAAAAAACgAAAAAAAAAAAAAACgATAAAAAAAE
AAAAAAAAAAAAAAABALUBAAAAAA0AAAAAAAAAAAAAANAAFQQAAAAABAAAAAAAAAAAAAAAAQC4BAAA
AAANAAAAAAAAAAAAAADQACIIAAAAAAAAAAABAAAAEgsAAAUABAAGAAQACgAJAAAAEAAMALsCAAAQ
ABkAuwIAAAAAGwC7Ai0A0QEtAFMCAAAAPE1vZHVsZT4AbXNjb3JsaWIATWljcm9zb2Z0LlZpc3Vh
bEJhc2ljAE15QXBwbGljYXRpb24AU2NyaXB0VGFza180NDRjMGRiYTQxZjU0Mzg5YThjZDg4NzU2
NzU4M2Y4ZS52YnByb2ouTXkATXlDb21wdXRlcgBNeVByb2plY3QATXlXZWJTZXJ2aWNlcwBUaHJl
YWRTYWZlT2JqZWN0UHJvdmlkZXJgMQBNeVJlc291cmNlcwBTY3JpcHRUYXNrXzQ0NGMwZGJhNDFm
NTQzODlhOGNkODg3NTY3NTgzZjhlLnZicHJvai5NeS5SZXNvdXJjZXMATXlTZXR0aW5ncwBTY3Jp
cHRUYXNrXzQ0NGMwZGJhNDFmNTQzODlhOGNkODg3NTY3NTgzZjhlLnZicHJvagBTY3JpcHRNYWlu
AFNjcmlwdFJlc3VsdHMATWljcm9zb2Z0LlZpc3VhbEJhc2ljLkFwcGxpY2F0aW9uU2VydmljZXMA
QXBwbGljYXRpb25CYXNlAC5jdG9yAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5EZXZpY2VzAENvbXB1
dGVyAFN5c3RlbQBPYmplY3QALmNjdG9yAGdldF9Db21wdXRlcgBtX0NvbXB1dGVyT2JqZWN0UHJv
dmlkZXIAZ2V0X0FwcGxpY2F0aW9uAG1fQXBwT2JqZWN0UHJvdmlkZXIAVXNlcgBnZXRfVXNlcgBt
X1VzZXJPYmplY3RQcm92aWRlcgBnZXRfV2ViU2VydmljZXMAbV9NeVdlYlNlcnZpY2VzT2JqZWN0
UHJvdmlkZXIAQXBwbGljYXRpb24AV2ViU2VydmljZXMARXF1YWxzAG8AR2V0SGFzaENvZGUAVHlw
ZQBHZXRUeXBlAFRvU3RyaW5nAENyZWF0ZV9fSW5zdGFuY2VfXwBUAGluc3RhbmNlAERpc3Bvc2Vf
X0luc3RhbmNlX18AZ2V0X0dldEluc3RhbmNlAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5NeVNlcnZp
Y2VzLkludGVybmFsAENvbnRleHRWYWx1ZWAxAG1fQ29udGV4dABHZXRJbnN0YW5jZQBTeXN0ZW0u
UmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgBfcmVzTWdyAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1
bHR1cmVJbmZvAF9yZXNDdWx0dXJlAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0
X0N1bHR1cmUAVmFsdWUAQ3VsdHVyZQBTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNl
dHRpbmdzQmFzZQBtX1ZhbHVlAG1fU3luY09iamVjdABnZXRfVmFsdWUATWljcm9zb2Z0LlNxbFNl
cnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sA
VlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEV2ZW50QXJncwBTY3JpcHRNYWluX1N0YXJ0dXAA
c2VuZGVyAGUAU2NyaXB0TWFpbl9TaHV0ZG93bgBNYWluAFN5c3RlbS5EYXRhAFN5c3RlbS5EYXRh
LlNxbENsaWVudABTcWxEYXRhUmVhZGVyAFN5c3RlbS5UZXh0AFN0cmluZ0J1aWxkZXIAQXBwZW5k
SW5zZXJ0U3RhdGVtZW50AGRhdGFSZWFkZXIAZGVzdGluYXRpb25UYWJsZU5hbWUAaW5zZXJ0U3Rh
dGVtZW50AEVzY2FwZVF1b3RlcwBzAENyZWF0ZUNvbm5lY3Rpb25TdHJpbmcAc2VydmVyAGRhdGFi
YXNlAEVudW0AdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVk
aXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBTeXN0ZW0uQ29kZURv
bS5Db21waWxlcgBHZW5lcmF0ZWRDb2RlQXR0cmlidXRlAFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1
Z2dlckhpZGRlbkF0dHJpYnV0ZQBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuQ29tcGlsZXJTZXJ2aWNl
cwBTdGFuZGFyZE1vZHVsZUF0dHJpYnV0ZQBIaWRlTW9kdWxlTmFtZUF0dHJpYnV0ZQBTeXN0ZW0u
Q29tcG9uZW50TW9kZWwuRGVzaWduAEhlbHBLZXl3b3JkQXR0cmlidXRlAFN5c3RlbS5SdW50aW1l
LkNvbXBpbGVyU2VydmljZXMAUnVudGltZUhlbHBlcnMAR2V0T2JqZWN0VmFsdWUAUnVudGltZVR5
cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQWN0aXZhdG9yAENyZWF0ZUluc3RhbmNlAE15R3Jv
dXBDb2xsZWN0aW9uQXR0cmlidXRlAHNldF9WYWx1ZQBTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2Vy
dmljZXMAQ29tVmlzaWJsZUF0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseQBnZXRf
QXNzZW1ibHkAU3lzdGVtLlRocmVhZGluZwBNb25pdG9yAEVudGVyAEV4aXQARGVidWdnZXJOb25V
c2VyQ29kZUF0dHJpYnV0ZQBFeGNlcHRpb24AU2NyaXB0T2JqZWN0TW9kZWwAZ2V0X0R0cwBNaWNy
b3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGlt
ZQBWYXJpYWJsZXMAZ2V0X1ZhcmlhYmxlcwBEVFNSZWFkT25seUNvbGxlY3Rpb25CYXNlAGdldF9D
b3VudABVbmxvY2sAUHJvamVjdERhdGEAU2V0UHJvamVjdEVycm9yAENsZWFyUHJvamVjdEVycm9y
AFNxbENvbW1hbmQAU3FsQ29ubmVjdGlvbgBTeXN0ZW0uQ29sbGVjdGlvbnMuU3BlY2lhbGl6ZWQA
U3RyaW5nRGljdGlvbmFyeQBCeXRlAFZhcmlhYmxlAGdldF9JdGVtAENvbnZlcnNpb25zAExvZwBP
cGVuAFN0cmluZwBDb25jYXQARXhlY3V0ZVJlYWRlcgBDb21tYW5kVHlwZQBzZXRfQ29tbWFuZFR5
cGUAc2V0X0Nvbm5lY3Rpb24Ac2V0X0NvbW1hbmRUZXh0AEV4ZWN1dGVOb25RdWVyeQBnZXRfTGVu
Z3RoAFJlbW92ZQBSZWFkAEV2ZW50c09iamVjdFdyYXBwZXIAZ2V0X0V2ZW50cwBnZXRfTWVzc2Fn
ZQBnZXRfU3RhY2tUcmFjZQBGaXJlRXJyb3IAQ2xvc2UARGF0ZVRpbWUAQXBwZW5kAGdldF9GaWVs
ZENvdW50AEluZm9ybWF0aW9uAElzREJOdWxsAFRvRGF0ZQBnZXRfWWVhcgBnZXRfSW52YXJpYW50
Q3VsdHVyZQBJbnQzMgBJRm9ybWF0UHJvdmlkZXIAZ2V0X01vbnRoAGdldF9EYXkAZ2V0X0hvdXIA
Z2V0X01pbnV0ZQBnZXRfU2Vjb25kAGdldF9NaWxsaXNlY29uZABDb252ZXJ0AEFwcGVuZExpbmUA
UmVwbGFjZQBDTFNDb21wbGlhbnRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0
cmlidXRlAFNjcmlwdFRhc2tfNDQ0YzBkYmE0MWY1NDM4OWE4Y2Q4ODc1Njc1ODNmOGUudmJwcm9q
LlJlc291cmNlcy5yZXNvdXJjZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50
aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRhcmdl
dEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUZpbGVWZXJzaW9uQXR0cmlidXRlAEd1aWRBdHRy
aWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1
dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3Nl
bWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAU2NyaXB0VGFz
a180NDRjMGRiYTQxZjU0Mzg5YThjZDg4NzU2NzU4M2Y4ZS52YnByb2ouZGxsAAAxTQB5AC4AUgBl
AHMAbwB1AHIAYwBlAHMALgBNAHkAUgBlAHMAbwB1AHIAYwBlAHMAACdQAHIAaQBtAGEAcgB5AEkA
bQBwAG8AcgB0AFMAZQByAHYAZQByAAArUAByAGkAbQBhAHIAeQBJAG0AcABvAHIAdABEAGEAdABh
AGIAYQBzAGUAAB9BAHIAYwBoAGkAdgBpAG4AZwBTAGUAcgB2AGUAcgAAI0EAcgBjAGgAaQB2AGkA
bgBnAEQAYQB0AGEAYgBhAHMAZQAAJ1MAbwB1AHIAYwBlAEkAbgBzAHQAYQBuAGMAZQBUAGEAYgBs
AGUAADFEAGUAcwB0AGkAbgBhAHQAaQBvAG4ASQBuAHMAdABhAG4AYwBlAFQAYQBiAGwAZQAAM1MA
dABhAHIAdABpAG4AZwAgAGkAbgBzAHQAYQBuAGMAZQAgAEEAcgBjAGgAaQB2AGUAAB1zAGUAbABl
AGMAdAAgACoAIABmAHIAbwBtACAAAAEABQ0ACgAAD2kAbgBzAGUAcgB0ACAAABEgAHYAYQBsAHUA
ZQBzACgAAA0gAG4AdQBsAGwALAAABSAAJwABBWQAMgAAAyAAAAM6AAAFJwAsAAEHIABOACcAAQMp
AAADJwABBScAJwABGUQAYQB0AGEAIABTAG8AdQByAGMAZQA9AAAjOwBJAG4AaQB0AGkAYQBsACAA
QwBhAHQAYQBsAG8AZwA9AACAuTsASQBuAHQAZQBnAHIAYQB0AGUAZAAgAFMAZQBjAHUAcgBpAHQA
eQA9AFMAUwBQAEkAOwBQAGUAcgBzAGkAcwB0ACAAUwBlAGMAdQByAGkAdAB5ACAASQBuAGYAbwA9
AGYAYQBsAHMAZQA7AEEAcABwAGwAaQBjAGEAdABpAG8AbgAgAE4AYQBtAGUAPQBEAGEAdABhACAA
TQBhAGkAbgB0AGUAbgBhAG4AYwBlACAARABUAFMAOwAADVpmJqBLOEOY1816wAY4lwAIt3pcVhk0
4IkIsD9ffxHVCjoDIAABAwAAAQQAABIMBwYVEhgBEgwEAAASCAcGFRIYARIIBAAAEhEHBhUSGAES
EQQAABIUBwYVEhgBEhQECAASDAQIABIIBAgAEhEECAASFAQgAQIcAyAACAQgABIVAyAADgIeAAcQ
AQEeAB4ABzABAQEQHgACEwAEIAATAAcGFRIZARMABCgAEwADBhIdAwYSIQQAABIdBAAAEiEFAAEB
EiEECAASHQQIABIhAwYSIAIGHAQAABIgBAgAEiAIiYRdzYCAzJEGIAIBHBItCCADARIxDhI1BCAB
Dg4FIAIODg4CBggDBhEoBAAAAAAEAQAAAAUgAQERQQgBAAEAAAAAAAUgAgEODhgBAApNeVRlbXBs
YXRlCDEwLjAuMC4wAAAGFRIYARIMBhUSGAESCAYVEhgBEhEGFRIYARIUBAcBEgwEBwESCAQHARIR
BAcBEhQEIAEBDhMBAA5NeS5BcHBsaWNhdGlvbgAAEAEAC015LkNvbXB1dGVyAAATAQAOTXkuV2Vi
U2VydmljZXMAAAwBAAdNeS5Vc2VyAAAEAAEcHAMHAQIDBwEIBgABEhURXQQHARIVAwcBDgUQAQAe
AAQKAR4ABAcBHgAHIAQBDg4ODmEBADRTeXN0ZW0uV2ViLlNlcnZpY2VzLlByb3RvY29scy5Tb2Fw
SHR0cENsaWVudFByb3RvY29sEkNyZWF0ZV9fSW5zdGFuY2VfXxNEaXNwb3NlX19JbnN0YW5jZV9f
AAAABhUSGAETAAYVEhkBEwAECgETAAUgAQETAAgHAxMAEwATAAQgAQECBQEAAAAABCAAEm0GIAIB
DhJtBgcCEh0SHQQHARIhCAEAAgAAAAAABAABARwEBwESIAQgABJ9BSAAEoCBBQABARJ5BAcBEnkC
Bg4GIAESgJ0cAyAAHAQAAQ4cByADAQ4IHQUFAAIODg4HIAIBDhKAkQQgABIxBiABARGAqQYgAQES
gJEGIAISNQgIAyAAAgUgABKArQYAAw4ODg4IIAUCCA4ODggeBw4SgI0OEoCRDh0FEoCVEoCNDhIx
EoCRDhI1CBJ5BSABEjUOBCABHAgEAAECHAYAARGAsRwGIAEOEoC9ByACDg4SgL0FIAESNQgHAAIO
HBKAvQoHBQgRgLESNQgIBQcCEjUOBCABAQgIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRp
b25UaHJvd3MBRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNw
bGF5TmFtZRAuTkVUIEZyYW1ld29yayA0DAEABzEuMC4wLjAAACkBACRmMDg0MWE4Zi1jN2VkLTQ3
NzctYWQ4OS00ODcxZDRlZGZhZDUAAAUBAAEAABgBABNDb3B5cmlnaHQgQCBNUyAyMDA4AAA3AQAy
U2NyaXB0VGFza180NDRjMGRiYTQxZjU0Mzg5YThjZDg4NzU2NzU4M2Y4ZS52YnByb2oAAAcBAAJN
UwAAACRHAAAAAAAAAAAAAD5HAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwRwAAAAAAAAAAAAAA
AF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAY
AACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAACwE
AAAAAAAAAAAAACwENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAAB
AAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIA
RgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsASM
AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABoAwAAAQAwADAAMAAwADAANABiADAA
AAAoAAMAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAE0AUwAAAAAAkAAzAAEARgBpAGwAZQBE
AGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAYwByAGkAcAB0AFQAYQBzAGsAXwA0ADQANABjADAA
ZABiAGEANAAxAGYANQA0ADMAOAA5AGEAOABjAGQAOAA4ADcANQA2ADcANQA4ADMAZgA4AGUALgB2
AGIAcAByAG8AagAAAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAA
LgAwAAAAkAA3AAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAGMAcgBpAHAAdABUAGEAcwBr
AF8ANAA0ADQAYwAwAGQAYgBhADQAMQBmADUANAAzADgAOQBhADgAYwBkADgAOAA3ADUANgA3ADUA
OAAzAGYAOABlAC4AdgBiAHAAcgBvAGoALgBkAGwAbAAAAAAATAAUAAEATABlAGcAYQBsAEMAbwBw
AHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAATQBTACAAMgAwADAAOAAAAJgA
NwABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAGMAcgBpAHAAdABUAGEAcwBr
AF8ANAA0ADQAYwAwAGQAYgBhADQAMQBmADUANAAzADgAOQBhADgAYwBkADgAOAA3ADUANgA3ADUA
OAAzAGYAOABlAC4AdgBiAHAAcgBvAGoALgBkAGwAbAAAAAAAiAAzAAEAUAByAG8AZAB1AGMAdABO
AGEAbQBlAAAAAABTAGMAcgBpAHAAdABUAGEAcwBrAF8ANAA0ADQAYwAwAGQAYgBhADQAMQBmADUA
NAAzADgAOQBhADgAYwBkADgAOAA3ADUANgA3ADUAOAAzAGYAOABlAC4AdgBiAHAAcgBvAGoAAAAA
ADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgA
AQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAABQNwAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Archiving relationship data"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Archiving the completed relationship data"
          DTS:DTSID="{7FFAC4C3-2796-4AE1-AC56-1195FC36DA91}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Archiving relationship data"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <ScriptProject
              Name="ScriptTask_66f3d53e85be426a93dd24ee53285849"
              VSTAMajorVersion="14"
              VSTAMinorVersion="0"
              Language="VisualBasic"
              ReadOnlyVariables="PrimaryImportServer,PrimaryImportDatabase,ArchivingServer,ArchivingDatabase,SourceRelationshipTable,DestinationRelationshipTable">
              <ProjectItem
                Name="My Project\AssemblyInfo.vb"
                Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ScriptTask_66f3d53e85be426a93dd24ee53285849.vbproj")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("MS")> 
<Assembly: AssemblyProduct("ScriptTask_66f3d53e85be426a93dd24ee53285849.vbproj")> 
<Assembly: AssemblyCopyright("Copyright @ MS 2008")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("91d18c62-9143-4a6b-af3c-b33dd934537c")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
              <ProjectItem
                Name="scripttask_66f3d53e85be426a93dd24ee53285849.vbproj"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <RootNamespace>ScriptTask_66f3d53e85be426a93dd24ee53285849.vbproj</RootNamespace>
    <AssemblyName>ScriptTask_66f3d53e85be426a93dd24ee53285849.vbproj</AssemblyName>
    <StartupObject></StartupObject>
    <OptionExplicit>On</OptionExplicit>
    <OptionCompare>Binary</OptionCompare>
    <OptionStrict>Off</OptionStrict>
    <OptionInfer>On</OptionInfer>
    <ProjectGuid>{254D2FD9-B33E-41EE-A793-253AD7A93FD6}</ProjectGuid>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <!-- Visual Basic supports Importing namespaces (equivalent to using statements in C#).-->
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.designer.vb">
      <DependentUpon>ScriptMain.Designer.xml</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
    <None Include="ScriptMain.Designer.xml">
      <DependentUpon>ScriptMain.vb</DependentUpon>
    </None>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="SSIS_ScriptTask">
          <HostItem Name="ScriptMain" Code="ScriptMain.vb" CanonicalName="ScriptMain" DisplayName="ScriptMain" Blueprint="ScriptMain.Designer.xml" GeneratedCode="ScriptMain.designer.vb" />
        </Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
  <PropertyGroup>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.Designer.xml"
                Encoding="UTF8"><![CDATA[<hostitem:hostItem hostitem:identifier="ScriptMain" hostitem:namespace="" hostitem:primaryCookie="ScriptMain" hostitem:baseType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTAProxy.VSTARTScriptObjectModelBaseEntryPoint" hostitem:interfaceType="Microsoft.VisualStudio.Tools.Applications.Runtime.IEntryPoint" hostitem:displayName="ScriptMain" hostitem:generateCode="true" hostitem:startupIndex="0" xmlns:hostitem="http://schemas.microsoft.com/2006/VisualStudio/Tools/Applications/HostItem.xsd" />]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>scripttask_66f3d53e85be426a93dd24ee53285849</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:NoContent>Reference;Import;Folder</msb:NoContent>
		<msb:ProjectId>{13201AE8-3C1E-44FC-BC7E-6AEEEC4489D1}</msb:ProjectId>
		<msb:DisplayName>scripttask_66f3d53e85be426a93dd24ee53285849</msb:DisplayName>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="ScriptMain.designer.vb"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:File Include="ScriptMain.Designer.xml"/>
		<msb:Project Include="scripttask_66f3d53e85be426a93dd24ee53285849.vbproj"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.vb"
                Encoding="UTF8"><![CDATA['<copyright file="DataMaintenanceScriptTask" company="Microsoft">
' Copyright (c) 1998-2006 Microsoft Corporation. All rights reserved. 
'  
' THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, 
' WHETHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED 
' WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE. 
' THE ENTIRE RISK OF USE OR RESULTS IN CONNECTION WITH THE USE OF THIS CODE 
' AND INFORMATION REMAINS WITH THE USER. 
'</copyright>

Imports System
Imports System.Collections.Specialized
Imports System.Data.SqlClient
Imports System.Globalization
Imports System.Text
Imports Microsoft.SqlServer.Dts.Runtime

<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute> _
Partial Class ScriptMain

	Private Sub ScriptMain_Startup(ByVal sender As Object, ByVal e As System.EventArgs)

	End Sub

	Private Sub ScriptMain_Shutdown(ByVal sender As Object, ByVal e As System.EventArgs)

		Try
			' Unlock variables from the read-only and read-write variable collection properties
			If (Dts.Variables.Count <> 0) Then
				Dts.Variables.Unlock()
			End If
		Catch ex As Exception
		End Try
	End Sub

	Enum ScriptResults
		Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
		Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
	End Enum

    ' The DTS execution engine calls this method when the task executes.
    ' To access the DTS object model, use the Dts object. Connections, variables, events,
    ' and logging features are available as static members of the Dts class.
    ' Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
    ' 
    ' To open Code and Text Editor Help, press F1.
    ' To open Object Browser, press Ctrl+Alt+J.

    Public Sub Main()
        Const PrimaryImportServer As String = "PrimaryImportServer"
        Const PrimaryImportDatabase As String = "PrimaryImportDatabase"
        Const ArchivingServer As String = "ArchivingServer"
        Const ArchivingDatabase As String = "ArchivingDatabase"
        Const SourceTable As String = "SourceRelationshipTable"
        Const DestinationTable As String = "DestinationRelationshipTable"
        Const LocalizedResources As String = "LocalizedResources"
        Const BatchSize As Integer = 100
        Dim primaryImportConnectionString As String
        Dim archiveConnectionString As String
        Dim sourceTableName As String
        Dim destinationTableName As String
        Dim localizedResourcesContainer As StringDictionary
        Dim primaryImportSqlConnection As SqlConnection
        Dim archiveSqlConnection As SqlConnection
        Dim primaryImportCommand As SqlCommand
        Dim archiveCommand As SqlCommand
        Dim primaryImportReader As SqlDataReader
        Dim emptyBytes(0) As Byte

        primaryImportConnectionString = CreateConnectionString(CStr(Dts.Variables(PrimaryImportServer).Value), _
            CStr(Dts.Variables(PrimaryImportDatabase).Value))
        archiveConnectionString = CreateConnectionString(CStr(Dts.Variables(ArchivingServer).Value), _
            CStr(Dts.Variables(ArchivingDatabase).Value))
        sourceTableName = CStr(Dts.Variables(SourceTable).Value)
        destinationTableName = CStr(Dts.Variables(DestinationTable).Value)
        'localizedResourcesContainer = Dts.Variables(LocalizedResources).Value
        primaryImportSqlConnection = New SqlConnection(primaryImportConnectionString)
        archiveSqlConnection = New SqlConnection(archiveConnectionString)
        Try
            Dts.Log("Starting relationship Archive", 0, emptyBytes)
            primaryImportSqlConnection.Open()
            primaryImportCommand = New SqlCommand("select * from " + sourceTableName, primaryImportSqlConnection)
            primaryImportReader = primaryImportCommand.ExecuteReader()
            archiveSqlConnection.Open()
            archiveCommand = New SqlCommand()
            archiveCommand.CommandType = Data.CommandType.Text
            archiveCommand.Connection = archiveSqlConnection
            Dim insertStatement As StringBuilder
            insertStatement = New StringBuilder()
            Dim recordCount As Integer
            While (primaryImportReader.Read())
                recordCount = recordCount + 1
                AppendInsertStatement(primaryImportReader, destinationTableName, insertStatement)
                If (recordCount = BatchSize) Then
                    archiveCommand.CommandText = insertStatement.ToString()
                    archiveCommand.ExecuteNonQuery()
                    insertStatement = insertStatement.Remove(0, insertStatement.Length)
                    recordCount = 0
                End If
            End While
            If (insertStatement.Length > 0) Then
                archiveCommand.CommandText = insertStatement.ToString()
                archiveCommand.ExecuteNonQuery()
            End If

        Catch ex As Exception
            Dts.Events.FireError(0, "", ex.Message & ControlChars.CrLf & ex.StackTrace, "", 0)
        Finally
            If Not (primaryImportReader Is Nothing) Then
                primaryImportReader.Close()
            End If
            If Not (primaryImportSqlConnection Is Nothing) Then
                primaryImportSqlConnection.Close()
            End If
            If Not (archiveSqlConnection Is Nothing) Then
                archiveSqlConnection.Close()
            End If
        End Try

    End Sub

    Private Sub AppendInsertStatement(ByVal dataReader As SqlDataReader, ByVal destinationTableName As String, ByVal insertStatement As StringBuilder)

        Dim i As Integer
        insertStatement.Append("insert " + destinationTableName + " values(")
        ' we skip 0 because that is RecordId
        For i = 0 To dataReader.FieldCount - 1
            If (dataReader.Item(i) Is Nothing) Or IsDBNull(dataReader.Item(i)) Then
                insertStatement.Append(" null,")
            Else
                If (TypeOf dataReader.Item(i) Is System.DateTime) Then
                    Dim dt As DateTime
                    Dim sb As StringBuilder
                    dt = CType(dataReader.Item(i), DateTime)
                    sb = New StringBuilder(" '")
                    sb.Append(dt.Year.ToString(CultureInfo.InvariantCulture))
                    sb.Append(dt.Month.ToString("d2", CultureInfo.InvariantCulture))
                    sb.Append(dt.Day.ToString("d2", CultureInfo.InvariantCulture))
                    sb.Append(" ")
                    sb.Append(dt.Hour)
                    sb.Append(":")
                    sb.Append(dt.Minute)
                    sb.Append(":")
                    sb.Append(dt.Second)
                    sb.Append(":")
                    sb.Append(dt.Millisecond)
                    sb.Append("',")
                    insertStatement.Append(sb.ToString())
                ElseIf (TypeOf dataReader.Item(i) Is String) Then
                    insertStatement.Append(" N'" + EscapeQuotes(dataReader.Item(i).ToString()) + "',")
                Else
                    insertStatement.Append(" '" + EscapeQuotes(Convert.ToString(dataReader.Item(i), CultureInfo.InvariantCulture)) + "',")
                End If
            End If
        Next
        insertStatement.Remove(insertStatement.Length - 1, 1)
        insertStatement.AppendLine(")")
    End Sub

    Private Function EscapeQuotes(ByVal s As String) As String
        If (s Is Nothing) Then
            EscapeQuotes = Nothing
        Else
            EscapeQuotes = s.Replace("'", "''") ' Security mitigation, don't allow ' in the generated SQL
        End If
    End Function

    Private Function CreateConnectionString(ByVal server As String, ByVal database As String) As String

        Dim connectionString As StringBuilder
        connectionString = New StringBuilder()
        connectionString.Append("Data Source=")
        connectionString.Append(server)
        connectionString.Append(";Initial Catalog=")
        connectionString.Append(database)
        connectionString.Append(";Integrated Security=SSPI;Persist Security Info=false;Application Name=Data Maintenance DTS;")
        CreateConnectionString = connectionString.ToString()
    End Function

End Class]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.designer.vb"
                Encoding="UTF8"><![CDATA[<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
	Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
End Class]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
              <BinaryItem
                Name="ScriptTask_66f3d53e85be426a93dd24ee53285849.vbproj.dll">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
AAAAAOQAAADDAAAApwEAAEQAAAAeAAABAgAAAOQAAAAHAQAA6wEAACAAAAAAAAAAEzAFAPIBAAAZ
AAARBXKXAQBwBHKnAQBwKEEAAApvRQAACiYWA29GAAAKF9oNCjinAQAAAwZvRwAAChT+AQMGb0cA
AAooEQAACihIAAAKYCwRBXK5AQBwb0UAAAomOHQBAAADBm9HAAAKdSwAAAE5+QAAAAMGb0cAAAoo
SQAACgtyxwEAcHNKAAAKDAgSAShLAAAKEwQSBChMAAAKKE0AAApvRQAACiYIEgEoTgAAChMEEgRy
zQEAcChMAAAKKE8AAApvRQAACiYIEgEoUAAAChMEEgRyzQEAcChMAAAKKE8AAApvRQAACiYIctMB
AHBvRQAACiYIEgEoUQAACm9SAAAKJghy1wEAcG9FAAAKJggSAShTAAAKb1IAAAomCHLXAQBwb0UA
AAomCBIBKFQAAApvUgAACiYIctcBAHBvRQAACiYIEgEoVQAACm9SAAAKJghy2wEAcG9FAAAKJgUI
bzgAAApvRQAACiYragMGb0cAAAp1KQAAASwqBXLhAQBwAgMGb0cAAApvFQAACm8dAAAGctsBAHAo
QQAACm9FAAAKJisyBXLHAQBwAgMGb0cAAAooEQAACihMAAAKKFYAAApvHQAABnLbAQBwKEEAAApv
RQAACiYGF9YKBgk+Uv7//wUFbzsAAAoX2hdvPAAACiYFcukBAHBvVwAACiYqAAATMAMAGgAAABoA
ABEDLQQUCisRA3LtAQBwcvEBAHBvWAAACgoGKgAAEzACAEMAAAAbAAARczcAAAoKBnL3AQBwb0UA
AAomBgNvRQAACiYGchECAHBvRQAACiYGBG9FAAAKJgZyNQIAcG9FAAAKJgZvOAAACgsHKrQAAADO
yu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZl
cnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5
MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFE
UEFEULQAAAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAA4AkAACN+AABMCgAA
yAwAACNTdHJpbmdzAAAAABQXAADwAgAAI1VTAAQaAAAQAAAAI0dVSUQAAAAUGgAAgAQAACNCbG9i
AAAAAAAAAAIAAAFXHaIJCQ8AAAD6JTMAFgAAAQAAAD0AAAAKAAAADAAAAB4AAAAOAAAAZQAAAAIA
AAA2AAAAGwAAAAQAAAAIAAAACQAAAAkAAAABAAAABgAAAAEAAAADAAAAAwAAAAIAAAAAAJEMAQAA
AAAACgB4AU4BCgCsAY4BBgC8AbUBCgAUAk4BBgCSArUBCgAUA+oCBgBKAzkDBgB3A2IDDgDeA8kD
EgBdBDQEBgB5BLUBFgDaBMQEBgD0BOgEBgB+BbUBDgCxBZsFDgDKBZsFDgD3Bd8FBgAhBg4GCgBg
BjkGCgB4BhMADgCtBpAGBgDiBsIGBgAAB7UBBgAkB7UBCgA9BxMABgCBB2IHBgCnB5UHBgDOB70H
BgDhBw4GBgD+B7UBEgAICDQEGgBhCEEIGgB5CEEICgCkCDkGFgDSCMQEFgDdCMQEDgAKCesIBgAb
CbUBGgAgCUEICgAyCTkGBgBHCbUBFgBjCbgEEgDFCTQEBgAPCrUBCgAuChMABgBoCrUBBgBuCrUB
BgC/CrUBBgDaCrUBEgDwCjQEBgBZC8IGBgB5C8IGBgCxC5cLBgDKC5UHBgDnC2IHBgD1C5UHBgAQ
DJUHBgArDJUHBgBEDJUHBgBdDJUHBgB6DJUHAAAAAAEAAAAAAAEAAQAAAAAAKQA3AAUAAQABAAAA
AABtADcACQABAAIAAAEQAHgANwANAAEAAwAFAQAAggAAAA0ABQAIAAUBAACQAAAADQAFAA8AAAAA
AKsAtwANAAYAEQAAARAA9wACASUACAAVAAEAAAA1AQIBKQAKABgAAgEAAEABAAA5AAoAHwAxANcB
IAAxAAACLQAxACICOgAxAEcCRwAhACMDkAARAFoDnQARAIMDoQARAPYDvwARAP4DwwAGBoMF9ABW
gIsF9wBWgJMF9wBQIAAAAAAGGIgBEwABAFggAAAAAAYYiAETAAEAYCAAAAAAERjDARcAAQCMIAAA
AAATCMoBGwABAKQgAAAAABMI8AEoAAEAvCAAAAAAEwgZAjUAAQDUIAAAAAATCDcCQgABAOwgAAAA
AEYCfQJjAAEACCEAAAAARgKGAmgAAgAcIQAAAACDAJcCbAACADQhAAAAAEYCnwJxAAIASCEAAAAA
EQCoAngAAgBkIQAAAAABAMYCgAADAIAhAAAAAAYYiAETAAQAiCEAAAAAAwjaAosABAC8IQAAAAAG
GIgBEwAEANAhAAAAAAMYiAETAAQA2CEAAAAAFgiPA6UABAAUIgAAAAAWCKMDqgAEACgiAAAAABYI
rwOvAAQAMCIAAAAAERjDARcABQBEIgAAAAAGGIgBEwAFAEwiAAAAABYICwTGAAUAqCIAAAAABhiI
ARMABQCwIgAAAAABAIME2QAFALQiAAAAAAEAnwTZAAcABCMAAAAABgCzBBMACQBQJQAAAAABAAIF
4AAJAFAnAAAAAAEASAXpAAwAeCcAAAAAAQBXBe4ADQAAAAEAhAIAAAEAvQIAAAEAvQIAAAEAuwMA
AAEAlgQAAAIAnQQAAAEAlgQAAAIAnQQAAAEAGAUAAAIAIwUAAAMAOAUAAAEAVQUAAAEAbgUAAAIA
dQUJAIgBEwB5AIgBBQGJAIgBFAERAIgBEwCRAIgBEwAkAIgBEwAsAIgBEwA0AIgBEwA8AIgBEwAk
ANoCiwAsANoCiwA0ANoCiwA8ANoCiwCZAIgBEwChAIgBEwCpAIgBYwGxAPEGrgEZAH0CYwAZAIYC
aAApABIHuwEZAJ8CcQDBAC4HywEZAIgBEwDJAIgB2wFEACMDkABMAAsEiwBMAFgHWAJMAIgBEwDR
AIgBZwIpALAHcgI5AIgBdwJJAIgBEwDhANYHkwLhANwHkwLpAIgBEwBRAIgBEwBRABoInQL5AGsI
ogIJAZMIaAABAZ0IEwARAbAIqAIRAcAIFwABASkJtgI5AQsEvQJBAZ8CwQIhAYgBYwH5AD4JxgIh
AUIJEwBJAU4JzgIZAYgB1AIZAVUJ3AIZAYgBEwAZAW8J4QIZAX8J6AJpAIgBEwBpAJ8CcQAZAY4J
YwEZAZ4JaABpAK4JaABpALkJ7wJhAMAJ9gL5ANkJ+gLxAOQJcQDxAPAJcQBJAU4JAANZAf8JBwNh
AAkKEwAhAQkKEwBpABgKLwNhAB8KaABhACkJNQNpAToKOgNBAUMKPwNpAIgBYwFhAUoKaABBAFMK
qgBxAZ8CRgNhAX4KaABxAZ8CTQNhAYgKaABhAZAKaABpABgKVQNhAZkKaABhAaQKaABhAa8KaACB
AZ8CWwNpAMcKLwNJAdIK7gCJAYgBZwKRAYgBEwCZAYgBdAOhAYgBEwCpAYgBYwGxAYgBYwG5AYgB
YwHBAYgBYwHJAYgBYwHRAYgBYwHZAYgBYwHhAYgBYwHpAYgBYwEIACwA+wAIADAAAAEpAIMAfAEu
ACMDbAIuABsDdwQuAPMC6QMuABMDPwQuACsDPwQuANsCeQMuAOMCggMuAOsCoQMuAPsC9gMuAOsA
bAIuAMsCIAQuAAMDbAIuAAsDJgRAACsAAAFAABMACwFDABMACwFDABsAGgFJAIMAaAFjABMACwFj
ABsAGgFpAIMAoQGAACsAAAGDAHsAAAGDAHMAAAGDABsAGgGJAIMAjQGgACsAAAGjAMMA4wGjABMA
CwHAACsAAAHDABMACwHDAOsAbALJABMAigLgACsAAAHpABMAigIAARMACwEAASsAAAEJARsBAAEg
ARMACwEgASsAAAEjAcsCbAIjAdMCAAFAARMACwFAASsAAAFgARMACwFgASsAAAGAASsAAAGgASsA
AAHAASsAAAHAARMACwHgASsAAAEAAisAAAEAAhMACwFPAVQBWQFeAbMBtwHCAccB1gHWAV4CfgKF
ApgCrgKzArMC9ACzArMCswKzArMCEANjA8cBbgMEAAEABgAFAAcABgAIAAgAAACsAU8AAABlAlQA
AAAUAlkAAABxAl4AAAAtA5gAAABKA7UAAADBA7oAAAC7A8sAAgAEAAMAAgAFAAUAAgAGAAcAAgAH
AAkAAgAPAAsAAgASAA0AAgATAA8AAQAUAA8AAgAXABEAdQB1AIgAMwE6AUEBSAFFAkwCBIAAAAEA
AAAAAAAAAAAAAAAAAgEAAAQAAAAAAAAAAAAAAAEACgAAAAAACgAAAAAAAAAAAAAACgATAAAAAAAE
AAAAAAAAAAAAAAABALUBAAAAAA0AAAAAAAAAAAAAANAAFQQAAAAABAAAAAAAAAAAAAAAAQC4BAAA
AAANAAAAAAAAAAAAAADQACIIAAAAAAAAAAABAAAAEgsAAAUABAAGAAQACgAJAAAAEAAMALsCAAAQ
ABkAuwIAAAAAGwC7Ai0A0QEtAFMCAAAAPE1vZHVsZT4AbXNjb3JsaWIATWljcm9zb2Z0LlZpc3Vh
bEJhc2ljAE15QXBwbGljYXRpb24AU2NyaXB0VGFza182NmYzZDUzZTg1YmU0MjZhOTNkZDI0ZWU1
MzI4NTg0OS52YnByb2ouTXkATXlDb21wdXRlcgBNeVByb2plY3QATXlXZWJTZXJ2aWNlcwBUaHJl
YWRTYWZlT2JqZWN0UHJvdmlkZXJgMQBNeVJlc291cmNlcwBTY3JpcHRUYXNrXzY2ZjNkNTNlODVi
ZTQyNmE5M2RkMjRlZTUzMjg1ODQ5LnZicHJvai5NeS5SZXNvdXJjZXMATXlTZXR0aW5ncwBTY3Jp
cHRUYXNrXzY2ZjNkNTNlODViZTQyNmE5M2RkMjRlZTUzMjg1ODQ5LnZicHJvagBTY3JpcHRNYWlu
AFNjcmlwdFJlc3VsdHMATWljcm9zb2Z0LlZpc3VhbEJhc2ljLkFwcGxpY2F0aW9uU2VydmljZXMA
QXBwbGljYXRpb25CYXNlAC5jdG9yAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5EZXZpY2VzAENvbXB1
dGVyAFN5c3RlbQBPYmplY3QALmNjdG9yAGdldF9Db21wdXRlcgBtX0NvbXB1dGVyT2JqZWN0UHJv
dmlkZXIAZ2V0X0FwcGxpY2F0aW9uAG1fQXBwT2JqZWN0UHJvdmlkZXIAVXNlcgBnZXRfVXNlcgBt
X1VzZXJPYmplY3RQcm92aWRlcgBnZXRfV2ViU2VydmljZXMAbV9NeVdlYlNlcnZpY2VzT2JqZWN0
UHJvdmlkZXIAQXBwbGljYXRpb24AV2ViU2VydmljZXMARXF1YWxzAG8AR2V0SGFzaENvZGUAVHlw
ZQBHZXRUeXBlAFRvU3RyaW5nAENyZWF0ZV9fSW5zdGFuY2VfXwBUAGluc3RhbmNlAERpc3Bvc2Vf
X0luc3RhbmNlX18AZ2V0X0dldEluc3RhbmNlAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5NeVNlcnZp
Y2VzLkludGVybmFsAENvbnRleHRWYWx1ZWAxAG1fQ29udGV4dABHZXRJbnN0YW5jZQBTeXN0ZW0u
UmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgBfcmVzTWdyAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1
bHR1cmVJbmZvAF9yZXNDdWx0dXJlAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0
X0N1bHR1cmUAVmFsdWUAQ3VsdHVyZQBTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNl
dHRpbmdzQmFzZQBtX1ZhbHVlAG1fU3luY09iamVjdABnZXRfVmFsdWUATWljcm9zb2Z0LlNxbFNl
cnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sA
VlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEV2ZW50QXJncwBTY3JpcHRNYWluX1N0YXJ0dXAA
c2VuZGVyAGUAU2NyaXB0TWFpbl9TaHV0ZG93bgBNYWluAFN5c3RlbS5EYXRhAFN5c3RlbS5EYXRh
LlNxbENsaWVudABTcWxEYXRhUmVhZGVyAFN5c3RlbS5UZXh0AFN0cmluZ0J1aWxkZXIAQXBwZW5k
SW5zZXJ0U3RhdGVtZW50AGRhdGFSZWFkZXIAZGVzdGluYXRpb25UYWJsZU5hbWUAaW5zZXJ0U3Rh
dGVtZW50AEVzY2FwZVF1b3RlcwBzAENyZWF0ZUNvbm5lY3Rpb25TdHJpbmcAc2VydmVyAGRhdGFi
YXNlAEVudW0AdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVk
aXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBTeXN0ZW0uQ29kZURv
bS5Db21waWxlcgBHZW5lcmF0ZWRDb2RlQXR0cmlidXRlAFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1
Z2dlckhpZGRlbkF0dHJpYnV0ZQBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuQ29tcGlsZXJTZXJ2aWNl
cwBTdGFuZGFyZE1vZHVsZUF0dHJpYnV0ZQBIaWRlTW9kdWxlTmFtZUF0dHJpYnV0ZQBTeXN0ZW0u
Q29tcG9uZW50TW9kZWwuRGVzaWduAEhlbHBLZXl3b3JkQXR0cmlidXRlAFN5c3RlbS5SdW50aW1l
LkNvbXBpbGVyU2VydmljZXMAUnVudGltZUhlbHBlcnMAR2V0T2JqZWN0VmFsdWUAUnVudGltZVR5
cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQWN0aXZhdG9yAENyZWF0ZUluc3RhbmNlAE15R3Jv
dXBDb2xsZWN0aW9uQXR0cmlidXRlAHNldF9WYWx1ZQBTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2Vy
dmljZXMAQ29tVmlzaWJsZUF0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseQBnZXRf
QXNzZW1ibHkAU3lzdGVtLlRocmVhZGluZwBNb25pdG9yAEVudGVyAEV4aXQARGVidWdnZXJOb25V
c2VyQ29kZUF0dHJpYnV0ZQBFeGNlcHRpb24AU2NyaXB0T2JqZWN0TW9kZWwAZ2V0X0R0cwBNaWNy
b3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGlt
ZQBWYXJpYWJsZXMAZ2V0X1ZhcmlhYmxlcwBEVFNSZWFkT25seUNvbGxlY3Rpb25CYXNlAGdldF9D
b3VudABVbmxvY2sAUHJvamVjdERhdGEAU2V0UHJvamVjdEVycm9yAENsZWFyUHJvamVjdEVycm9y
AFNxbENvbW1hbmQAU3FsQ29ubmVjdGlvbgBTeXN0ZW0uQ29sbGVjdGlvbnMuU3BlY2lhbGl6ZWQA
U3RyaW5nRGljdGlvbmFyeQBCeXRlAFZhcmlhYmxlAGdldF9JdGVtAENvbnZlcnNpb25zAExvZwBP
cGVuAFN0cmluZwBDb25jYXQARXhlY3V0ZVJlYWRlcgBDb21tYW5kVHlwZQBzZXRfQ29tbWFuZFR5
cGUAc2V0X0Nvbm5lY3Rpb24Ac2V0X0NvbW1hbmRUZXh0AEV4ZWN1dGVOb25RdWVyeQBnZXRfTGVu
Z3RoAFJlbW92ZQBSZWFkAEV2ZW50c09iamVjdFdyYXBwZXIAZ2V0X0V2ZW50cwBnZXRfTWVzc2Fn
ZQBnZXRfU3RhY2tUcmFjZQBGaXJlRXJyb3IAQ2xvc2UARGF0ZVRpbWUAQXBwZW5kAGdldF9GaWVs
ZENvdW50AEluZm9ybWF0aW9uAElzREJOdWxsAFRvRGF0ZQBnZXRfWWVhcgBnZXRfSW52YXJpYW50
Q3VsdHVyZQBJbnQzMgBJRm9ybWF0UHJvdmlkZXIAZ2V0X01vbnRoAGdldF9EYXkAZ2V0X0hvdXIA
Z2V0X01pbnV0ZQBnZXRfU2Vjb25kAGdldF9NaWxsaXNlY29uZABDb252ZXJ0AEFwcGVuZExpbmUA
UmVwbGFjZQBDTFNDb21wbGlhbnRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0
cmlidXRlAFNjcmlwdFRhc2tfNjZmM2Q1M2U4NWJlNDI2YTkzZGQyNGVlNTMyODU4NDkudmJwcm9q
LlJlc291cmNlcy5yZXNvdXJjZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50
aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRhcmdl
dEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUZpbGVWZXJzaW9uQXR0cmlidXRlAEd1aWRBdHRy
aWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1
dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3Nl
bWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAU2NyaXB0VGFz
a182NmYzZDUzZTg1YmU0MjZhOTNkZDI0ZWU1MzI4NTg0OS52YnByb2ouZGxsAAAxTQB5AC4AUgBl
AHMAbwB1AHIAYwBlAHMALgBNAHkAUgBlAHMAbwB1AHIAYwBlAHMAACdQAHIAaQBtAGEAcgB5AEkA
bQBwAG8AcgB0AFMAZQByAHYAZQByAAArUAByAGkAbQBhAHIAeQBJAG0AcABvAHIAdABEAGEAdABh
AGIAYQBzAGUAAB9BAHIAYwBoAGkAdgBpAG4AZwBTAGUAcgB2AGUAcgAAI0EAcgBjAGgAaQB2AGkA
bgBnAEQAYQB0AGEAYgBhAHMAZQAAL1MAbwB1AHIAYwBlAFIAZQBsAGEAdABpAG8AbgBzAGgAaQBw
AFQAYQBiAGwAZQAAOUQAZQBzAHQAaQBuAGEAdABpAG8AbgBSAGUAbABhAHQAaQBvAG4AcwBoAGkA
cABUAGEAYgBsAGUAADtTAHQAYQByAHQAaQBuAGcAIAByAGUAbABhAHQAaQBvAG4AcwBoAGkAcAAg
AEEAcgBjAGgAaQB2AGUAAB1zAGUAbABlAGMAdAAgACoAIABmAHIAbwBtACAAAAEABQ0ACgAAD2kA
bgBzAGUAcgB0ACAAABEgAHYAYQBsAHUAZQBzACgAAA0gAG4AdQBsAGwALAAABSAAJwABBWQAMgAA
AyAAAAM6AAAFJwAsAAEHIABOACcAAQMpAAADJwABBScAJwABGUQAYQB0AGEAIABTAG8AdQByAGMA
ZQA9AAAjOwBJAG4AaQB0AGkAYQBsACAAQwBhAHQAYQBsAG8AZwA9AACAuTsASQBuAHQAZQBnAHIA
YQB0AGUAZAAgAFMAZQBjAHUAcgBpAHQAeQA9AFMAUwBQAEkAOwBQAGUAcgBzAGkAcwB0ACAAUwBl
AGMAdQByAGkAdAB5ACAASQBuAGYAbwA9AGYAYQBsAHMAZQA7AEEAcABwAGwAaQBjAGEAdABpAG8A
bgAgAE4AYQBtAGUAPQBEAGEAdABhACAATQBhAGkAbgB0AGUAbgBhAG4AYwBlACAARABUAFMAOwAA
ojdB4xzlP0+lILn8LQjWmwAIt3pcVhk04IkIsD9ffxHVCjoDIAABAwAAAQQAABIMBwYVEhgBEgwE
AAASCAcGFRIYARIIBAAAEhEHBhUSGAESEQQAABIUBwYVEhgBEhQECAASDAQIABIIBAgAEhEECAAS
FAQgAQIcAyAACAQgABIVAyAADgIeAAcQAQEeAB4ABzABAQEQHgACEwAEIAATAAcGFRIZARMABCgA
EwADBhIdAwYSIQQAABIdBAAAEiEFAAEBEiEECAASHQQIABIhAwYSIAIGHAQAABIgBAgAEiAIiYRd
zYCAzJEGIAIBHBItCCADARIxDhI1BCABDg4FIAIODg4CBggDBhEoBAAAAAAEAQAAAAUgAQERQQgB
AAEAAAAAAAUgAgEODhgBAApNeVRlbXBsYXRlCDEwLjAuMC4wAAAGFRIYARIMBhUSGAESCAYVEhgB
EhEGFRIYARIUBAcBEgwEBwESCAQHARIRBAcBEhQEIAEBDhMBAA5NeS5BcHBsaWNhdGlvbgAAEAEA
C015LkNvbXB1dGVyAAATAQAOTXkuV2ViU2VydmljZXMAAAwBAAdNeS5Vc2VyAAAEAAEcHAMHAQID
BwEIBgABEhURXQQHARIVAwcBDgUQAQAeAAQKAR4ABAcBHgAHIAQBDg4ODmEBADRTeXN0ZW0uV2Vi
LlNlcnZpY2VzLlByb3RvY29scy5Tb2FwSHR0cENsaWVudFByb3RvY29sEkNyZWF0ZV9fSW5zdGFu
Y2VfXxNEaXNwb3NlX19JbnN0YW5jZV9fAAAABhUSGAETAAYVEhkBEwAECgETAAUgAQETAAgHAxMA
EwATAAQgAQECBQEAAAAABCAAEm0GIAIBDhJtBgcCEh0SHQQHARIhCAEAAgAAAAAABAABARwEBwES
IAQgABJ9BSAAEoCBBQABARJ5BAcBEnkCBg4GIAESgJ0cAyAAHAQAAQ4cByADAQ4IHQUFAAIODg4H
IAIBDhKAkQQgABIxBiABARGAqQYgAQESgJEGIAISNQgIAyAAAgUgABKArQYAAw4ODg4IIAUCCA4O
DggeBw4SgI0OEoCRDh0FEoCVEoCNDhIxEoCRDhI1CBJ5BSABEjUOBCABHAgEAAECHAYAARGAsRwG
IAEOEoC9ByACDg4SgL0FIAESNQgHAAIOHBKAvQoHBQgRgLESNQgIBQcCEjUOBCABAQgIAQAIAAAA
AAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lv
bj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0DAEABzEuMC4w
LjAAACkBACQ5MWQxOGM2Mi05MTQzLTRhNmItYWYzYy1iMzNkZDkzNDUzN2MAAAUBAAEAABgBABND
b3B5cmlnaHQgQCBNUyAyMDA4AAA3AQAyU2NyaXB0VGFza182NmYzZDUzZTg1YmU0MjZhOTNkZDI0
ZWU1MzI4NTg0OS52YnByb2oAAAcBAAJNUwAAADxHAAAAAAAAAAAAAF5HAAAAIAAAAAAAAAAAAAAA
AAAAAAAAAAAAAABQRwAAAAAAAAAAAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwA
AAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAY
AACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAACwE
AAAAAAAAAAAAACwENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAAB
AAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIA
RgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsASM
AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABoAwAAAQAwADAAMAAwADAANABiADAA
AAAoAAMAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAE0AUwAAAAAAkAAzAAEARgBpAGwAZQBE
AGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAYwByAGkAcAB0AFQAYQBzAGsAXwA2ADYAZgAzAGQA
NQAzAGUAOAA1AGIAZQA0ADIANgBhADkAMwBkAGQAMgA0AGUAZQA1ADMAMgA4ADUAOAA0ADkALgB2
AGIAcAByAG8AagAAAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAA
LgAwAAAAkAA3AAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAGMAcgBpAHAAdABUAGEAcwBr
AF8ANgA2AGYAMwBkADUAMwBlADgANQBiAGUANAAyADYAYQA5ADMAZABkADIANABlAGUANQAzADIA
OAA1ADgANAA5AC4AdgBiAHAAcgBvAGoALgBkAGwAbAAAAAAATAAUAAEATABlAGcAYQBsAEMAbwBw
AHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAATQBTACAAMgAwADAAOAAAAJgA
NwABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAGMAcgBpAHAAdABUAGEAcwBr
AF8ANgA2AGYAMwBkADUAMwBlADgANQBiAGUANAAyADYAYQA5ADMAZABkADIANABlAGUANQAzADIA
OAA1ADgANAA5AC4AdgBiAHAAcgBvAGoALgBkAGwAbAAAAAAAiAAzAAEAUAByAG8AZAB1AGMAdABO
AGEAbQBlAAAAAABTAGMAcgBpAHAAdABUAGEAcwBrAF8ANgA2AGYAMwBkADUAMwBlADgANQBiAGUA
NAAyADYAYQA5ADMAZABkADIANABlAGUANQAzADIAOAA1ADgANAA5AC4AdgBiAHAAcgBvAGoAAAAA
ADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgA
AQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAABwNwAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Begin archiving"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:DelayValidation="True"
          DTS:Description="Starts archiving the data."
          DTS:DTSID="{9758DDAC-0C04-484B-9141-D777B943D75A}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:FailPackageOnFailure="True"
          DTS:LocaleID="-1"
          DTS:ObjectName="Begin archiving"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{2F54EC70-CACF-4E0A-A976-48BD1320F963}"
              SQLTask:SqlStatementSource="EXEC [dbo].[bam_Metadata_BeginArchiving] ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="NewParameterName"
                SQLTask:DtsVariableName="ActivityName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Checking for successful transfer"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Matching source and destination count. Also checking source and tables to be deleted"
          DTS:DTSID="{9B50DAF6-F5DF-46F4-BF74-6520CBCE129D}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Checking for successful transfer"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_98ca75470fdf40d3a417d7227f4c1a8f"
              VSTAMajorVersion="14"
              VSTAMinorVersion="0"
              Language="VisualBasic"
              ReadOnlyVariables="PrimaryImportServer,PrimaryImportDatabase,ArchivingServer,ArchivingDatabase,SourceInstanceTable,DestinationInstanceTable,SourceRelationshipTable,DestinationRelationshipTable,ActivityName">
              <ProjectItem
                Name="My Project\AssemblyInfo.vb"
                Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ST_98ca75470fdf40d3a417d7227f4c1a8f.vbproj")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("Microsoft")> 
<Assembly: AssemblyProduct("ST_98ca75470fdf40d3a417d7227f4c1a8f.vbproj")> 
<Assembly: AssemblyCopyright("Copyright @ Microsoft 2011")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("f8cdda8b-fe16-4946-a2c8-e6b58e4484d4")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.vb"
                Encoding="UTF8"><![CDATA['<copyright file="DataMaintenanceScriptTask" company="Microsoft">
' Copyright (c) 1998-2006 Microsoft Corporation. All rights reserved. 
'  
' THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, 
' WHETHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED 
' WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE. 
' THE ENTIRE RISK OF USE OR RESULTS IN CONNECTION WITH THE USE OF THIS CODE 
' AND INFORMATION REMAINS WITH THE USER. 
'</copyright>

Imports System
Imports System.Collections.Specialized
Imports System.Data.SqlClient
Imports System.Globalization
Imports System.Text
Imports Microsoft.SqlServer.Dts.Runtime

<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
    Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

    Enum ScriptResults
        Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
        Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
    End Enum

    ' The DTS execution engine calls this method when the task executes.
    ' To access the DTS object model, use the Dts object. Connections, variables, events,
    ' and logging features are available as static members of the Dts class.
    ' Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
    ' 
    ' To open Code and Text Editor Help, press F1.
    ' To open Object Browser, press Ctrl+Alt+J.

    Public Sub Main()
        Const PrimaryImportServer As String = "PrimaryImportServer"
        Const PrimaryImportDatabase As String = "PrimaryImportDatabase"
        Const ArchivingServer As String = "ArchivingServer"
        Const ArchivingDatabase As String = "ArchivingDatabase"
        Const SourceTable As String = "SourceInstanceTable"
        Const DestinationTable As String = "DestinationInstanceTable"
        Const SourceRelationshipsTable As String = "SourceRelationshipTable"
        Const DestinationRelationshipsTable As String = "DestinationRelationshipTable"
        Const ActivityName As String = "ActivityName"
        Dim primaryImportConnectionString As String
        Dim archiveConnectionString As String
        Dim sourceTableName As String
        Dim destinationTableName As String
        Dim sourceRealtionshipsTableName As String
        Dim destinationRealtionshipsTableName As String
        Dim primaryImportSqlConnection As SqlConnection
        Dim archiveSqlConnection As SqlConnection
        Dim primaryImportCommand As SqlCommand
        Dim archiveCommand As SqlCommand
        Dim sourceCount As Integer
        Dim destinationCount As Integer
        Dim emptyBytes(0) As Byte
        Dim instancePartitions As System.Collections.ArrayList
        Dim relationshipPartitions As System.Collections.ArrayList

        primaryImportConnectionString = CreateConnectionString(CStr(Dts.Variables(PrimaryImportServer).Value), _
            CStr(Dts.Variables(PrimaryImportDatabase).Value))
        archiveConnectionString = CreateConnectionString(CStr(Dts.Variables(ArchivingServer).Value), _
        CStr(Dts.Variables(ArchivingDatabase).Value))
        sourceTableName = CStr(Dts.Variables(SourceTable).Value)
        destinationTableName = CStr(Dts.Variables(DestinationTable).Value)
        sourceRealtionshipsTableName = CStr(Dts.Variables(SourceRelationshipsTable).Value)
        destinationRealtionshipsTableName = CStr(Dts.Variables(DestinationRelationshipsTable).Value)
        primaryImportSqlConnection = New SqlConnection(primaryImportConnectionString)
        archiveSqlConnection = New SqlConnection(archiveConnectionString)
        Try
            'match the source and destination counts
            primaryImportSqlConnection.Open()
            primaryImportCommand = New SqlCommand("SELECT count(*) FROM " + sourceTableName, primaryImportSqlConnection)
            sourceCount = CInt(primaryImportCommand.ExecuteScalar())
            archiveSqlConnection.Open()
            archiveCommand = New SqlCommand("SELECT count(*) FROM " + destinationTableName, archiveSqlConnection)
            destinationCount = CInt(archiveCommand.ExecuteScalar())
            Dts.Log("Checking if the counts match", 0, emptyBytes)
            If (sourceCount <> destinationCount) Then
                Throw New Exception("SourceCount and DestinationCount mismatch. Source:" + sourceCount.ToString() + _
                     " Destination:" + destinationCount.ToString())
            End If

            'Also match the recordId's of all the tables for which the archiving is going on
            primaryImportCommand.CommandText = "SELECT InstancesTable,RelationshipsTable FROM [dbo].[bam_Metadata_Partitions] WHERE ActivityName = '" + _
            CStr(Dts.Variables(ActivityName).Value) + "' AND ArchivingInProgress = 1 AND ArchivedTime IS NULL"
            Using reader As SqlDataReader = primaryImportCommand.ExecuteReader()
                instancePartitions = New System.Collections.ArrayList
                relationshipPartitions = New System.Collections.ArrayList
                While reader.Read()
                    instancePartitions.Add(reader.GetValue(0))
                    relationshipPartitions.Add(reader.GetValue(1))
                End While
            End Using
            Dim index As Integer = instancePartitions.Count
            Dim totalInstancesCount As Integer = 0
            While (index > 0)
                index = index - 1
                primaryImportCommand.CommandText = "SELECT count(*) FROM [dbo].[" + CStr(instancePartitions.Item(index)) + "]"
                Dim instancesCount As Integer = CInt(primaryImportCommand.ExecuteScalar())
                totalInstancesCount += instancesCount
            End While
            If (sourceCount <> totalInstancesCount) Then
                Throw New Exception("Instances for archive view malformed. SourceCount and TotalPartitionCount mismatch. Source:" + sourceCount.ToString() + _
                     " totalInstancesCount:" + totalInstancesCount.ToString())
            End If

            primaryImportCommand.CommandText = "SELECT count(*) FROM " + sourceRealtionshipsTableName
            sourceCount = CInt(primaryImportCommand.ExecuteScalar())
            archiveCommand.CommandText = "SELECT count(*) FROM " + destinationRealtionshipsTableName
            destinationCount = CInt(archiveCommand.ExecuteScalar())
            Dts.Log("Checking if the relationship counts match", 0, emptyBytes)
            If (sourceCount <> destinationCount) Then
                Throw New Exception("SourceCount and DestinationCount for Relationships mismatch. Source:" + sourceCount.ToString() + _
                     " Destination:" + destinationCount.ToString())
            End If

            index = relationshipPartitions.Count
            totalInstancesCount = 0
            While (index > 0)
                index = index - 1
                primaryImportCommand.CommandText = "SELECT count(*) FROM [dbo].[" + CStr(relationshipPartitions.Item(index)) + "]"
                Dim instancesCount As Integer = CInt(primaryImportCommand.ExecuteScalar())
                totalInstancesCount += instancesCount
            End While
            If (sourceCount <> totalInstancesCount) Then
                Throw New Exception("Relationships for archive view malformed. SourceCount and TotalPartitionCount mismatch. Source:" + sourceCount.ToString() + _
                     " totalInstancesCount:" + totalInstancesCount.ToString())
            End If

        Catch ex As Exception
            Dts.Events.FireError(0, "", ex.Message & ControlChars.CrLf & ex.StackTrace, "", 0)
        Finally
            If Not (primaryImportSqlConnection Is Nothing) Then
                primaryImportSqlConnection.Close()
            End If
            If Not (archiveSqlConnection Is Nothing) Then
                archiveSqlConnection.Close()
            End If
        End Try

    End Sub

    Private Function CreateConnectionString(ByVal server As String, ByVal database As String) As String

        Dim connectionString As StringBuilder
        connectionString = New StringBuilder()
        connectionString.Append("Data Source=")
        connectionString.Append(server)
        connectionString.Append(";Initial Catalog=")
        connectionString.Append(database)
        connectionString.Append(";Integrated Security=SSPI;Persist Security Info=false;Application Name=Data Maintenance DTS;")
        CreateConnectionString = connectionString.ToString()
    End Function

End Class]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="st_98ca75470fdf40d3a417d7227f4c1a8f.vbproj"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <RootNamespace>ST_98ca75470fdf40d3a417d7227f4c1a8f.vbproj</RootNamespace>
    <AssemblyName>ST_98ca75470fdf40d3a417d7227f4c1a8f.vbproj</AssemblyName>
    <StartupObject></StartupObject>
    <OptionExplicit>On</OptionExplicit>
    <OptionCompare>Binary</OptionCompare>
    <OptionStrict>Off</OptionStrict>
    <OptionInfer>On</OptionInfer>
    <ProjectGuid>{E8E0E810-EF05-45BC-98EA-BB5D756A1E36}</ProjectGuid>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- Visual Basic supports Importing namespaces (equivalent to using statements in C#).-->
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="SSIS_ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
  <PropertyGroup>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Settings.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>st_98ca75470fdf40d3a417d7227f4c1a8f</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:NoContent>Reference;Import;Folder</msb:NoContent>
		<msb:ProjectId>{16D8E846-AACA-4D8B-851B-6327F0C08656}</msb:ProjectId>
		<msb:DisplayName>st_98ca75470fdf40d3a417d7227f4c1a8f</msb:DisplayName>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:Project Include="st_98ca75470fdf40d3a417d7227f4c1a8f.vbproj"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="My Project\Resources.Designer.vb"
                Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
              <BinaryItem
                Name="ST_98ca75470fdf40d3a417d7227f4c1a8f.vbproj.dll">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
KCkAAApyBAQAcCg0AAAKbzUAAAoRCG8uAAAKKC8AAAoTEhEQERLWExARDxYwvBEMERAuI3IIBABw
EgwoMQAACnLBBABwEhAoMQAACigyAAAKczMAAAp6EQhyjwEAcBENKCwAAApvNQAAChEIby4AAAoo
LwAAChMMBnKPAQBwEQQoLAAACm81AAAKBm8uAAAKKC8AAAoNAm8lAAAKcu0EAHAWEQZvMAAAChEM
CS4jckEFAHASDCgxAAAKclsCAHASAygxAAAKKDIAAApzMwAACnoRC288AAAKEw8WExArPxEPF9oT
DxEIcsoDAHARCxEPbz0AAAooKQAACnIEBABwKDQAAApvNQAAChEIby4AAAooLwAAChMTERARE9YT
EBEPFjC8EQwREC4jcswFAHASDCgxAAAKcsEEAHASECgxAAAKKDIAAApzMwAACnreWSUoPgAAChMU
Am8lAAAKbz8AAAoWco0GAHARFG9AAAAKco8GAHARFG9BAAAKKDQAAApyjQYAcBZvQgAACiYoQwAA
Ct4VEQosBxEKb0QAAAoILAYIb0QAAArcKkFMAAACAAAA7wEAAEUAAAA0AgAADAAAAAAAAAAAAAAA
JwEAAIsCAACyAwAARAAAAB8AAAECAAAAJwEAAM8CAAD2AwAAFQAAAAAAAAATMAIAQwAAABkAABFz
RQAACgoGcpUGAHBvRgAACiYGA29GAAAKJgZyrwYAcG9GAAAKJgYEb0YAAAomBnLTBgBwb0YAAAom
Bm9HAAAKCwcqtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVy
LCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
a2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQC
AAAAAAAAAAAAAABQQURQQURQtAAAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwA
AADsCAAAI34AAFgJAAAMCwAAI1N0cmluZ3MAAAAAZBQAAJAHAAAjVVMA9BsAABAAAAAjR1VJRAAA
AAQcAAA4BAAAI0Jsb2IAAAAAAAAAAgAAAVcdogkJDwAAAPolMwAWAAABAAAANwAAAAoAAAAMAAAA
GgAAAAYAAABUAAAAAgAAADYAAAAZAAAABAAAAAgAAAAJAAAACQAAAAEAAAAGAAAAAQAAAAMAAAAD
AAAAAgAAAAAA3AoBAAAAAAAKAGABNgEKAJQBdgEGAKQBnQEKAPwBNgEGAHoCnQEKAPwC0gIGADID
IQMGAF8DSgMOAMYDsQMSAEUEHAQGAI0EnQEOAMAEqgQOANkEqgQOAAYF7gQGADAFHQUKAG8FSAUK
AIcFEwAOALwFnwUGAPEF0QUGAA8GnQEGADMGnQEKAEwGEwAGAJAGcQYGALYGpAYGAN0GzAYGAPAG
HQUWAC8HGQcWADoHGQcGAFsHSAcWAGUHGQcGAHMHnQEGAH0HnQESAIIHHAQaANsHuwcaAPMHuwcK
AAUISAUGABYInQEGAEAInQEGAHYInQEKAJQISAUSALAIHAQGABgJDAkGAC0JnQESAEMJHAQGAKQJ
0QUGAMQJ0QUGAPwJ4gkGABUKpAYGADIKcQYGAEAKpAYGAFsKpAYGAHYKpAYGAI8KpAYGAKgKpAYG
AMUKpAYAAAAAAQAAAAAAAQABAAAAAAApADcABQABAAEAAAAAAGUANwAJAAEAAgAAARAAcAA3AA0A
AQADAAUBAAB6AAAADQAFAAgABQEAAIgAAAANAAUADwAAAAAAowCvAA0ABgARAAABEADnAPIAJQAI
ABUAAQAAAB0B8gApAAoAGAACAQAAKAEAAC0ACgAbADEAvwEgADEA6AEtADEACgI6ADEALwJHACEA
CwOQABEAQgOdABEAawOhABEA3gO/ABEA5gPDAAYGkgTfAFaAmgTiAFaAogTiAFAgAAAAAAYYcAET
AAEAWCAAAAAABhhwARMAAQBgIAAAAAARGKsBFwABAIwgAAAAABMIsgEbAAEApCAAAAAAEwjYASgA
AQC8IAAAAAATCAECNQABANQgAAAAABMIHwJCAAEA7CAAAAAARgJlAmMAAQAIIQAAAABGAm4CaAAC
ABwhAAAAAIMAfwJsAAIANCEAAAAARgKHAnEAAgBIIQAAAAARAJACeAACAGQhAAAAAAEArgKAAAMA
gCEAAAAABhhwARMABACIIQAAAAADCMICiwAEALwhAAAAAAYYcAETAAQA0CEAAAAAAxhwARMABADY
IQAAAAAWCHcDpQAEABQiAAAAABYIiwOqAAQAKCIAAAAAFgiXA68ABAAwIgAAAAARGKsBFwAFAEQi
AAAAAAYYcAETAAUATCIAAAAAFgjzA8YABQCoIgAAAAAGGHABEwAFALAiAAAAAAYAYQQTAAUAFCcA
AAAAAQBmBNkABQAAAAEAbAIAAAEApQIAAAEApQIAAAEAowMAAAEAfQQAAAIAhAQJAHABEwBhAHAB
8ABxAHAB/wARAHABEwB5AHABEwAkAHABEwAsAHABEwA0AHABEwA8AHABEwAkAMICiwAsAMICiwA0
AMICiwA8AMICiwCBAHABEwCJAHABEwCRAHABTgGZAAAGmQEZAGUCYwAZAG4CaAApACEGpgEZAIcC
cQCpAD0GtgEZAHABEwCxAHABxgFEAAsDkABMAPMDiwBMAGcGQwJMAHABEwC5AHABUgIpAL8GXQI5
AHABYgJJAHABEwDJAOUGfgLJAOsGfgLRAHABEwBRAHABEwBRAJQHiwIJAeUHkQIRAfwHlwIZAfMD
ngIhAYcCogLhAHABTgHhABEIEwApAR0IpwLZAHABrQLZACQIngIhATIItAIJATwIuQIxAYcCcQAp
AR0IwQL5AHABTgEpAR0IyQLZAEYITgHZAFYI0ALpAHABEwDxAGQI1QLpAG0I2gLxAHEI3wI5AYII
EwDpAIoIaADpAPwH1QJBAaAI4wIJAcQI6QL5AM8IcQD5ANsIcQBJAeoI7wJBAfQIFwDhAAYJEwBR
AXABEwBRASYJGQNRAYcCcQBZAXABUgJhAXABEwBpAXABJwNxAXABEwB5AXABTgGBAXABTgGJAXAB
TgGRAXABTgGZAXABTgGhAXABTgGpAXABTgGxAXABTgG5AXABTgEIACwA5gAIADAA6wApAIMAewEu
AIsC+QMuAKMC+QMuAIMC2QMuAFsCNQMuAGMCVAMuAHsCVwIuAJsCVwIuAFMCLAMuAJMCKQQuAGsC
nAMuAHMCqQMuAOsAVwIuAEMC0wNAACsA6wBAABMA9gBDABMA9gBDABsABQFJAIMAZwFjABMA9gBj
ABsABQFpAIMAjAGAACsA6wCDAHMA6wCDAHsA6wCDABsABQGJAIMAUwGgACsA6wCjAMMAzgGjABMA
9gDAACsA6wDDABMA9gDDAOsAVwLJABMAdQLgACsA6wDpABMAdQIAASsA6wAAARMA9gAJARsB6wAg
ASsA6wAgARMA9gAjAUMCVwIjAUsC6wBAARMA9gBAASsA6wBgARMA9gBgASsA6wCAASsA6wCgASsA
6wDAASsA6wDAARMA9gDgASsA6wAAAhMA9gAAAisA6wA6AT8BRAFJAZ4BogGtAbIBwQHBAUkCaQJw
AoMCiAKIAogCiAKIAogCiAKIAogC+AIgAwQAAQAGAAUABwAGAAgACAAAAJQBTwAAAE0CVAAAAPwB
WQAAAFkCXgAAABUDmAAAADIDtQAAAKkDugAAAKMDywACAAQAAwACAAUABQACAAYABwACAAcACQAC
AA8ACwACABIADQACABMADwABABQADwACABcAEQB1AHUAiAAeASUBLAEzATACNwIEgAAAAQAAAAAA
AAAAAAAAAADyAAAABAAAAAAAAAAAAAAAAQAKAAAAAAAKAAAAAAAAAAAAAAAKABMAAAAAAAQAAAAA
AAAAAAAAAAEAnQEAAAAADQAAAAAAAAAAAAAA0AD9AwAAAAAEAAAAAAAAAAAAAAABAA0HAAAAAA0A
AAAAAAAAAAAAANAAnAcAAAAAAAAAAAEAAABlCQAABQAEAAYABAAKAAkAAAAQAAwAowIAABAAGQCj
AgAAAAAbAKMCLQC8AS0APgIAAAAAADxNb2R1bGU+AG1zY29ybGliAE1pY3Jvc29mdC5WaXN1YWxC
YXNpYwBNeUFwcGxpY2F0aW9uAFNUXzk4Y2E3NTQ3MGZkZjQwZDNhNDE3ZDcyMjdmNGMxYThmLnZi
cHJvai5NeQBNeUNvbXB1dGVyAE15UHJvamVjdABNeVdlYlNlcnZpY2VzAFRocmVhZFNhZmVPYmpl
Y3RQcm92aWRlcmAxAE15UmVzb3VyY2VzAFNUXzk4Y2E3NTQ3MGZkZjQwZDNhNDE3ZDcyMjdmNGMx
YThmLnZicHJvai5NeS5SZXNvdXJjZXMATXlTZXR0aW5ncwBTVF85OGNhNzU0NzBmZGY0MGQzYTQx
N2Q3MjI3ZjRjMWE4Zi52YnByb2oAU2NyaXB0TWFpbgBTY3JpcHRSZXN1bHRzAE1pY3Jvc29mdC5W
aXN1YWxCYXNpYy5BcHBsaWNhdGlvblNlcnZpY2VzAEFwcGxpY2F0aW9uQmFzZQAuY3RvcgBNaWNy
b3NvZnQuVmlzdWFsQmFzaWMuRGV2aWNlcwBDb21wdXRlcgBTeXN0ZW0AT2JqZWN0AC5jY3RvcgBn
ZXRfQ29tcHV0ZXIAbV9Db21wdXRlck9iamVjdFByb3ZpZGVyAGdldF9BcHBsaWNhdGlvbgBtX0Fw
cE9iamVjdFByb3ZpZGVyAFVzZXIAZ2V0X1VzZXIAbV9Vc2VyT2JqZWN0UHJvdmlkZXIAZ2V0X1dl
YlNlcnZpY2VzAG1fTXlXZWJTZXJ2aWNlc09iamVjdFByb3ZpZGVyAEFwcGxpY2F0aW9uAFdlYlNl
cnZpY2VzAEVxdWFscwBvAEdldEhhc2hDb2RlAFR5cGUAR2V0VHlwZQBUb1N0cmluZwBDcmVhdGVf
X0luc3RhbmNlX18AVABpbnN0YW5jZQBEaXNwb3NlX19JbnN0YW5jZV9fAGdldF9HZXRJbnN0YW5j
ZQBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuTXlTZXJ2aWNlcy5JbnRlcm5hbABDb250ZXh0VmFsdWVg
MQBtX0NvbnRleHQAR2V0SW5zdGFuY2UAU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIA
X3Jlc01ncgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwBfcmVzQ3VsdHVyZQBnZXRf
UmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAFZhbHVlAEN1bHR1cmUAU3lz
dGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAbV9WYWx1ZQBtX1N5bmNP
YmplY3QAZ2V0X1ZhbHVlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQu
U3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFz
ZQBNYWluAENyZWF0ZUNvbm5lY3Rpb25TdHJpbmcAc2VydmVyAGRhdGFiYXNlAEVudW0AdmFsdWVf
XwBTdWNjZXNzAEZhaWx1cmUAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVkaXRvckJyb3dzYWJsZUF0
dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBTeXN0ZW0uQ29kZURvbS5Db21waWxlcgBHZW5l
cmF0ZWRDb2RlQXR0cmlidXRlAFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlckhpZGRlbkF0dHJp
YnV0ZQBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuQ29tcGlsZXJTZXJ2aWNlcwBTdGFuZGFyZE1vZHVs
ZUF0dHJpYnV0ZQBIaWRlTW9kdWxlTmFtZUF0dHJpYnV0ZQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwu
RGVzaWduAEhlbHBLZXl3b3JkQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2Vydmlj
ZXMAUnVudGltZUhlbHBlcnMAR2V0T2JqZWN0VmFsdWUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlw
ZUZyb21IYW5kbGUAQWN0aXZhdG9yAENyZWF0ZUluc3RhbmNlAE15R3JvdXBDb2xsZWN0aW9uQXR0
cmlidXRlAHNldF9WYWx1ZQBTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMAQ29tVmlzaWJs
ZUF0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lzdGVt
LlRocmVhZGluZwBNb25pdG9yAEVudGVyAEV4aXQARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0
ZQBTeXN0ZW0uRGF0YQBTeXN0ZW0uRGF0YS5TcWxDbGllbnQAU3FsQ29tbWFuZABTcWxDb25uZWN0
aW9uAFN5c3RlbS5Db2xsZWN0aW9ucwBBcnJheUxpc3QAU3FsRGF0YVJlYWRlcgBFeGNlcHRpb24A
Qnl0ZQBTY3JpcHRPYmplY3RNb2RlbABnZXRfRHRzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdl
ZERUUwBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFZhcmlhYmxlcwBnZXRfVmFyaWFi
bGVzAFZhcmlhYmxlAGdldF9JdGVtAENvbnZlcnNpb25zAE9wZW4AU3RyaW5nAENvbmNhdABFeGVj
dXRlU2NhbGFyAFRvSW50ZWdlcgBMb2cASW50MzIAc2V0X0NvbW1hbmRUZXh0AEV4ZWN1dGVSZWFk
ZXIAR2V0VmFsdWUAQWRkAFJlYWQASURpc3Bvc2FibGUARGlzcG9zZQBnZXRfQ291bnQAUHJvamVj
dERhdGEAU2V0UHJvamVjdEVycm9yAEV2ZW50c09iamVjdFdyYXBwZXIAZ2V0X0V2ZW50cwBnZXRf
TWVzc2FnZQBnZXRfU3RhY2tUcmFjZQBGaXJlRXJyb3IAQ2xlYXJQcm9qZWN0RXJyb3IAQ2xvc2UA
U3lzdGVtLlRleHQAU3RyaW5nQnVpbGRlcgBBcHBlbmQAQ0xTQ29tcGxpYW50QXR0cmlidXRlAFNT
SVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBTVF85OGNhNzU0NzBmZGY0MGQzYTQxN2Q3
MjI3ZjRjMWE4Zi52YnByb2ouUmVzb3VyY2VzLnJlc291cmNlcwBDb21waWxhdGlvblJlbGF4YXRp
b25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFN5c3RlbS5SdW50aW1l
LlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5RmlsZVZlcnNpb25B
dHRyaWJ1dGUAR3VpZEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJs
eUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb21w
YW55QXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0
dHJpYnV0ZQBTVF85OGNhNzU0NzBmZGY0MGQzYTQxN2Q3MjI3ZjRjMWE4Zi52YnByb2ouZGxsAAAA
MU0AeQAuAFIAZQBzAG8AdQByAGMAZQBzAC4ATQB5AFIAZQBzAG8AdQByAGMAZQBzAAAnUAByAGkA
bQBhAHIAeQBJAG0AcABvAHIAdABTAGUAcgB2AGUAcgAAK1AAcgBpAG0AYQByAHkASQBtAHAAbwBy
AHQARABhAHQAYQBiAGEAcwBlAAAfQQByAGMAaABpAHYAaQBuAGcAUwBlAHIAdgBlAHIAACNBAHIA
YwBoAGkAdgBpAG4AZwBEAGEAdABhAGIAYQBzAGUAACdTAG8AdQByAGMAZQBJAG4AcwB0AGEAbgBj
AGUAVABhAGIAbABlAAAxRABlAHMAdABpAG4AYQB0AGkAbwBuAEkAbgBzAHQAYQBuAGMAZQBUAGEA
YgBsAGUAAC9TAG8AdQByAGMAZQBSAGUAbABhAHQAaQBvAG4AcwBoAGkAcABUAGEAYgBsAGUAADlE
AGUAcwB0AGkAbgBhAHQAaQBvAG4AUgBlAGwAYQB0AGkAbwBuAHMAaABpAHAAVABhAGIAbABlAAAr
UwBFAEwARQBDAFQAIABjAG8AdQBuAHQAKAAqACkAIABGAFIATwBNACAAADlDAGgAZQBjAGsAaQBu
AGcAIABpAGYAIAB0AGgAZQAgAGMAbwB1AG4AdABzACAAbQBhAHQAYwBoAABlUwBvAHUAcgBjAGUA
QwBvAHUAbgB0ACAAYQBuAGQAIABEAGUAcwB0AGkAbgBhAHQAaQBvAG4AQwBvAHUAbgB0ACAAbQBp
AHMAbQBhAHQAYwBoAC4AIABTAG8AdQByAGMAZQA6AAAbIABEAGUAcwB0AGkAbgBhAHQAaQBvAG4A
OgAAgMlTAEUATABFAEMAVAAgAEkAbgBzAHQAYQBuAGMAZQBzAFQAYQBiAGwAZQAsAFIAZQBsAGEA
dABpAG8AbgBzAGgAaQBwAHMAVABhAGIAbABlACAARgBSAE8ATQAgAFsAZABiAG8AXQAuAFsAYgBh
AG0AXwBNAGUAdABhAGQAYQB0AGEAXwBQAGEAcgB0AGkAdABpAG8AbgBzAF0AIABXAEgARQBSAEUA
IABBAGMAdABpAHYAaQB0AHkATgBhAG0AZQAgAD0AIAAnAAEZQQBjAHQAaQB2AGkAdAB5AE4AYQBt
AGUAAG0nACAAQQBOAEQAIABBAHIAYwBoAGkAdgBpAG4AZwBJAG4AUAByAG8AZwByAGUAcwBzACAA
PQAgADEAIABBAE4ARAAgAEEAcgBjAGgAaQB2AGUAZABUAGkAbQBlACAASQBTACAATgBVAEwATAAB
OVMARQBMAEUAQwBUACAAYwBvAHUAbgB0ACgAKgApACAARgBSAE8ATQAgAFsAZABiAG8AXQAuAFsA
AANdAACAt0kAbgBzAHQAYQBuAGMAZQBzACAAZgBvAHIAIABhAHIAYwBoAGkAdgBlACAAdgBpAGUA
dwAgAG0AYQBsAGYAbwByAG0AZQBkAC4AIABTAG8AdQByAGMAZQBDAG8AdQBuAHQAIABhAG4AZAAg
AFQAbwB0AGEAbABQAGEAcgB0AGkAdABpAG8AbgBDAG8AdQBuAHQAIABtAGkAcwBtAGEAdABjAGgA
LgAgAFMAbwB1AHIAYwBlADoAACsgAHQAbwB0AGEAbABJAG4AcwB0AGEAbgBjAGUAcwBDAG8AdQBu
AHQAOgAAU0MAaABlAGMAawBpAG4AZwAgAGkAZgAgAHQAaABlACAAcgBlAGwAYQB0AGkAbwBuAHMA
aABpAHAAIABjAG8AdQBuAHQAcwAgAG0AYQB0AGMAaAAAgIlTAG8AdQByAGMAZQBDAG8AdQBuAHQA
IABhAG4AZAAgAEQAZQBzAHQAaQBuAGEAdABpAG8AbgBDAG8AdQBuAHQAIABmAG8AcgAgAFIAZQBs
AGEAdABpAG8AbgBzAGgAaQBwAHMAIABtAGkAcwBtAGEAdABjAGgALgAgAFMAbwB1AHIAYwBlADoA
AIC/UgBlAGwAYQB0AGkAbwBuAHMAaABpAHAAcwAgAGYAbwByACAAYQByAGMAaABpAHYAZQAgAHYA
aQBlAHcAIABtAGEAbABmAG8AcgBtAGUAZAAuACAAUwBvAHUAcgBjAGUAQwBvAHUAbgB0ACAAYQBu
AGQAIABUAG8AdABhAGwAUABhAHIAdABpAHQAaQBvAG4AQwBvAHUAbgB0ACAAbQBpAHMAbQBhAHQA
YwBoAC4AIABTAG8AdQByAGMAZQA6AAABAAUNAAoAABlEAGEAdABhACAAUwBvAHUAcgBjAGUAPQAA
IzsASQBuAGkAdABpAGEAbAAgAEMAYQB0AGEAbABvAGcAPQAAgLk7AEkAbgB0AGUAZwByAGEAdABl
AGQAIABTAGUAYwB1AHIAaQB0AHkAPQBTAFMAUABJADsAUABlAHIAcwBpAHMAdAAgAFMAZQBjAHUA
cgBpAHQAeQAgAEkAbgBmAG8APQBmAGEAbABzAGUAOwBBAHAAcABsAGkAYwBhAHQAaQBvAG4AIABO
AGEAbQBlAD0ARABhAHQAYQAgAE0AYQBpAG4AdABlAG4AYQBuAGMAZQAgAEQAVABTADsAAAAA+On0
EOVHyk6IkHKRVgMi8QAIt3pcVhk04IkIsD9ffxHVCjoDIAABAwAAAQQAABIMBwYVEhgBEgwEAAAS
CAcGFRIYARIIBAAAEhEHBhUSGAESEQQAABIUBwYVEhgBEhQECAASDAQIABIIBAgAEhEECAASFAQg
AQIcAyAACAQgABIVAyAADgIeAAcQAQEeAB4ABzABAQEQHgACEwAEIAATAAcGFRIZARMABCgAEwAD
BhIdAwYSIQQAABIdBAAAEiEFAAEBEiEECAASHQQIABIhAwYSIAIGHAQAABIgBAgAEiAIiYRdzYCA
zJEFIAIODg4CBggDBhEoBAAAAAAEAQAAAAUgAQERNQgBAAEAAAAAAAUgAgEODhgBAApNeVRlbXBs
YXRlCDEwLjAuMC4wAAAGFRIYARIMBhUSGAESCAYVEhgBEhEGFRIYARIUBAcBEgwEBwESCAQHARIR
BAcBEhQEIAEBDhMBAA5NeS5XZWJTZXJ2aWNlcwAAEwEADk15LkFwcGxpY2F0aW9uAAAQAQALTXku
Q29tcHV0ZXIAAAwBAAdNeS5Vc2VyAAAEAAEcHAMHAQIDBwEIBgABEhURUQQHARIVAwcBDgUQAQAe
AAQKAR4ABAcBHgAHIAQBDg4ODmEBADRTeXN0ZW0uV2ViLlNlcnZpY2VzLlByb3RvY29scy5Tb2Fw
SHR0cENsaWVudFByb3RvY29sEkNyZWF0ZV9fSW5zdGFuY2VfXxNEaXNwb3NlX19JbnN0YW5jZV9f
AAAABhUSGAETAAYVEhkBEwAECgETAAUgAQETAAgHAxMAEwATAAQgAQECBQEAAAAABCAAEmEGIAIB
DhJhBgcCEh0SHQQHARIhCAEAAgAAAAAABAABARwEBwESIAIGDgUgABKAhQUgABKAiQYgARKAjRwD
IAAcBAABDhwFAAIODg4GIAIBDhJxBAABCBwHIAMBDggdBQcABA4ODg4OBgADDg4ODgQgABJ5BCAB
HAgEIAEIHAMgAAIFAAEBEn0FIAASgKUIIAUCCA4ODgggBxUSbQ4ScQgODh0FEnUSbQ4ScRJ1CA4O
CAgSeQgIEn0GIAESgKkOBgcCEoCpDgQgAQEICAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0
aW9uVGhyb3dzAUcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlz
cGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNAwBAAcxLjAuMC4wAAApAQAkZjhjZGRhOGItZmUxNi00
OTQ2LWEyYzgtZTZiNThlNDQ4NGQ0AAAFAQABAAAfAQAaQ29weXJpZ2h0IEAgTWljcm9zb2Z0IDIw
MTEAAC8BACpTVF85OGNhNzU0NzBmZGY0MGQzYTQxN2Q3MjI3ZjRjMWE4Zi52YnByb2oAAA4BAAlN
aWNyb3NvZnQAAIBIAAAAAAAAAAAAAJ5IAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQSAAAAAAA
AAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgA
AIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAACAQA
AAAAAAAAAAAACAQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEA
AAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBG
AGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBGgD
AAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAEQDAAABADAAMAAwADAAMAA0AGIAMAAA
ADQACgABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAATQBpAGMAcgBvAHMAbwBmAHQAAACAACsA
AQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8AOQA4AGMAYQA3ADUANAA3
ADAAZgBkAGYANAAwAGQAMwBhADQAMQA3AGQANwAyADIANwBmADQAYwAxAGEAOABmAC4AdgBiAHAA
cgBvAGoAAAAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAA
AIAALwABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8AOQA4AGMAYQA3ADUANAA3ADAA
ZgBkAGYANAAwAGQAMwBhADQAMQA3AGQANwAyADIANwBmADQAYwAxAGEAOABmAC4AdgBiAHAAcgBv
AGoALgBkAGwAbAAAAAAAXAAbAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAA
eQByAGkAZwBoAHQAIABAACAATQBpAGMAcgBvAHMAbwBmAHQAIAAyADAAMQAxAAAAAACIAC8AAQBP
AHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8AOQA4AGMAYQA3ADUANAA3ADAA
ZgBkAGYANAAwAGQAMwBhADQAMQA3AGQANwAyADIANwBmADQAYwAxAGEAOABmAC4AdgBiAHAAcgBv
AGoALgBkAGwAbAAAAAAAeAArAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQAXwA5ADgA
YwBhADcANQA0ADcAMABmAGQAZgA0ADAAZAAzAGEANAAxADcAZAA3ADIAMgA3AGYANABjADEAYQA4
AGYALgB2AGIAcAByAG8AagAAAAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgAwAC4AMAAAADgACAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADAALgAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAALA4AAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\End archiving"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:DelayValidation="True"
          DTS:Description="Ends archiving of data."
          DTS:DTSID="{08A168BC-2934-438A-8412-C6D6C78F2A6B}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:FailPackageOnFailure="True"
          DTS:LocaleID="-1"
          DTS:ObjectName="End archiving"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{2F54EC70-CACF-4E0A-A976-48BD1320F963}"
              SQLTask:SqlStatementSource="EXEC [dbo].[bam_Metadata_EndArchiving] ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="NewParameterName"
                SQLTask:DtsVariableName="ActivityName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Recreating archiving tables"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Recreate archive tables in the BAM Archive database"
          DTS:DTSID="{C46A03BF-349A-4D7B-8104-F7534AF88261}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Recreating archiving tables"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_29254fa94cf54a789acb72089cdb12a6"
              VSTAMajorVersion="14"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="ActivityName,ArchivingDatabase,ArchivingServer">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_29254fa94cf54a789acb72089cdb12a6.Properties.Settings.get_Default():ST_29254fa94cf54a789acb72089cdb12a6.Properties.Sett" +
    "ings")]

namespace ST_29254fa94cf54a789acb72089cdb12a6.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Data.SqlClient;
using System.Text;
#endregion

namespace ST_29254fa94cf54a789acb72089cdb12a6
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            const string ArchivingServer = "ArchivingServer";
            const string ArchivingDatabase = "ArchivingDatabase";
            const string ActivityName = "ActivityName";

            string activityName = (string)Dts.Variables[ActivityName].Value;
            string server = (string)Dts.Variables[ArchivingServer].Value;
            string database = (string)Dts.Variables[ArchivingDatabase].Value;

            Dts.Log(string.Format("ArchivingServer = '{0}'", server), 999, null);
            Dts.Log(string.Format("ArchivingDatabase = '{0}'", database), 999, null);
            Dts.Log(string.Format("ActivityName = '{0}'", activityName), 999, null);

            if (string.IsNullOrWhiteSpace(server))
                Dts.Events.FireError(0, string.Empty, string.Format("ArchivingServer is missing"), string.Empty, 0);
            if (string.IsNullOrWhiteSpace(database))
                Dts.Events.FireError(0, string.Empty, string.Format("ArchivingDatabase is missing"), string.Empty, 0);
            if (string.IsNullOrWhiteSpace(activityName))
                Dts.Events.FireError(0, string.Empty, string.Format("ActivityName is missing"), string.Empty, 0);

            string archiveConnectionString;
            SqlConnection archiveSqlConnection = null;
            SqlCommand archiveCommand;

            StringBuilder executeStatement = new StringBuilder();
            executeStatement.AppendLine("begin tran");
            executeStatement.AppendLine("declare @@dataCount int");
            executeStatement.AppendLine("declare @@relationCount int");
            executeStatement.AppendLine("declare @@currTime datetime");
            executeStatement.AppendLine("declare @@currTimeStr nvarchar(50)");
            executeStatement.AppendLine("declare @@tempInstanceTable as nvarchar(256)");
            executeStatement.AppendLine("declare @@tempRelationshipTable as nvarchar(256)");
            executeStatement.AppendLine("declare @@archivedInstanceTable as nvarchar(256)");
            executeStatement.AppendLine("declare @@archivedRelationshipTable as nvarchar(256)");
            executeStatement.AppendLine();
            executeStatement.AppendLine("select @@dataCount = count(*) FROM[dbo].[bam_" + activityName + "_Instances]");
            executeStatement.AppendLine("select @@relationCount = count(*) FROM[dbo].[bam_" + activityName + "_Relationships]");
            executeStatement.AppendLine("IF (@@dataCount = 0 AND @@relationCount = 0 )");
            executeStatement.AppendLine("BEGIN");
            executeStatement.AppendLine("COMMIT TRAN");
            executeStatement.AppendLine("RETURN");
            executeStatement.AppendLine("END");
            executeStatement.AppendLine("set @@currTime = GETUTCDATE()");
            executeStatement.AppendLine("set @@currTimeStr = cast(datepart(yyyy, @@currTime) as nvarchar) + N'-' + cast(datepart(mm, @@currTime) as nvarchar) + N'-' + cast(datepart(dd, @@currTime) as nvarchar) + ' ' + cast(datepart(hh, @@currTime) as nvarchar) + N':' + cast(datepart(mi, @@currTime) as nvarchar) + N':' + cast(datepart(ss, @@currTime) as nvarchar)");
            executeStatement.AppendLine("set @@archivedInstanceTable = N'bam_" + activityName + "_Instances_' + @@currTimeStr + N'_Failed'");
            executeStatement.AppendLine("set @@archivedRelationshipTable = N'bam_" + activityName + "_Relationships_' + @@currTimeStr + N'_Failed'");
            executeStatement.AppendLine();
            executeStatement.AppendLine("select top 0 * into[dbo].[bam_" + activityName + "_Instances_Temp] from[dbo].[bam_" + activityName + "_Instances]");
            executeStatement.AppendLine("select top 0 * into[dbo].[bam_" + activityName + "_Relationships_Temp] from[dbo].[bam_" + activityName + "_Relationships]");
            executeStatement.AppendLine();
            executeStatement.AppendLine("exec sp_rename N'bam_" + activityName + "_Instances', @@archivedInstanceTable ");
            executeStatement.AppendLine("exec sp_rename N'bam_" + activityName + "_Relationships', @@archivedRelationshipTable ");

            executeStatement.AppendLine("exec sp_rename N'bam_" + activityName + "_Instances_Temp', 'bam_" + activityName + "_Instances'");
            executeStatement.AppendLine("exec sp_rename N'bam_" + activityName + "_Relationships_Temp', 'bam_" + activityName + "_Relationships'");

            executeStatement.AppendLine("exec sp_executesql N'ALTER TABLE [bam_" + activityName + "_Instances] WITH NOCHECK ADD PRIMARY KEY CLUSTERED ([RecordID])'");
            executeStatement.AppendLine("commit");

            archiveConnectionString = CreateConnectionString(server, database);
            try
            {
                archiveSqlConnection = new SqlConnection(archiveConnectionString);
                archiveSqlConnection.Open();

                archiveCommand = new SqlCommand();
                archiveCommand.CommandType = CommandType.Text;
                archiveCommand.Connection = archiveSqlConnection;

                archiveCommand.CommandText = executeStatement.ToString();
                archiveCommand.ExecuteNonQuery();

                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                Dts.Events.FireError(0, "", ex.Message + Environment.NewLine + ex.StackTrace, "", 0);
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
            finally
            {
                if (null != archiveSqlConnection)
                    archiveSqlConnection.Close();
            }

        }

        private string EscapeQuotes(string s)
        {
            if (string.IsNullOrEmpty(s)) return string.Empty;
            return s.Replace("'", "''");
        }
        private string CreateConnectionString(string server, string database)
        {
            StringBuilder connectionString = new StringBuilder();
            connectionString.Append("Data Source=");
            connectionString.Append(server);
            connectionString.Append(";Initial Catalog=");
            connectionString.Append(database);
            connectionString.Append(";Integrated Security=SSPI;Persist Security Info=false;Application Name=Data Maintenance DTS;");
            return connectionString.ToString();
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="ST_29254fa94cf54a789acb72089cdb12a6.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{a439d87a-d8ac-4bb4-84fa-770ac81f2804}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_29254fa94cf54a789acb72089cdb12a6</RootNamespace>
    <AssemblyName>ST_29254fa94cf54a789acb72089cdb12a6</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_29254fa94cf54a789acb72089cdb12a6</msb:CodeName>
		<msb:DisplayName>ST_29254fa94cf54a789acb72089cdb12a6</msb:DisplayName>
		<msb:ProjectId>{A62CDFEE-94B7-4451-B65C-B3740806ABEE}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_29254fa94cf54a789acb72089cdb12a6.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_29254fa94cf54a789acb72089cdb12a6")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_29254fa94cf54a789acb72089cdb12a6")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_29254fa94cf54a789acb72089cdb12a6.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_29254fa94cf54a789acb72089cdb12a6.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_29254fa94cf54a789acb72089cdb12a6.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_29254fa94cf54a789acb72089cdb12a6.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_29254fa94cf54a789acb72089cdb12a6.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_29254fa94cf54a789acb72089cdb12a6.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAIwE/FcAAAAAAAAAAOAAIiALATAAACQAAAAIAAAAAAAAJkMA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAANRCAABPAAAAAGAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAALCMAAAAgAAAAJAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAYAAAAAYAAAAmAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAALAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAI
QwAAAAAAAEgAAAACAAUAqCUAAHQcAAABAAAAAAAAABxCAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBgBlBAAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKdB4AAAEKAigQAAAKbxEAAApyGwAAcG8SAAAKbxMAAAp0HgAAAQsCKBAAAApvEQAACnI7AABw
bxIAAApvEwAACnQeAAABDAIoEAAACnJfAABwBygUAAAKIOcDAAAUbxUAAAoCKBAAAApyjwAAcAgo
FAAACiDnAwAAFG8VAAAKAigQAAAKcsMAAHAGKBQAAAog5wMAABRvFQAACgcoFgAACiwtAigQAAAK
bxcAAAoWfhgAAApy7QAAcBaNFAAAASgZAAAKfhgAAAoWbxoAAAomCCgWAAAKLC0CKBAAAApvFwAA
ChZ+GAAACnIjAQBwFo0UAAABKBkAAAp+GAAAChZvGgAACiYGKBYAAAosLQIoEAAACm8XAAAKFn4Y
AAAKcl0BAHAWjRQAAAEoGQAACn4YAAAKFm8aAAAKJhQTBHMbAAAKEwURBXKNAQBwbxwAAAomEQVy
owEAcG8cAAAKJhEFctMBAHBvHAAACiYRBXILAgBwbxwAAAomEQVyQwIAcG8cAAAKJhEFcokCAHBv
HAAACiYRBXLjAgBwbxwAAAomEQVyRQMAcG8cAAAKJhEFcqcDAHBvHAAACiYRBW8dAAAKJhEFchEE
AHAGcm0EAHAoHgAACm8cAAAKJhEFcoUEAHAGcukEAHAoHgAACm8cAAAKJhEFcgkFAHBvHAAACiYR
BXJlBQBwbxwAAAomEQVycQUAcG8cAAAKJhEFcokFAHBvHAAACiYRBXKXBQBwbxwAAAomEQVynwUA
cG8cAAAKJhEFctsFAHBvHAAACiYRBXJkCABwBnKuCABwKB4AAApvHAAACiYRBXICCQBwBnJUCQBw
KB4AAApvHAAACiYRBW8dAAAKJhEFG40eAAABJRZysAkAcKIlFwaiJRhy7gkAcKIlGQaiJRpybQQA
cKIoHwAACm8cAAAKJhEFG40eAAABJRZysAkAcKIlFwaiJRhyMAoAcKIlGQaiJRpy6QQAcKIoHwAA
Cm8cAAAKJhEFbx0AAAomEQVyegoAcAZypgoAcCgeAAAKbxwAAAomEQVyegoAcAZy8goAcCgeAAAK
bxwAAAomEQUbjR4AAAElFnJ6CgBwoiUXBqIlGHJOCwBwoiUZBqIlGnJ+CwBwoigfAAAKbxwAAAom
EQUbjR4AAAElFnJ6CgBwoiUXBqIlGHKWCwBwoiUZBqIlGnLOCwBwoigfAAAKbxwAAAomEQVy7gsA
cAZyPAwAcCgeAAAKbxwAAAomEQVyvwwAcG8cAAAKJgIHCCgDAAAGDQlzIAAAChMEEQRvIQAACnMi
AAAKJRdvIwAACiURBG8kAAAKJREFbyUAAApvJgAACm8nAAAKJgIoEAAAChZvKAAACt5REwYCKBAA
AApvFwAAChZyzQwAcBEGbykAAAooKgAAChEGbysAAAooHgAACnLNDABwFm8aAAAKJgIoEAAAChdv
KAAACt4MEQQsBxEEbywAAArcKgAAAAEcAAAAAM8DRBMERREAAAECAM8DiVgEDAAAAAB+AygtAAAK
LAZ+GAAACioDcs8MAHBy0wwAcG8uAAAKKv5zGwAACiVy2QwAcG8vAAAKJiUDby8AAAomJXLzDABw
by8AAAomJQRvLwAACiYlchcNAHBvLwAACiZvJQAACioeAigwAAAKKh4CKDEAAAoqrn4BAAAELR5y
0g0AcNADAAACKDIAAApvMwAACnM0AAAKgAEAAAR+AQAABCoafgIAAAQqHgKAAgAABCoafgMAAAQq
HgIoNQAACioucwoAAAaAAwAABCoAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAA
ANgEAAAjfgAARAUAAAgHAAAjU3RyaW5ncwAAAABMDAAARA4AACNVUwCQGgAAEAAAACNHVUlEAAAA
oBoAANQBAAAjQmxvYgAAAAAAAAACAAABVx2iAQkDAAAA+gEzABYAAAEAAAAnAAAABQAAAAYAAAAL
AAAABAAAADUAAAACAAAAEAAAAAEAAAACAAAAAwAAAAQAAAABAAAABQAAAAEAAAABAAAAAAAfBAEA
AAAAAAYAtAJuBQYAQwNuBQYAAAJbBQ8A4gUAAAYALQKiBAYAlwKiBAYAeAKiBAYAKgOiBAYA1AKi
BAYA7QKiBAYARAKiBAYAXwJxAwoACAPOAwoAcAHOAw4A0ASdBgYABwW/BgYA3gRQBAYAVwRQBAYA
4wFbBQYAewZQBAYAGQWOBQYA+wSNBBIAswEJBBIAFAIJBBIAjAF4BAYAyAFuBQoA9wPOAxYAJAb5
ABYAzAD5AAYApANQBAoAKQXOAw4AwwToBA4AdACdBg4AagDoBA4ANAFVAAYAswZQBAYAOwFQBAYA
1QBQBAYA3waiBAAAAAAlAAAAAAABAAEAAQAQAG0EAQA5AAEAAQAAABAAlQXxBVEAAQAFAAABEAA7
BvEFZQADAAkAAwEAAFQGAABJAAQADAARAFwE0QARAGAB1QARALAA2QAGBk0A3QBWgEQG4ABWgEAB
4ABQIAAAAACGAHMEBgABAOAkAAAAAIEALgbkAAEAACUAAAAAgQCLA5gAAgBAJQAAAACGGE4FBgAE
AEglAAAAAIMYTgUGAAQAUCUAAAAAkwgVBekABAB8JQAAAACTCEgB7gAEAIMlAAAAAJMIVAHzAAQA
iyUAAAAAlgiCBvkABQCSJQAAAACGGE4FBgAFAJolAAAAAJEYVAX+AAUAAAABAGsGAAABAD0FAAAC
AKQBAAABAGsDCQBOBQEAEQBOBQYAGQBOBQoAKQBOBRAAMQBOBRAAOQBOBRAAQQBOBRAASQBOBRAA
UQBOBRAAWQBOBRAAYQBOBRAAaQBOBQYAmQBOBQYAwQBOBRUA0QBOBQYAcQBMBigA2QAgBi0A4QBH
BDIA6QBhAzgA8QB0BjwA2QCrA0IA8QCOAEoA2QBiBk8A8QAAB1QA8QB0BlcA+QBEBV4AgQBOBQYA
gQAZAWcAgQAZAW0A8QBtBnIA8QBtBnkAeQBOBRAAAQFoBAYACQFOBQYAEQEwAX8ACQG0BIYAoQCi
A4wAEQHLBhAAEQHoBpAA2QCOBgEAiQDAAIwAIQEkAZQAiQChAIwAAQGtAQYA8QD4BkoA8QCGAJgA
gQB/AGcAcQBOBQYAoQBOBQYAKQHnAJ4AKQHbBqcAqQBOBa0AyQBOBQYACAAUAMcACAAYAMwAKQBz
ADkBLgALABEBLgATABoBLgAbADkBLgAjAEIBLgArAGsBLgAzAGsBLgA7AGsBLgBDAEIBLgBLAHEB
LgBTAGsBLgBbAIgBQwBjAMwASQBzADkBYQB7AMwAYwBrAMwAGwADAAEABAADAAAAGQUCAQAAaAEH
AQAAhgYMAQIABgADAAIABwAFAAEACAAFAAIACQAHAASAAAABAAAA7xdWowAAAAAAAAEAAAAEAAAA
AAAAAAAAAAC1AGEAAAAAAA0AAAAAAAAAAAAAAL4ArwMAAAAABAAAAAAAAAAAAAAAtQBVAAAAAAAE
AAAAAAAAAAAAAAC1AFAEAAAAAA0AAAAAAAAAAAAAAL4ALgAAAAAAAAAAAAEAAACfBQAABQACAAAA
AAAAU1RfMjkyNTRmYTk0Y2Y1NGE3ODlhY2I3MjA4OWNkYjEyYTYAPE1vZHVsZT4ATWljcm9zb2Z0
LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AU3lzdGVtLkRhdGEAbXNjb3JsaWIARGJDb21t
YW5kAFNxbENvbW1hbmQAQXBwZW5kAFJlcGxhY2UASXNOdWxsT3JXaGl0ZVNwYWNlAGdldF9TdGFj
a1RyYWNlAGRlZmF1bHRJbnN0YW5jZQBnZXRfTWVzc2FnZQBWYXJpYWJsZQBSdW50aW1lVHlwZUhh
bmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAEFw
cGVuZExpbmUAZ2V0X05ld0xpbmUAc2V0X0NvbW1hbmRUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUA
c2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBB
cHBsaWNhdGlvblNldHRpbmdzQmFzZQBkYXRhYmFzZQBDbG9zZQBFZGl0b3JCcm93c2FibGVTdGF0
ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRl
AERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0
bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0
cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9u
QXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0
QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQ
b2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxp
dHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAQ3Jl
YXRlQ29ubmVjdGlvblN0cmluZwBUb1N0cmluZwBMb2cATWljcm9zb2Z0LlNxbFNlcnZlci5TY3Jp
cHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2Jq
ZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUXzI5MjU0ZmE5NGNmNTRhNzg5YWNiNzIw
ODljZGIxMmE2LmRsbABnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBPcGVuAFNjcmlw
dE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJl
ZmxlY3Rpb24Ac2V0X0Nvbm5lY3Rpb24ARGJDb25uZWN0aW9uAFNxbENvbm5lY3Rpb24ARXhjZXB0
aW9uAFN5c3RlbS5EYXRhLkNvbW1vbgBDdWx0dXJlSW5mbwBTdHJpbmdCdWlsZGVyAGdldF9SZXNv
dXJjZU1hbmFnZXIARXZlbnRzT2JqZWN0V3JhcHBlcgBzZXJ2ZXIARmlyZUVycm9yAC5jdG9yAC5j
Y3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBT
eXN0ZW0uUmVzb3VyY2VzAFNUXzI5MjU0ZmE5NGNmNTRhNzg5YWNiNzIwODljZGIxMmE2LlByb3Bl
cnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTVF8yOTI1NGZhOTRjZjU0
YTc4OWFjYjcyMDg5Y2RiMTJhNi5Qcm9wZXJ0aWVzAGdldF9WYXJpYWJsZXMARXNjYXBlUXVvdGVz
AFNldHRpbmdzAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAGdldF9FdmVudHMAQ29uY2F0
AEZvcm1hdABPYmplY3QAZ2V0X0RlZmF1bHQAc2V0X1Rhc2tSZXN1bHQAU3lzdGVtLkRhdGEuU3Fs
Q2xpZW50AEVudmlyb25tZW50AFN5c3RlbS5UZXh0AHNldF9Db21tYW5kVGV4dABnZXRfQXNzZW1i
bHkARXhlY3V0ZU5vblF1ZXJ5AElzTnVsbE9yRW1wdHkAAAAAGUEAYwB0AGkAdgBpAHQAeQBOAGEA
bQBlAAAfQQByAGMAaABpAHYAaQBuAGcAUwBlAHIAdgBlAHIAACNBAHIAYwBoAGkAdgBpAG4AZwBE
AGEAdABhAGIAYQBzAGUAAC9BAHIAYwBoAGkAdgBpAG4AZwBTAGUAcgB2AGUAcgAgAD0AIAAnAHsA
MAB9ACcAATNBAHIAYwBoAGkAdgBpAG4AZwBEAGEAdABhAGIAYQBzAGUAIAA9ACAAJwB7ADAAfQAn
AAEpQQBjAHQAaQB2AGkAdAB5AE4AYQBtAGUAIAA9ACAAJwB7ADAAfQAnAAE1QQByAGMAaABpAHYA
aQBuAGcAUwBlAHIAdgBlAHIAIABpAHMAIABtAGkAcwBzAGkAbgBnAAA5QQByAGMAaABpAHYAaQBu
AGcARABhAHQAYQBiAGEAcwBlACAAaQBzACAAbQBpAHMAcwBpAG4AZwAAL0EAYwB0AGkAdgBpAHQA
eQBOAGEAbQBlACAAaQBzACAAbQBpAHMAcwBpAG4AZwAAFWIAZQBnAGkAbgAgAHQAcgBhAG4AAC9k
AGUAYwBsAGEAcgBlACAAQABAAGQAYQB0AGEAQwBvAHUAbgB0ACAAaQBuAHQAADdkAGUAYwBsAGEA
cgBlACAAQABAAHIAZQBsAGEAdABpAG8AbgBDAG8AdQBuAHQAIABpAG4AdAAAN2QAZQBjAGwAYQBy
AGUAIABAAEAAYwB1AHIAcgBUAGkAbQBlACAAZABhAHQAZQB0AGkAbQBlAABFZABlAGMAbABhAHIA
ZQAgAEAAQABjAHUAcgByAFQAaQBtAGUAUwB0AHIAIABuAHYAYQByAGMAaABhAHIAKAA1ADAAKQAA
WWQAZQBjAGwAYQByAGUAIABAAEAAdABlAG0AcABJAG4AcwB0AGEAbgBjAGUAVABhAGIAbABlACAA
YQBzACAAbgB2AGEAcgBjAGgAYQByACgAMgA1ADYAKQAAYWQAZQBjAGwAYQByAGUAIABAAEAAdABl
AG0AcABSAGUAbABhAHQAaQBvAG4AcwBoAGkAcABUAGEAYgBsAGUAIABhAHMAIABuAHYAYQByAGMA
aABhAHIAKAAyADUANgApAABhZABlAGMAbABhAHIAZQAgAEAAQABhAHIAYwBoAGkAdgBlAGQASQBu
AHMAdABhAG4AYwBlAFQAYQBiAGwAZQAgAGEAcwAgAG4AdgBhAHIAYwBoAGEAcgAoADIANQA2ACkA
AGlkAGUAYwBsAGEAcgBlACAAQABAAGEAcgBjAGgAaQB2AGUAZABSAGUAbABhAHQAaQBvAG4AcwBo
AGkAcABUAGEAYgBsAGUAIABhAHMAIABuAHYAYQByAGMAaABhAHIAKAAyADUANgApAABbcwBlAGwA
ZQBjAHQAIABAAEAAZABhAHQAYQBDAG8AdQBuAHQAIAA9ACAAYwBvAHUAbgB0ACgAKgApACAARgBS
AE8ATQBbAGQAYgBvAF0ALgBbAGIAYQBtAF8AABdfAEkAbgBzAHQAYQBuAGMAZQBzAF0AAGNzAGUA
bABlAGMAdAAgAEAAQAByAGUAbABhAHQAaQBvAG4AQwBvAHUAbgB0ACAAPQAgAGMAbwB1AG4AdAAo
ACoAKQAgAEYAUgBPAE0AWwBkAGIAbwBdAC4AWwBiAGEAbQBfAAAfXwBSAGUAbABhAHQAaQBvAG4A
cwBoAGkAcABzAF0AAFtJAEYAIAAoAEAAQABkAGEAdABhAEMAbwB1AG4AdAAgAD0AIAAwACAAQQBO
AEQAIABAAEAAcgBlAGwAYQB0AGkAbwBuAEMAbwB1AG4AdAAgAD0AIAAwACAAKQAAC0IARQBHAEkA
TgAAF0MATwBNAE0ASQBUACAAVABSAEEATgAADVIARQBUAFUAUgBOAAAHRQBOAEQAADtzAGUAdAAg
AEAAQABjAHUAcgByAFQAaQBtAGUAIAA9ACAARwBFAFQAVQBUAEMARABBAFQARQAoACkAAIKHcwBl
AHQAIABAAEAAYwB1AHIAcgBUAGkAbQBlAFMAdAByACAAPQAgAGMAYQBzAHQAKABkAGEAdABlAHAA
YQByAHQAKAB5AHkAeQB5ACwAIABAAEAAYwB1AHIAcgBUAGkAbQBlACkAIABhAHMAIABuAHYAYQBy
AGMAaABhAHIAKQAgACsAIABOACcALQAnACAAKwAgAGMAYQBzAHQAKABkAGEAdABlAHAAYQByAHQA
KABtAG0ALAAgAEAAQABjAHUAcgByAFQAaQBtAGUAKQAgAGEAcwAgAG4AdgBhAHIAYwBoAGEAcgAp
ACAAKwAgAE4AJwAtACcAIAArACAAYwBhAHMAdAAoAGQAYQB0AGUAcABhAHIAdAAoAGQAZAAsACAA
QABAAGMAdQByAHIAVABpAG0AZQApACAAYQBzACAAbgB2AGEAcgBjAGgAYQByACkAIAArACAAJwAg
ACcAIAArACAAYwBhAHMAdAAoAGQAYQB0AGUAcABhAHIAdAAoAGgAaAAsACAAQABAAGMAdQByAHIA
VABpAG0AZQApACAAYQBzACAAbgB2AGEAcgBjAGgAYQByACkAIAArACAATgAnADoAJwAgACsAIABj
AGEAcwB0ACgAZABhAHQAZQBwAGEAcgB0ACgAbQBpACwAIABAAEAAYwB1AHIAcgBUAGkAbQBlACkA
IABhAHMAIABuAHYAYQByAGMAaABhAHIAKQAgACsAIABOACcAOgAnACAAKwAgAGMAYQBzAHQAKABk
AGEAdABlAHAAYQByAHQAKABzAHMALAAgAEAAQABjAHUAcgByAFQAaQBtAGUAKQAgAGEAcwAgAG4A
dgBhAHIAYwBoAGEAcgApAAFJcwBlAHQAIABAAEAAYQByAGMAaABpAHYAZQBkAEkAbgBzAHQAYQBu
AGMAZQBUAGEAYgBsAGUAIAA9ACAATgAnAGIAYQBtAF8AAVNfAEkAbgBzAHQAYQBuAGMAZQBzAF8A
JwAgACsAIABAAEAAYwB1AHIAcgBUAGkAbQBlAFMAdAByACAAKwAgAE4AJwBfAEYAYQBpAGwAZQBk
ACcAAVFzAGUAdAAgAEAAQABhAHIAYwBoAGkAdgBlAGQAUgBlAGwAYQB0AGkAbwBuAHMAaABpAHAA
VABhAGIAbABlACAAPQAgAE4AJwBiAGEAbQBfAAFbXwBSAGUAbABhAHQAaQBvAG4AcwBoAGkAcABz
AF8AJwAgACsAIABAAEAAYwB1AHIAcgBUAGkAbQBlAFMAdAByACAAKwAgAE4AJwBfAEYAYQBpAGwA
ZQBkACcAAT1zAGUAbABlAGMAdAAgAHQAbwBwACAAMAAgACoAIABpAG4AdABvAFsAZABiAG8AXQAu
AFsAYgBhAG0AXwAAQV8ASQBuAHMAdABhAG4AYwBlAHMAXwBUAGUAbQBwAF0AIABmAHIAbwBtAFsA
ZABiAG8AXQAuAFsAYgBhAG0AXwAASV8AUgBlAGwAYQB0AGkAbwBuAHMAaABpAHAAcwBfAFQAZQBt
AHAAXQAgAGYAcgBvAG0AWwBkAGIAbwBdAC4AWwBiAGEAbQBfAAArZQB4AGUAYwAgAHMAcABfAHIA
ZQBuAGEAbQBlACAATgAnAGIAYQBtAF8AAUtfAEkAbgBzAHQAYQBuAGMAZQBzACcALAAgAEAAQABh
AHIAYwBoAGkAdgBlAGQASQBuAHMAdABhAG4AYwBlAFQAYQBiAGwAZQAgAAFbXwBSAGUAbABhAHQA
aQBvAG4AcwBoAGkAcABzACcALAAgAEAAQABhAHIAYwBoAGkAdgBlAGQAUgBlAGwAYQB0AGkAbwBu
AHMAaABpAHAAVABhAGIAbABlACAAAS9fAEkAbgBzAHQAYQBuAGMAZQBzAF8AVABlAG0AcAAnACwA
IAAnAGIAYQBtAF8AARdfAEkAbgBzAHQAYQBuAGMAZQBzACcAATdfAFIAZQBsAGEAdABpAG8AbgBz
AGgAaQBwAHMAXwBUAGUAbQBwACcALAAgACcAYgBhAG0AXwABH18AUgBlAGwAYQB0AGkAbwBuAHMA
aABpAHAAcwAnAAFNZQB4AGUAYwAgAHMAcABfAGUAeABlAGMAdQB0AGUAcwBxAGwAIABOACcAQQBM
AFQARQBSACAAVABBAEIATABFACAAWwBiAGEAbQBfAAGAgV8ASQBuAHMAdABhAG4AYwBlAHMAXQAg
AFcASQBUAEgAIABOAE8AQwBIAEUAQwBLACAAQQBEAEQAIABQAFIASQBNAEEAUgBZACAASwBFAFkA
IABDAEwAVQBTAFQARQBSAEUARAAgACgAWwBSAGUAYwBvAHIAZABJAEQAXQApACcAAQ1jAG8AbQBt
AGkAdAAAAQADJwABBScAJwABGUQAYQB0AGEAIABTAG8AdQByAGMAZQA9AAAjOwBJAG4AaQB0AGkA
YQBsACAAQwBhAHQAYQBsAG8AZwA9AACAuTsASQBuAHQAZQBnAHIAYQB0AGUAZAAgAFMAZQBjAHUA
cgBpAHQAeQA9AFMAUwBQAEkAOwBQAGUAcgBzAGkAcwB0ACAAUwBlAGMAdQByAGkAdAB5ACAASQBu
AGYAbwA9AGYAYQBsAHMAZQA7AEEAcABwAGwAaQBjAGEAdABpAG8AbgAgAE4AYQBtAGUAPQBEAGEA
dABhACAATQBhAGkAbgB0AGUAbgBhAG4AYwBlACAARABUAFMAOwAAcVMAVABfADIAOQAyADUANABm
AGEAOQA0AGMAZgA1ADQAYQA3ADgAOQBhAGMAYgA3ADIAMAA4ADkAYwBkAGIAMQAyAGEANgAuAFAA
cgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAeKeKVoOIQ0O/tGmPRSGgwgAE
IAEBCAMgAAEFIAEBEREEIAEBDgUgAQERXQwHBw4ODg4SPRJBEkUEIAASbQQgABJxBSABEnUcAyAA
HAUAAg4OHAcgAwEOCB0FBAABAg4EIAASfQIGDgYAAg4OHRwIIAUCCA4ODggFIAESQQ4EIAASQQYA
Aw4ODg4FAAEOHQ4GIAEBEYCNBSABARI9AyAADgMgAAgDAAAOBSACDg4OCAABEoCVEYCZBSAAEoCd
ByACAQ4SgJ0It3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSVQMGElkDBhIQAgYIAwYRFAQg
AQ4OBAAAElUEAAASWQUAAQESWQQAABIQAwAAAQQIABJVBAgAElkECAASEAgBAAgAAAAAAB4BAAEA
VAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfMjkyNTRmYTk0Y2Y1NGE3
ODlhY2I3MjA4OWNkYjEyYTYAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxNgAASQEAGi5ORVRG
cmFtZXdvcmssVmVyc2lvbj12NC41AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1l
d29yayA0LjUAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRl
ciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlU
b2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0
AgAAAAAAAAAAAAAAUEFEUEFEULQAAAD8QgAAAAAAAAAAAAAWQwAAACAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAACEMAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAA
ABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAA
GgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4A
AAEAAAABAFaj7xcAAAEAVqPvFz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEA
cgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACw
BHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAAMAA0AGIA
MAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBt
AGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8A
MgA5ADIANQA0AGYAYQA5ADQAYwBmADUANABhADcAOAA5AGEAYwBiADcAMgAwADgAOQBjAGQAYgAx
ADIAYQA2AAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYAMQAyADcA
LgA0ADEAOAAxADQAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8AMgA5
ADIANQA0AGYAYQA5ADQAYwBmADUANABhADcAOAA5AGEAYwBiADcAMgAwADgAOQBjAGQAYgAxADIA
YQA2AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5
AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADYAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0A
YQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABT
AFQAXwAyADkAMgA1ADQAZgBhADkANABjAGYANQA0AGEANwA4ADkAYQBjAGIANwAyADAAOAA5AGMA
ZABiADEAMgBhADYALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBU
AF8AMgA5ADIANQA0AGYAYQA5ADQAYwBmADUANABhADcAOAA5AGEAYwBiADcAMgAwADgAOQBjAGQA
YgAxADIAYQA2AAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA2
ADEAMgA3AC4ANAAxADgAMQA0AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkA
bwBuAAAAMQAuADAALgA2ADEAMgA3AC4ANAAxADgAMQA0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAACgzAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Spawn a new partition"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:DelayValidation="True"
          DTS:Description="Creates tables to hold archive data in the Primary Import database."
          DTS:DTSID="{B156C615-0284-41F3-AC26-0D70842A1D3B}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:FailPackageOnFailure="True"
          DTS:LocaleID="-1"
          DTS:ObjectName="Spawn a new partition"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{2F54EC70-CACF-4E0A-A976-48BD1320F963}"
              SQLTask:SqlStatementSource="EXEC [dbo].[bam_Metadata_SpawnPartition] ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="NewParameterName"
                SQLTask:DtsVariableName="ActivityName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Verify archive tables empty"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Verifies the current activity tables in BAM Archive DB are empty."
          DTS:DTSID="{03130E04-3A8C-4876-BB8D-4497C9938216}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Verify archive tables empty"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_fab895e43e4549b28e6b10c62f8ae55d"
              VSTAMajorVersion="14"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="ActivityName,ArchivingDatabase,ArchivingServer">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fab895e43e4549b28e6b10c62f8ae55d.Properties.Settings.get_Default():ST_fab895e43e4549b28e6b10c62f8ae55d.Properties.Sett" +
    "ings")]

namespace ST_fab895e43e4549b28e6b10c62f8ae55d.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Text;
using System.Collections.Specialized;
using System.Data.SqlClient;
#endregion

namespace ST_fab895e43e4549b28e6b10c62f8ae55d
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            const string ArchivingServer = "ArchivingServer";
            const string ArchivingDatabase = "ArchivingDatabase";
            const string ActivityName = "ActivityName";

            string activityName = (string)Dts.Variables[ActivityName].Value;
            string server = (string)Dts.Variables[ArchivingServer].Value;
            string database = (string)Dts.Variables[ArchivingDatabase].Value;

            Dts.Log(string.Format("ArchivingServer = '{0}'", server), 999, null);
            Dts.Log(string.Format("ArchivingDatabase = '{0}'", database), 999, null);
            Dts.Log(string.Format("ActivityName = '{0}'", activityName), 999, null);

            if (string.IsNullOrWhiteSpace(server))
                Dts.Events.FireError(0, string.Empty, string.Format("ArchivingServer is missing"), string.Empty, 0);
            if (string.IsNullOrWhiteSpace(database))
                Dts.Events.FireError(0, string.Empty, string.Format("ArchivingDatabase is missing"), string.Empty, 0);
            if (string.IsNullOrWhiteSpace(activityName))
                Dts.Events.FireError(0, string.Empty, string.Format("ActivityName is missing"), string.Empty, 0);

            string archiveConnectionString;
            SqlConnection archiveSqlConnection = null;
            SqlCommand archiveCommand;

            StringBuilder executeStatement = new StringBuilder();
            executeStatement.AppendLine("begin tran");
            executeStatement.AppendLine("declare @@dataCount int");
            executeStatement.AppendLine("declare @@relationCount int");
            executeStatement.AppendLine("declare @@currTime datetime");
            executeStatement.AppendLine("declare @@currTimeStr nvarchar(50)");
            executeStatement.AppendLine("declare @@archivedInstanceTable as nvarchar(256)");
            executeStatement.AppendLine("declare @@archivedRelationshipTable as nvarchar(256)");
            executeStatement.AppendLine();
            executeStatement.AppendLine("select @@dataCount = count(*) FROM[dbo].[bam_" + activityName + "_Instances]");
            executeStatement.AppendLine("select @@relationCount = count(*) FROM[dbo].[bam_" + activityName + "_Relationships]");
            executeStatement.AppendLine("set @@currTime = GETUTCDATE()");
            executeStatement.AppendLine("set @@currTimeStr = cast(datepart(yyyy, @@currTime) as nvarchar) + N'-' + cast(datepart(mm, @@currTime) as nvarchar) + N'-' + cast(datepart(dd, @@currTime) as nvarchar) + ' ' + cast(datepart(hh, @@currTime) as nvarchar) + N':' + cast(datepart(mi, @@currTime) as nvarchar) + N':' + cast(datepart(ss, @@currTime) as nvarchar)");
            executeStatement.AppendLine("set @@archivedInstanceTable = N'bam_" + activityName + "_Instances_' + @@currTimeStr + N'_Failed'");
            executeStatement.AppendLine("set @@archivedRelationshipTable = N'bam_" + activityName + "_Relationships_' + @@currTimeStr + N'_Failed'");
            executeStatement.AppendLine();
            executeStatement.AppendLine("if (@@dataCount > 0)");
            executeStatement.AppendLine("begin");
            executeStatement.AppendLine("select top 0 * into[dbo].[bam_" + activityName + "_Instances_Temp] from[dbo].[bam_" + activityName + "_Instances]");
            executeStatement.AppendLine("exec sp_rename N'bam_" + activityName + "_Instances', @@archivedInstanceTable");
            executeStatement.AppendLine("exec sp_rename N'bam_" + activityName + "_Instances_Temp', 'bam_" + activityName + "_Instances'");
            executeStatement.AppendLine("exec sp_executesql N'ALTER TABLE [bam_" + activityName + "_Instances] WITH NOCHECK ADD PRIMARY KEY CLUSTERED ([RecordID])'");
            executeStatement.AppendLine("end");
            executeStatement.AppendLine("if (@@relationCount > 0)");
            executeStatement.AppendLine("begin");
            executeStatement.AppendLine("select top 0 * into[dbo].[bam_" + activityName + "_Relationships_Temp] from[dbo].[bam_" + activityName + "_Relationships]");
            executeStatement.AppendLine();
            executeStatement.AppendLine("exec sp_rename N'bam_" + activityName + "_Relationships', @@archivedRelationshipTable");
            executeStatement.AppendLine("exec sp_rename N'bam_" + activityName + "_Relationships_Temp', 'bam_" + activityName + "_Relationships'");
            executeStatement.AppendLine("end");
            executeStatement.AppendLine("commit");

            archiveConnectionString = CreateConnectionString(server, database);
            try
            {
                archiveSqlConnection = new SqlConnection(archiveConnectionString);
                archiveSqlConnection.Open();

                archiveCommand = new SqlCommand();
                archiveCommand.CommandType = CommandType.Text;
                archiveCommand.Connection = archiveSqlConnection;

                archiveCommand.CommandText = executeStatement.ToString();
                archiveCommand.ExecuteNonQuery();

                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                Dts.Events.FireError(0, "", ex.Message + Environment.NewLine + ex.StackTrace, "", 0);
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
            finally
            {
                if (null != archiveSqlConnection)
                    archiveSqlConnection.Close();
            }

        }

        private string EscapeQuotes(string s)
        {
            if (string.IsNullOrEmpty(s)) return string.Empty;
            return s.Replace("'", "''");
        }
        private string CreateConnectionString(string server, string database)
        {
            StringBuilder connectionString = new StringBuilder();
            connectionString.Append("Data Source=");
            connectionString.Append(server);
            connectionString.Append(";Initial Catalog=");
            connectionString.Append(database);
            connectionString.Append(";Integrated Security=SSPI;Persist Security Info=false;Application Name=Data Maintenance DTS;");
            return connectionString.ToString();
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
              <ProjectItem
                Name="ST_fab895e43e4549b28e6b10c62f8ae55d.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{846295d3-9459-4442-aff1-dede57eb1cae}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_fab895e43e4549b28e6b10c62f8ae55d</RootNamespace>
    <AssemblyName>ST_fab895e43e4549b28e6b10c62f8ae55d</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_fab895e43e4549b28e6b10c62f8ae55d</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_fab895e43e4549b28e6b10c62f8ae55d</msb:DisplayName>
		<msb:ProjectId>{BF217381-D430-43A4-B9C6-4D01A4DA116F}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_fab895e43e4549b28e6b10c62f8ae55d.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_fab895e43e4549b28e6b10c62f8ae55d")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_fab895e43e4549b28e6b10c62f8ae55d")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fab895e43e4549b28e6b10c62f8ae55d.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fab895e43e4549b28e6b10c62f8ae55d.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fab895e43e4549b28e6b10c62f8ae55d.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_fab895e43e4549b28e6b10c62f8ae55d.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_fab895e43e4549b28e6b10c62f8ae55d.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_fab895e43e4549b28e6b10c62f8ae55d.dll">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
EABpAE4FBgCZAE4FBgDBAE4FFQDRAE4FBgBxAEwGKADZACAGLQDhAEcEMgDpAGEDOADxAHQGPADZ
AKsDQgDxAI4ASgDZAGIGTwDxAAAHVADxAHQGVwD5AEQFXgCBAE4FBgCBABkBZwCBABkBbQDxAG0G
cgDxAG0GeQB5AE4FEAABAWgEBgAJAU4FBgARATABfwAJAbQEhgChAKIDjAARAcsGEAARAegGkADZ
AI4GAQCJAMAAjAAhASQBlACJAKEAjAABAa0BBgDxAPgGSgDxAIYAmACBAH8AZwBxAE4FBgChAE4F
BgApAecAngApAdsGpwCpAE4FrQDJAE4FBgAIABQAxwAIABgAzAApAHMAOQEuAAsAEQEuABMAGgEu
ABsAOQEuACMAQgEuACsAawEuADMAawEuADsAawEuAEMAQgEuAEsAcQEuAFMAawEuAFsAiAFDAGMA
zABJAHMAOQFhAHsAzABjAGsAzAAbAAMAAQAEAAMAAAAZBQIBAABoAQcBAACGBgwBAgAGAAMAAgAH
AAUAAQAIAAUAAgAJAAcABIAAAAEAAADvF9udAAAAAAAARgAAAAQAAAAAAAAAAAAAALUAPQAAAAAA
DQAAAAAAAAAAAAAAvgCvAwAAAAAEAAAAAAAAAAAAAAC1ADEAAAAAAAQAAAAAAAAAAAAAALUAUAQA
AAAADQAAAAAAAAAAAAAAvgAKAAAAAAAAAAAAAQAAAJ8FAAAFAAIAAAAAAAA8TW9kdWxlPgBNaWNy
b3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBTeXN0ZW0uRGF0YQBtc2NvcmxpYgBT
VF9mYWI4OTVlNDNlNDU0OWIyOGU2YjEwYzYyZjhhZTU1ZABEYkNvbW1hbmQAU3FsQ29tbWFuZABB
cHBlbmQAUmVwbGFjZQBJc051bGxPcldoaXRlU3BhY2UAZ2V0X1N0YWNrVHJhY2UAZGVmYXVsdElu
c3RhbmNlAGdldF9NZXNzYWdlAFZhcmlhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9t
SGFuZGxlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAQXBwZW5kTGluZQBnZXRfTmV3
TGluZQBzZXRfQ29tbWFuZFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNv
dXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGlu
Z3NCYXNlAGRhdGFiYXNlAENsb3NlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJh
dGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJp
YnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3Nl
bWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlD
b25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGls
YXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1i
bHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFz
c2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRf
VmFsdWUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBDcmVhdGVDb25uZWN0aW9uU3Ry
aW5nAFRvU3RyaW5nAExvZwBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0
LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0u
Q29tcG9uZW50TW9kZWwAU1RfZmFiODk1ZTQzZTQ1NDliMjhlNmIxMGM2MmY4YWU1NWQuZGxsAGdl
dF9JdGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAE9wZW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29u
ZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBzZXRfQ29u
bmVjdGlvbgBEYkNvbm5lY3Rpb24AU3FsQ29ubmVjdGlvbgBFeGNlcHRpb24AU3lzdGVtLkRhdGEu
Q29tbW9uAEN1bHR1cmVJbmZvAFN0cmluZ0J1aWxkZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBFdmVu
dHNPYmplY3RXcmFwcGVyAHNlcnZlcgBGaXJlRXJyb3IALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFn
bm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMA
U1RfZmFiODk1ZTQzZTQ1NDliMjhlNmIxMGM2MmY4YWU1NWQuUHJvcGVydGllcy5SZXNvdXJjZXMu
cmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUX2ZhYjg5NWU0M2U0NTQ5YjI4ZTZiMTBjNjJmOGFl
NTVkLlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxlcwBFc2NhcGVRdW90ZXMAU2V0dGluZ3MAU3VjY2Vz
cwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAZ2V0X0V2ZW50cwBDb25jYXQARm9ybWF0AE9iamVjdABn
ZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABTeXN0ZW0uRGF0YS5TcWxDbGllbnQARW52aXJvbm1l
bnQAU3lzdGVtLlRleHQAc2V0X0NvbW1hbmRUZXh0AGdldF9Bc3NlbWJseQBFeGVjdXRlTm9uUXVl
cnkASXNOdWxsT3JFbXB0eQAAAAAZQQBjAHQAaQB2AGkAdAB5AE4AYQBtAGUAAB9BAHIAYwBoAGkA
dgBpAG4AZwBTAGUAcgB2AGUAcgAAI0EAcgBjAGgAaQB2AGkAbgBnAEQAYQB0AGEAYgBhAHMAZQAA
L0EAcgBjAGgAaQB2AGkAbgBnAFMAZQByAHYAZQByACAAPQAgACcAewAwAH0AJwABM0EAcgBjAGgA
aQB2AGkAbgBnAEQAYQB0AGEAYgBhAHMAZQAgAD0AIAAnAHsAMAB9ACcAASlBAGMAdABpAHYAaQB0
AHkATgBhAG0AZQAgAD0AIAAnAHsAMAB9ACcAATVBAHIAYwBoAGkAdgBpAG4AZwBTAGUAcgB2AGUA
cgAgAGkAcwAgAG0AaQBzAHMAaQBuAGcAADlBAHIAYwBoAGkAdgBpAG4AZwBEAGEAdABhAGIAYQBz
AGUAIABpAHMAIABtAGkAcwBzAGkAbgBnAAAvQQBjAHQAaQB2AGkAdAB5AE4AYQBtAGUAIABpAHMA
IABtAGkAcwBzAGkAbgBnAAAVYgBlAGcAaQBuACAAdAByAGEAbgAAL2QAZQBjAGwAYQByAGUAIABA
AEAAZABhAHQAYQBDAG8AdQBuAHQAIABpAG4AdAAAN2QAZQBjAGwAYQByAGUAIABAAEAAcgBlAGwA
YQB0AGkAbwBuAEMAbwB1AG4AdAAgAGkAbgB0AAA3ZABlAGMAbABhAHIAZQAgAEAAQABjAHUAcgBy
AFQAaQBtAGUAIABkAGEAdABlAHQAaQBtAGUAAEVkAGUAYwBsAGEAcgBlACAAQABAAGMAdQByAHIA
VABpAG0AZQBTAHQAcgAgAG4AdgBhAHIAYwBoAGEAcgAoADUAMAApAABhZABlAGMAbABhAHIAZQAg
AEAAQABhAHIAYwBoAGkAdgBlAGQASQBuAHMAdABhAG4AYwBlAFQAYQBiAGwAZQAgAGEAcwAgAG4A
dgBhAHIAYwBoAGEAcgAoADIANQA2ACkAAGlkAGUAYwBsAGEAcgBlACAAQABAAGEAcgBjAGgAaQB2
AGUAZABSAGUAbABhAHQAaQBvAG4AcwBoAGkAcABUAGEAYgBsAGUAIABhAHMAIABuAHYAYQByAGMA
aABhAHIAKAAyADUANgApAABbcwBlAGwAZQBjAHQAIABAAEAAZABhAHQAYQBDAG8AdQBuAHQAIAA9
ACAAYwBvAHUAbgB0ACgAKgApACAARgBSAE8ATQBbAGQAYgBvAF0ALgBbAGIAYQBtAF8AABdfAEkA
bgBzAHQAYQBuAGMAZQBzAF0AAGNzAGUAbABlAGMAdAAgAEAAQAByAGUAbABhAHQAaQBvAG4AQwBv
AHUAbgB0ACAAPQAgAGMAbwB1AG4AdAAoACoAKQAgAEYAUgBPAE0AWwBkAGIAbwBdAC4AWwBiAGEA
bQBfAAAfXwBSAGUAbABhAHQAaQBvAG4AcwBoAGkAcABzAF0AADtzAGUAdAAgAEAAQABjAHUAcgBy
AFQAaQBtAGUAIAA9ACAARwBFAFQAVQBUAEMARABBAFQARQAoACkAAIKHcwBlAHQAIABAAEAAYwB1
AHIAcgBUAGkAbQBlAFMAdAByACAAPQAgAGMAYQBzAHQAKABkAGEAdABlAHAAYQByAHQAKAB5AHkA
eQB5ACwAIABAAEAAYwB1AHIAcgBUAGkAbQBlACkAIABhAHMAIABuAHYAYQByAGMAaABhAHIAKQAg
ACsAIABOACcALQAnACAAKwAgAGMAYQBzAHQAKABkAGEAdABlAHAAYQByAHQAKABtAG0ALAAgAEAA
QABjAHUAcgByAFQAaQBtAGUAKQAgAGEAcwAgAG4AdgBhAHIAYwBoAGEAcgApACAAKwAgAE4AJwAt
ACcAIAArACAAYwBhAHMAdAAoAGQAYQB0AGUAcABhAHIAdAAoAGQAZAAsACAAQABAAGMAdQByAHIA
VABpAG0AZQApACAAYQBzACAAbgB2AGEAcgBjAGgAYQByACkAIAArACAAJwAgACcAIAArACAAYwBh
AHMAdAAoAGQAYQB0AGUAcABhAHIAdAAoAGgAaAAsACAAQABAAGMAdQByAHIAVABpAG0AZQApACAA
YQBzACAAbgB2AGEAcgBjAGgAYQByACkAIAArACAATgAnADoAJwAgACsAIABjAGEAcwB0ACgAZABh
AHQAZQBwAGEAcgB0ACgAbQBpACwAIABAAEAAYwB1AHIAcgBUAGkAbQBlACkAIABhAHMAIABuAHYA
YQByAGMAaABhAHIAKQAgACsAIABOACcAOgAnACAAKwAgAGMAYQBzAHQAKABkAGEAdABlAHAAYQBy
AHQAKABzAHMALAAgAEAAQABjAHUAcgByAFQAaQBtAGUAKQAgAGEAcwAgAG4AdgBhAHIAYwBoAGEA
cgApAAFJcwBlAHQAIABAAEAAYQByAGMAaABpAHYAZQBkAEkAbgBzAHQAYQBuAGMAZQBUAGEAYgBs
AGUAIAA9ACAATgAnAGIAYQBtAF8AAVNfAEkAbgBzAHQAYQBuAGMAZQBzAF8AJwAgACsAIABAAEAA
YwB1AHIAcgBUAGkAbQBlAFMAdAByACAAKwAgAE4AJwBfAEYAYQBpAGwAZQBkACcAAVFzAGUAdAAg
AEAAQABhAHIAYwBoAGkAdgBlAGQAUgBlAGwAYQB0AGkAbwBuAHMAaABpAHAAVABhAGIAbABlACAA
PQAgAE4AJwBiAGEAbQBfAAFbXwBSAGUAbABhAHQAaQBvAG4AcwBoAGkAcABzAF8AJwAgACsAIABA
AEAAYwB1AHIAcgBUAGkAbQBlAFMAdAByACAAKwAgAE4AJwBfAEYAYQBpAGwAZQBkACcAASlpAGYA
IAAoAEAAQABkAGEAdABhAEMAbwB1AG4AdAAgAD4AIAAwACkAAAtiAGUAZwBpAG4AAD1zAGUAbABl
AGMAdAAgAHQAbwBwACAAMAAgACoAIABpAG4AdABvAFsAZABiAG8AXQAuAFsAYgBhAG0AXwAAQV8A
SQBuAHMAdABhAG4AYwBlAHMAXwBUAGUAbQBwAF0AIABmAHIAbwBtAFsAZABiAG8AXQAuAFsAYgBh
AG0AXwAAK2UAeABlAGMAIABzAHAAXwByAGUAbgBhAG0AZQAgAE4AJwBiAGEAbQBfAAFJXwBJAG4A
cwB0AGEAbgBjAGUAcwAnACwAIABAAEAAYQByAGMAaABpAHYAZQBkAEkAbgBzAHQAYQBuAGMAZQBU
AGEAYgBsAGUAAS9fAEkAbgBzAHQAYQBuAGMAZQBzAF8AVABlAG0AcAAnACwAIAAnAGIAYQBtAF8A
ARdfAEkAbgBzAHQAYQBuAGMAZQBzACcAAU1lAHgAZQBjACAAcwBwAF8AZQB4AGUAYwB1AHQAZQBz
AHEAbAAgAE4AJwBBAEwAVABFAFIAIABUAEEAQgBMAEUAIABbAGIAYQBtAF8AAYCBXwBJAG4AcwB0
AGEAbgBjAGUAcwBdACAAVwBJAFQASAAgAE4ATwBDAEgARQBDAEsAIABBAEQARAAgAFAAUgBJAE0A
QQBSAFkAIABLAEUAWQAgAEMATABVAFMAVABFAFIARQBEACAAKABbAFIAZQBjAG8AcgBkAEkARABd
ACkAJwABB2UAbgBkAAAxaQBmACAAKABAAEAAcgBlAGwAYQB0AGkAbwBuAEMAbwB1AG4AdAAgAD4A
IAAwACkAAElfAFIAZQBsAGEAdABpAG8AbgBzAGgAaQBwAHMAXwBUAGUAbQBwAF0AIABmAHIAbwBt
AFsAZABiAG8AXQAuAFsAYgBhAG0AXwAAWV8AUgBlAGwAYQB0AGkAbwBuAHMAaABpAHAAcwAnACwA
IABAAEAAYQByAGMAaABpAHYAZQBkAFIAZQBsAGEAdABpAG8AbgBzAGgAaQBwAFQAYQBiAGwAZQAB
N18AUgBlAGwAYQB0AGkAbwBuAHMAaABpAHAAcwBfAFQAZQBtAHAAJwAsACAAJwBiAGEAbQBfAAEf
XwBSAGUAbABhAHQAaQBvAG4AcwBoAGkAcABzACcAAQ1jAG8AbQBtAGkAdAAAAQADJwABBScAJwAB
GUQAYQB0AGEAIABTAG8AdQByAGMAZQA9AAAjOwBJAG4AaQB0AGkAYQBsACAAQwBhAHQAYQBsAG8A
ZwA9AACAuTsASQBuAHQAZQBnAHIAYQB0AGUAZAAgAFMAZQBjAHUAcgBpAHQAeQA9AFMAUwBQAEkA
OwBQAGUAcgBzAGkAcwB0ACAAUwBlAGMAdQByAGkAdAB5ACAASQBuAGYAbwA9AGYAYQBsAHMAZQA7
AEEAcABwAGwAaQBjAGEAdABpAG8AbgAgAE4AYQBtAGUAPQBEAGEAdABhACAATQBhAGkAbgB0AGUA
bgBhAG4AYwBlACAARABUAFMAOwAAcVMAVABfAGYAYQBiADgAOQA1AGUANAAzAGUANAA1ADQAOQBi
ADIAOABlADYAYgAxADAAYwA2ADIAZgA4AGEAZQA1ADUAZAAuAFAAcgBvAHAAZQByAHQAaQBlAHMA
LgBSAGUAcwBvAHUAcgBjAGUAcwAAAABJB74to8MgS4PGKdr19I8uAAQgAQEIAyAAAQUgAQEREQQg
AQEOBSABARFdDAcHDg4ODhI9EkESRQQgABJtBCAAEnEFIAESdRwDIAAcBQACDg4cByADAQ4IHQUE
AAECDgQgABJ9AgYOBgACDg4dHAggBQIIDg4OCAUgARJBDgQgABJBBgADDg4ODgUAAQ4dDgYgAQER
gI0FIAEBEj0DIAAOAyAACAMAAA4FIAIODg4IAAESgJURgJkFIAASgJ0HIAIBDhKAnQi3elxWGTTg
iQiJhF3NgIDMkQQAAAAABAEAAAADBhJVAwYSWQMGEhACBggDBhEUBCABDg4EAAASVQQAABJZBQAB
ARJZBAAAEhADAAABBAgAElUECAASWQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0
aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF9mYWI4OTVlNDNlNDU0OWIyOGU2YjEwYzYyZjhhZTU1
ZAAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDE2AABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9u
PXY0LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNQAAtAAAAM7K
774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVy
c2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkz
NGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQ
QURQtAAAAAhCAAAAAAAAAAAAACJCAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUQgAAAAAAAAAA
AAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAA
ABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAA
GgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4A
AAEAAAABANud7xcAAAEA253vFz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEA
cgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACw
BHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAAMAA0AGIA
MAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBt
AGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8A
ZgBhAGIAOAA5ADUAZQA0ADMAZQA0ADUANAA5AGIAMgA4AGUANgBiADEAMABjADYAMgBmADgAYQBl
ADUANQBkAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYAMQAyADcA
LgA0ADAANAAxADEAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8AZgBh
AGIAOAA5ADUAZQA0ADMAZQA0ADUANAA5AGIAMgA4AGUANgBiADEAMABjADYAMgBmADgAYQBlADUA
NQBkAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5
AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADYAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0A
YQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABT
AFQAXwBmAGEAYgA4ADkANQBlADQAMwBlADQANQA0ADkAYgAyADgAZQA2AGIAMQAwAGMANgAyAGYA
OABhAGUANQA1AGQALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBU
AF8AZgBhAGIAOAA5ADUAZQA0ADMAZQA0ADUANAA5AGIAMgA4AGUANgBiADEAMABjADYAMgBmADgA
YQBlADUANQBkAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA2
ADEAMgA3AC4ANAAwADQAMQAxAAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkA
bwBuAAAAMQAuADAALgA2ADEAMgA3AC4ANAAwADQAMQAxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAADQyAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Archiving instance data]"
          DTS:CreationName=""
          DTS:DTSID="{02D7FBCE-A37D-4521-81BF-279F3AA3C613}"
          DTS:From="Package\Foreach Loop Container\Archiving instance data"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Archiving instance data"
          DTS:To="Package\Foreach Loop Container\Archiving relationship data" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Archiving relationship data]"
          DTS:CreationName=""
          DTS:DTSID="{CA36451C-45AC-4AD6-B189-1BA5ED07FC0C}"
          DTS:From="Package\Foreach Loop Container\Archiving relationship data"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Archiving relationship data"
          DTS:To="Package\Foreach Loop Container\Checking for successful transfer" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{9E068B8E-07CA-4DE2-B591-E7658BB9B44E}"
          DTS:From="Package\Foreach Loop Container\Begin archiving"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach Loop Container\Verify archive tables empty" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{54BD057C-ADC9-4A4F-9698-EF74E23A8486}"
          DTS:From="Package\Foreach Loop Container\Verify archive tables empty"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Foreach Loop Container\Archiving instance data" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{F26458CC-F782-4F7A-A41E-EF463DA7ED19}"
          DTS:From="Package\Foreach Loop Container\Checking for successful transfer"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Foreach Loop Container\Recreating archiving tables" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{283E6C64-59C3-4917-9AED-ABF834FF05CA}"
          DTS:From="Package\Foreach Loop Container\Recreating archiving tables"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Foreach Loop Container\End archiving" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Spawn a new partition]"
          DTS:CreationName=""
          DTS:DTSID="{773D21AC-59A7-4B34-ABEC-590A2003D184}"
          DTS:From="Package\Foreach Loop Container\Spawn a new partition"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Spawn a new partition"
          DTS:To="Package\Foreach Loop Container\Begin archiving" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{2B8B7BCB-B2FD-4175-A61F-DDD784DD892D}"
          DTS:ObjectName="{2B8B7BCB-B2FD-4175-A61F-DDD784DD892D}"
          DTS:ValueIndex="0"
          DTS:VariableName="ActivityName" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Modify Archiving Connections"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="This script task modifies the connection to the archiving and log databases."
      DTS:DTSID="{93052DFC-20E2-43A0-AAA0-83B38D3464E0}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Modify Archiving Connections"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="1" />
      <DTS:ObjectData>
        <ScriptProject
          Name="ScriptTask_69484aa90bbe4bff825ef14c7577bccc"
          VSTAMajorVersion="14"
          VSTAMinorVersion="0"
          Language="VisualBasic"
          ReadOnlyVariables="$Package::PrimaryImportDatabase,$Package::PrimaryImportServer"
          ReadWriteVariables="ArchivingServer,ArchivingDatabase">
          <ProjectItem
            Name="scripttask_69484aa90bbe4bff825ef14c7577bccc.vbproj"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <RootNamespace>ScriptTask_69484aa90bbe4bff825ef14c7577bccc.vbproj</RootNamespace>
    <AssemblyName>ScriptTask_69484aa90bbe4bff825ef14c7577bccc.vbproj</AssemblyName>
    <StartupObject></StartupObject>
    <OptionExplicit>On</OptionExplicit>
    <OptionCompare>Binary</OptionCompare>
    <OptionStrict>Off</OptionStrict>
    <OptionInfer>On</OptionInfer>
    <ProjectGuid>{CA672718-BDF5-49E4-A8C6-BB7BC83F1161}</ProjectGuid>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DefineConstants></DefineConstants>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>bin\</OutputPath>
    <RegisterForComInterop>false</RegisterForComInterop>
    <RemoveIntegerChecks>false</RemoveIntegerChecks>
    <NoWarn>42016,42017,42018,42019,42032,42353,42354,42355</NoWarn>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <!-- Visual Basic supports Importing namespaces (equivalent to using statements in C#).-->
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.designer.vb">
      <DependentUpon>ScriptMain.Designer.xml</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
    <None Include="ScriptMain.Designer.xml">
      <DependentUpon>ScriptMain.vb</DependentUpon>
    </None>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="SSIS_ScriptTask">
          <HostItem Name="ScriptMain" Code="ScriptMain.vb" CanonicalName="ScriptMain" DisplayName="ScriptMain" Blueprint="ScriptMain.Designer.xml" GeneratedCode="ScriptMain.designer.vb" />
        </Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
  <PropertyGroup>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="My Project\AssemblyInfo.vb"
            Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ScriptTask_69484aa90bbe4bff825ef14c7577bccc.vbproj")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("MS")> 
<Assembly: AssemblyProduct("ScriptTask_69484aa90bbe4bff825ef14c7577bccc.vbproj")> 
<Assembly: AssemblyCopyright("Copyright @ MS 2008")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("5f2cd1f3-d046-4e4d-9c79-23685cf05d31")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.vb"
            Encoding="UTF8"><![CDATA['<copyright file="DataMaintenanceScriptTask" company="Microsoft">
' Copyright (c) 1998-2006 Microsoft Corporation. All rights reserved. 
'  
' THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, 
' WHETHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED 
' WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE. 
' THE ENTIRE RISK OF USE OR RESULTS IN CONNECTION WITH THE USE OF THIS CODE 
' AND INFORMATION REMAINS WITH THE USER. 
'</copyright>

Imports System
Imports System.Data.SqlClient
Imports Microsoft.SqlServer.Dts.Runtime

<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute> _
Partial Class ScriptMain

	Private Sub ScriptMain_Startup(ByVal sender As Object, ByVal e As System.EventArgs)

	End Sub

	Private Sub ScriptMain_Shutdown(ByVal sender As Object, ByVal e As System.EventArgs)

		Try
			' Unlock variables from the read-only and read-write variable collection properties
			If (Dts.Variables.Count <> 0) Then
				Dts.Variables.Unlock()
			End If
		Catch ex As Exception
		End Try
	End Sub

	Enum ScriptResults
		Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
		Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
	End Enum

    ' The DTS execution engine calls this method when the task executes.
    ' To access the DTS object model, use the Dts object. Connections, variables, events,
    ' and logging features are available as static members of the Dts class.
    ' Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
    ' 
    ' To open Code and Text Editor Help, press F1.
    ' To open Object Browser, press Ctrl+Alt+J.

    Public Sub Main()
        Const GetPropertyStoredProcedure As String = "bam_Metadata_GetProperty"
        Const PrimaryImportServerVariableName As String = "$Package::PrimaryImportServer"
        Const PrimaryImportDatabaseVariableName As String = "$Package::PrimaryImportDatabase"
        Const ArchiveServerVariableName As String = "ArchivingServer"
        Const ArchiveDatabaseVariableName As String = "ArchivingDatabase"
        Const ConnectionStringFormat As String = "Data Source={0};Initial Catalog={1};Use Encryption for Data={2};Application Name={3};Connection Timeout={4};Provider=SQLOLEDB.1;Integrated Security=SSPI;Persist Security Info=False;Auto Translate=False;"
        Const DefaultTimeout As String = "15"
        Const ApplicationName As String = "Data Maintenance DTS"

        Dim connection As SqlConnection
        Dim command As SqlCommand
        Try
            Dim primaryImportServer As String
            Dim primaryImportDatabase As String
            Dim archivingServer As String
            Dim archivingDatabase As String
            Dim useEncryption As String
            Dim encryptionFlag As String
            Dim timeout As String
            Dim connectionString As String
            Dim oConnectionManager As ConnectionManager
            Dim emptyBytes(0) As Byte

            If Dts.Variables.Contains(PrimaryImportServerVariableName) = True Then
                primaryImportServer = CStr(Dts.Variables(PrimaryImportServerVariableName).Value)
            End If
            If Dts.Variables.Contains(PrimaryImportDatabaseVariableName) = True Then
                primaryImportDatabase = CStr(Dts.Variables(PrimaryImportDatabaseVariableName).Value)
            End If
            connectionString = "Initial Catalog=" + primaryImportDatabase _
                + ";Data Source=" + primaryImportServer + ";Integrated Security=SSPI"
            connection = New SqlConnection(connectionString)
            connection.Open()
            command = New SqlCommand(GetPropertyStoredProcedure, connection)
            command.CommandType = Data.CommandType.StoredProcedure

            ' Get archive server name
            command.Parameters.Add("@propertyName", Data.SqlDbType.NVarChar, 128).Value = "ServerName"
            command.Parameters.Add("@scope", Data.SqlDbType.NVarChar, 128).Value = "ArchivingDatabase"
            archivingServer = CStr(command.ExecuteScalar())
            command.Parameters.Clear()

            ' Get archive database name
            command.Parameters.Add("@propertyName", Data.SqlDbType.NVarChar, 128).Value = "DatabaseName"
            command.Parameters.Add("@scope", Data.SqlDbType.NVarChar, 128).Value = "ArchivingDatabase"
            archivingDatabase = CStr(command.ExecuteScalar())
            command.Parameters.Clear()

            ' Get encryption flag
            command.Parameters.Add("@propertyName", Data.SqlDbType.NVarChar, 128).Value = "UseEncryption"
            command.Parameters.Add("@scope", Data.SqlDbType.NVarChar, 128).Value = "DataMaintenanceDTS"
            encryptionFlag = CStr(command.ExecuteScalar())
            If (StrComp(encryptionFlag, "0", CompareMethod.Binary) = 0) Then
                useEncryption = "False"
            Else
                useEncryption = "True"
            End If
            command.Parameters.Clear()

            ' Get timeout value
            command.Parameters.Add("@propertyName", Data.SqlDbType.NVarChar, 128).Value = "ConnectionTimeOut"
            command.Parameters.Add("@scope", Data.SqlDbType.NVarChar, 128).Value = "DataMaintenanceDTS"
            timeout = CStr(command.ExecuteScalar())
            If timeout Is Nothing Then
                timeout = DefaultTimeout
            End If

            oConnectionManager = Dts.Connections("1")
            connectionString = String.Format(ConnectionStringFormat, primaryImportServer, primaryImportDatabase, _
                useEncryption, ApplicationName, timeout)
            oConnectionManager.ConnectionString = connectionString

            oConnectionManager = Dts.Connections("2")
            connectionString = String.Format(ConnectionStringFormat, archivingServer, archivingDatabase, _
                useEncryption, ApplicationName, timeout)
            oConnectionManager.ConnectionString = connectionString

            oConnectionManager = Dts.Connections("3")
            connectionString = String.Format(ConnectionStringFormat, archivingServer, "msdb", _
                useEncryption, ApplicationName, timeout)
            oConnectionManager.ConnectionString = connectionString

            Dts.Variables(ArchiveServerVariableName).Value = archivingServer
            Dts.Variables(ArchiveDatabaseVariableName).Value = archivingDatabase

            Dts.Log("Modified connections. Source Server:" + primaryImportServer + " Source Database:" + _
                primaryImportDatabase + " Archive Server:" + archivingServer + " Archive Database:" + _
                archivingDatabase, 0, emptyBytes)

            Dts.TaskResult = ScriptResults.Success
        Catch ex As Exception
            Dts.Events.FireError(0, "", ex.Message & ControlChars.CrLf & ex.StackTrace, "", 0)
        Finally
            If Not (connection Is Nothing) Then
                connection.Close()
                connection = Nothing
            End If
        End Try
    End Sub

End Class]]></ProjectItem>
          <ProjectItem
            Name="My Project\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.Designer.xml"
            Encoding="UTF8"><![CDATA[<hostitem:hostItem hostitem:identifier="ScriptMain" hostitem:namespace="" hostitem:primaryCookie="ScriptMain" hostitem:baseType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTAProxy.VSTARTScriptObjectModelBaseEntryPoint" hostitem:interfaceType="Microsoft.VisualStudio.Tools.Applications.Runtime.IEntryPoint" hostitem:displayName="ScriptMain" hostitem:generateCode="true" hostitem:startupIndex="0" xmlns:hostitem="http://schemas.microsoft.com/2006/VisualStudio/Tools/Applications/HostItem.xsd" />]]></ProjectItem>
          <ProjectItem
            Name="My Project\Settings.Designer.vb"
            Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>scripttask_69484aa90bbe4bff825ef14c7577bccc</msb:CodeName>
		<msb:ProjectId>{1A7975C4-93E7-49F4-9F1E-DA8F3BB30B8B}</msb:ProjectId>
		<msb:NoContent>Reference;Import;Folder</msb:NoContent>
		<msb:DisplayName>scripttask_69484aa90bbe4bff825ef14c7577bccc</msb:DisplayName>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:File Include="My Project\AssemblyInfo.vb"/>
		<msb:File Include="My Project\Resources.Designer.vb"/>
		<msb:File Include="ScriptMain.designer.vb"/>
		<msb:File Include="My Project\Settings.Designer.vb"/>
		<msb:File Include="ScriptMain.vb"/>
		<msb:File Include="My Project\Resources.resx"/>
		<msb:File Include="My Project\Settings.settings"/>
		<msb:File Include="ScriptMain.Designer.xml"/>
		<msb:Project Include="scripttask_69484aa90bbe4bff825ef14c7577bccc.vbproj"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.designer.vb"
            Encoding="UTF8"><![CDATA[<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
	Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
End Class]]></ProjectItem>
          <ProjectItem
            Name="My Project\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="My Project\Resources.Designer.vb"
            Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
          <BinaryItem
            Name="ScriptTask_69484aa90bbe4bff825ef14c7577bccc.vbproj.dll">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
VAEaAO4BVAEOAJAA+AgGAH4EDwYaACcBVAEOAC0K+AgGAPAEDwYWAL8AyQoWAIIBhAAWAKIGyQoW
AOIHyQoWAHQBhAAOAAAKpQAOAMoApQAaAD0KVAESAMUHVAUGAEEIDwYAAAAAKwAAAAAAAQABAAAA
AABYBvMKTQABAAEAAAAAAAII8wpRAAEAAgAAARAAqwrzCmEAAQADAAAAAACQCVAJYQAFAAgAAAEQ
AAgK+wSBAAcADAABAAAAPQb7BI0ACQAPAAUBAAChCAAAYQAJABMABQEAABAAAABhAAkAGgACAQAA
dwoAAKEACgAcADEASQeFATEAIAeNATEANAeVATEAYgedAREADQilAREAtgGpAREAgwStAREAngqx
ASEA6QpDAQYGfAC0AVaAZwq3AVaAlgG3AVAgAAAAAAYYSwgGAAEAWCAAAAAABhhLCAYAAQBgIAAA
AAARGFEIjAABAIogAAAAABMI9Qe7AQEAliAAAAAAEwhIBsABAQCiIAAAAAATCNkHxQEBAK4gAAAA
ABMIkQjKAQEAuiAAAAAAAxhLCAYAAQDCIAAAAAAWCIcHzwEBAO4gAAAAABYIngHUAQEA9SAAAAAA
FgiqAdkBAQD9IAAAAAARGFEIjAACAA4hAAAAAAYYSwgGAAIAGCEAAAAAFgiLBN8BAgB0IQAAAAAG
GEsIBgACAHwhAAAAAAEA+QbkAQIAgCEAAAAAAQDRBuQBBADQIQAAAAAGAEMGBgAGACAmAAAAAMYC
HQqlAAYALiYAAAAAxgIPAYEABwA2JgAAAACDAI4B7AEHAEImAAAAAMYC7gQQAQcATCYAAAAAEQBp
APEBBwBsJgAAAAABAFUA+QEIALogAAAAAAYYSwgGAAkAeCYAAAAAAwj2AEoACQCsJgAAAAAGGEsI
BgAJAAAAAQCoBAAAAQCABwAAAgCsBAAAAQCABwAAAgCsBAAAAQDvBgAAAQAGAQAAAQAGAQkASwgB
ABEASwgGABkASwgKACkASwgQADEASwgQADkASwgQAEEASwgQAEkASwgQAFEASwgQAFkASwgVAGEA
SwgVAGkASwgQAHEASwgQAHkASwgQAIEASwgaAJEASwggAKkASwgGALEASwgGALkASwgGANEASwgm
AOkASwgQAAkBSwgGABEBSwgGAJkASwgGAKEASwgGAAwASwgGABQASwgGABwASwgGACQASwgGAAwA
9gBKABQA9gBKABwA9gBKACQA9gBKAMEASwgGANkAQgFPANkAKQtXAPEASwhdAFkBnwRlAAEBSwgG
AGEB7wdqAGEBtQpqABkBSwgGABkBbwp1AGkB8gl7AHkB3wqBAHEBLgUGAIEBMQiFAIEBHwiMAHEB
JAqlAHEBBgaqAJEBiwSxAJkB7gS1AKEBkAq6ADEBSwgQADEBGwYGAKkBSwjAAKkBfgHIAKkBWArP
ALkBuwDVAMEBlQTgAKkBEgexALkBDAcGANEB8QblAGkBOQruAOEBBgb0AKEBlwr7ADkB2QQQAJEB
lQTgAGkB9wQCAWkBugoBAGkBhQoKASkBGwEQASkB2AAQAaEBkAoUAekBFQgbATEBIAIGAMEAHQql
AMEADwGBAMEA7gQQAfEB5wAsATQA6QpDATwAiwRKADwAlQRaATwASwgGAAgALAB7AQgAMACAASkA
qwDCAy4ACwApAi4AEwAyAi4AGwBRAi4AIwBaAi4AKwCSAi4AMwCYAi4AOwBaAi4AQwCgAi4ASwCS
Ai4AUwC5Ai4AWwCSAi4AYwC/Ai4AawDpAi4AcwD2AkAAiwCAAUAAgwA+A0MAewBHA0MAgwA+A0kA
qwDTA2MAewBHA2MAgwA+A2kAqwDnA4AAiwCAAYMAkwCAAYMAmwCAAYMAewBHA4kAqwD0A6AAiwCA
AakAgwBRAsAAiwCAAckAgwBRAuAAiwCAAeMAUwCSAuMAuwCAAekAswCAAQMBgwA+AwMBowBgAyMB
gwA+AyMBWwCSAmACgwA+A2ACiwCAAYACgwA+A4ACiwCAAaACgwA+A6ACiwCAAcACgwA+A8ACiwCA
AeACiwCAAQADiwCAASADiwCAASADgwA+A0ADiwCAAWADiwCAAWADgwA+A28AkAAkATcBBAABAAUA
BQAGAAcACQAIAAAABAgBAgAAWgYGAgAA3QcLAgAAowgQAgAAiwcVAgAAugEaAgAAqAQfAgAA+gAk
AgIABAADAAIABQAFAAIABgAHAAIABwAJAAIACQALAAIACgANAAEACwANAAIADgAPAAIAGgARAC4A
NQA8AEMAKQE8AUsBUgEEgAAAAQAAAAAAAAAAAAAAAAD7BAAABAAAAAAAAAAAAAAAYAGcAAAAAAAE
AAAAAAAAAAAAAABgAQ8GAAAAAAoAAAAAAAAAAAAAAGkBpQAAAAAADQAAAAAAAAAAAAAAcgE1BQAA
AAAEAAAAAAAAAAAAAABgAYQAAAAAAA0AAAAAAAAAAAAAAHIBNAAAAAAAAAAAAAEAAACcCQAACAAE
AAkABAAKAAcAAAAQABIAUwAAABAALwBTAAAAAAAxAFMAoQAyAaEAVQEAAABDb250ZXh0VmFsdWVg
MQBUaHJlYWRTYWZlT2JqZWN0UHJvdmlkZXJgMQA8TW9kdWxlPgBNaWNyb3NvZnQuU3FsU2VydmVy
Lk1hbmFnZWREVFMAVABEaXNwb3NlX19JbnN0YW5jZV9fAENyZWF0ZV9fSW5zdGFuY2VfXwB2YWx1
ZV9fAFN5c3RlbS5EYXRhAFByb2plY3REYXRhAG1zY29ybGliAE1pY3Jvc29mdC5WaXN1YWxCYXNp
YwBBZGQAU3FsQ29tbWFuZABDb21wYXJlTWV0aG9kAGdldF9TdGFja1RyYWNlAENyZWF0ZUluc3Rh
bmNlAGdldF9HZXRJbnN0YW5jZQBpbnN0YW5jZQBHZXRIYXNoQ29kZQBnZXRfTWVzc2FnZQBWYXJp
YWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBNaWNyb3NvZnQuU3FsU2Vy
dmVyLkR0cy5SdW50aW1lAFNxbERiVHlwZQBzZXRfQ29tbWFuZFR5cGUAR2V0VHlwZQBGYWlsdXJl
AGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAF9yZXNDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1v
ZGVsQmFzZQBBcHBsaWNhdGlvbkJhc2UARFRTUmVhZE9ubHlDb2xsZWN0aW9uQmFzZQBBcHBsaWNh
dGlvblNldHRpbmdzQmFzZQBDbG9zZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBHdWlkQXR0cmlidXRl
AEhlbHBLZXl3b3JkQXR0cmlidXRlAEdlbmVyYXRlZENvZGVBdHRyaWJ1dGUARGVidWdnZXJOb25V
c2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJp
YnV0ZQBDb21WaXNpYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAU3RhbmRhcmRN
b2R1bGVBdHRyaWJ1dGUASGlkZU1vZHVsZU5hbWVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtB
dHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAERlYnVnZ2VySGlkZGVuQXR0cmlidXRl
AEFzc2VtYmx5RmlsZVZlcnNpb25BdHRyaWJ1dGUATXlHcm91cENvbGxlY3Rpb25BdHRyaWJ1dGUA
QXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmli
dXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBD
TFNDb21wbGlhbnRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFz
c2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBCeXRl
AG1fVmFsdWUAZ2V0X1ZhbHVlAHNldF9WYWx1ZQBHZXRPYmplY3RWYWx1ZQBTeXN0ZW0uVGhyZWFk
aW5nAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAc2V0X0Nvbm5lY3Rpb25TdHJpbmcAVG9TdHJp
bmcATG9nAFNjcmlwdFRhc2tfNjk0ODRhYTkwYmJlNGJmZjgyNWVmMTRjNzU3N2JjY2MudmJwcm9q
AFVubG9jawBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZl
ci5EdHMuVGFza3MuU2NyaXB0VGFzawBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuTXlTZXJ2aWNlcy5J
bnRlcm5hbABTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU2NyaXB0VGFz
a182OTQ4NGFhOTBiYmU0YmZmODI1ZWYxNGM3NTc3YmNjYy52YnByb2ouZGxsAGdldF9JdGVtAFN5
c3RlbQBFbnVtAE9wZW4AU3lzdGVtLkNvbXBvbmVudE1vZGVsLkRlc2lnbgBTY3JpcHRNYWluAGdl
dF9BcHBsaWNhdGlvbgBNeUFwcGxpY2F0aW9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5H
bG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAFNxbFBhcmFtZXRlckNvbGxlY3Rpb24AU3Fs
Q29ubmVjdGlvbgBFeGNlcHRpb24AU2NyaXB0TWFpbl9TaHV0ZG93bgBDdWx0dXJlSW5mbwBTdHJD
b21wAFNjcmlwdE1haW5fU3RhcnR1cABDbGVhcgBFeGVjdXRlU2NhbGFyAG1fQXBwT2JqZWN0UHJv
dmlkZXIAbV9Vc2VyT2JqZWN0UHJvdmlkZXIAbV9Db21wdXRlck9iamVjdFByb3ZpZGVyAG1fTXlX
ZWJTZXJ2aWNlc09iamVjdFByb3ZpZGVyAHNlbmRlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAENvbm5l
Y3Rpb25NYW5hZ2VyAFN5c3RlbS5Db2RlRG9tLkNvbXBpbGVyAEV2ZW50c09iamVjdFdyYXBwZXIA
Z2V0X1VzZXIAU3FsUGFyYW1ldGVyAEVudGVyAGdldF9Db21wdXRlcgBNeUNvbXB1dGVyAF9yZXNN
Z3IARmlyZUVycm9yAENsZWFyUHJvamVjdEVycm9yAFNldFByb2plY3RFcnJvcgBBY3RpdmF0b3IA
LmN0b3IALmNjdG9yAE1vbml0b3IAU3lzdGVtLkRpYWdub3N0aWNzAE1pY3Jvc29mdC5WaXN1YWxC
YXNpYy5EZXZpY2VzAGdldF9XZWJTZXJ2aWNlcwBNeVdlYlNlcnZpY2VzAE1pY3Jvc29mdC5WaXN1
YWxCYXNpYy5BcHBsaWNhdGlvblNlcnZpY2VzAFN5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNl
cwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUnVudGltZS5D
b21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU2NyaXB0VGFza182OTQ4NGFhOTBiYmU0
YmZmODI1ZWYxNGM3NTc3YmNjYy52YnByb2ouTXkuUmVzb3VyY2VzAE15UmVzb3VyY2VzAFNjcmlw
dFRhc2tfNjk0ODRhYTkwYmJlNGJmZjgyNWVmMTRjNzU3N2JjY2MudmJwcm9qLlJlc291cmNlcy5y
ZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAZ2V0X1ZhcmlhYmxlcwBTdHJpbmdzAE15U2V0dGluZ3MA
RXZlbnRBcmdzAEVxdWFscwBDb250YWlucwBDb252ZXJzaW9ucwBnZXRfQ29ubmVjdGlvbnMAUnVu
dGltZUhlbHBlcnMAZ2V0X1BhcmFtZXRlcnMAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMA
Z2V0X0V2ZW50cwBDb25jYXQARm9ybWF0AG1fU3luY09iamVjdABNeVByb2plY3QARXhpdABzZXRf
VGFza1Jlc3VsdABTeXN0ZW0uRGF0YS5TcWxDbGllbnQAZ2V0X0NvdW50AG1fQ29udGV4dABTY3Jp
cHRUYXNrXzY5NDg0YWE5MGJiZTRiZmY4MjVlZjE0Yzc1NzdiY2NjLnZicHJvai5NeQBnZXRfQXNz
ZW1ibHkAAAAAMU0AeQAuAFIAZQBzAG8AdQByAGMAZQBzAC4ATQB5AFIAZQBzAG8AdQByAGMAZQBz
AAA7JABQAGEAYwBrAGEAZwBlADoAOgBQAHIAaQBtAGEAcgB5AEkAbQBwAG8AcgB0AFMAZQByAHYA
ZQByAAA/JABQAGEAYwBrAGEAZwBlADoAOgBQAHIAaQBtAGEAcgB5AEkAbQBwAG8AcgB0AEQAYQB0
AGEAYgBhAHMAZQAAIUkAbgBpAHQAaQBhAGwAIABDAGEAdABhAGwAbwBnAD0AABs7AEQAYQB0AGEA
IABTAG8AdQByAGMAZQA9AAAzOwBJAG4AdABlAGcAcgBhAHQAZQBkACAAUwBlAGMAdQByAGkAdAB5
AD0AUwBTAFAASQAAMWIAYQBtAF8ATQBlAHQAYQBkAGEAdABhAF8ARwBlAHQAUAByAG8AcABlAHIA
dAB5AAAbQABwAHIAbwBwAGUAcgB0AHkATgBhAG0AZQAAFVMAZQByAHYAZQByAE4AYQBtAGUAAA1A
AHMAYwBvAHAAZQAAI0EAcgBjAGgAaQB2AGkAbgBnAEQAYQB0AGEAYgBhAHMAZQAAGUQAYQB0AGEA
YgBhAHMAZQBOAGEAbQBlAAAbVQBzAGUARQBuAGMAcgB5AHAAdABpAG8AbgAAJUQAYQB0AGEATQBh
AGkAbgB0AGUAbgBhAG4AYwBlAEQAVABTAAADMAAAC0YAYQBsAHMAZQAACVQAcgB1AGUAACNDAG8A
bgBuAGUAYwB0AGkAbwBuAFQAaQBtAGUATwB1AHQAAAUxADUAAAMxAACBlUQAYQB0AGEAIABTAG8A
dQByAGMAZQA9AHsAMAB9ADsASQBuAGkAdABpAGEAbAAgAEMAYQB0AGEAbABvAGcAPQB7ADEAfQA7
AFUAcwBlACAARQBuAGMAcgB5AHAAdABpAG8AbgAgAGYAbwByACAARABhAHQAYQA9AHsAMgB9ADsA
QQBwAHAAbABpAGMAYQB0AGkAbwBuACAATgBhAG0AZQA9AHsAMwB9ADsAQwBvAG4AbgBlAGMAdABp
AG8AbgAgAFQAaQBtAGUAbwB1AHQAPQB7ADQAfQA7AFAAcgBvAHYAaQBkAGUAcgA9AFMAUQBMAE8A
TABFAEQAQgAuADEAOwBJAG4AdABlAGcAcgBhAHQAZQBkACAAUwBlAGMAdQByAGkAdAB5AD0AUwBT
AFAASQA7AFAAZQByAHMAaQBzAHQAIABTAGUAYwB1AHIAaQB0AHkAIABJAG4AZgBvAD0ARgBhAGwA
cwBlADsAQQB1AHQAbwAgAFQAcgBhAG4AcwBsAGEAdABlAD0ARgBhAGwAcwBlADsAAClEAGEAdABh
ACAATQBhAGkAbgB0AGUAbgBhAG4AYwBlACAARABUAFMAAAMyAAADMwAACW0AcwBkAGIAAB9BAHIA
YwBoAGkAdgBpAG4AZwBTAGUAcgB2AGUAcgAASU0AbwBkAGkAZgBpAGUAZAAgAGMAbwBuAG4AZQBj
AHQAaQBvAG4AcwAuACAAUwBvAHUAcgBjAGUAIABTAGUAcgB2AGUAcgA6AAAjIABTAG8AdQByAGMA
ZQAgAEQAYQB0AGEAYgBhAHMAZQA6AAAhIABBAHIAYwBoAGkAdgBlACAAUwBlAHIAdgBlAHIAOgAA
JSAAQQByAGMAaABpAHYAZQAgAEQAYQB0AGEAYgBhAHMAZQA6AAABAAUNAAoAAJ3H98gxCY5GvWzm
p0pGSHcABCABAQgDIAABBSABARERBCABAQ4EIAEBAgUgAgEODgUgAQERRQcgBAEODg4OBhUSJAES
DAYVEiQBEggGFRIkARJlBhUSJAESIAQgABMABwABEm0RgKUFIAASgKkHIAIBDhKAqQQAARwcBAAB
ARwFBwESgJUFIAASgLUFIAASgLkDIAAIBgABARKAlQMAAAEUBwsSgJkODg4ODg4OEoCdHQUSgJUE
IAECHAYgARKAyRwDIAAcBAABDhwFAAEOHQ4HIAIBDhKAmQYgAQERgNkFIAASgN0KIAMSgOEOEYDl
CAQgAQEcCAADCA4OEYDtBSAAEoDxBiABEoCdHAYAAg4OHRwHIAMBDggdBQUgABKA9QMgAA4GAAMO
Dg4OCCAFAggODg4IBAcBHgACHgAFEAEAHgAECgEeAAQHARMABhUSJAETAAcGFRJxARMABhUScQET
AAITAAQKARMABSABARMACLd6XFYZNOCJCLA/X38R1Qo6CImEXc2AgMyRBAAAAAAEAQAAAAcGFRIk
ARIMBwYVEiQBEggHBhUSJAESZQcGFRIkARIgAwYSeQMGEn0DBhIYAgYcAgYIAwYRKAQAABIMBAAA
EggEAAASZQQAABIgBAAAEnkEAAASfQUAAQESfQQAABIYByACARwSgJEEIAASbQcQAQEeAB4ABzAB
AQEQHgAECAASDAQIABIIBAgAEmUECAASIAQIABJ5BAgAEn0ECAASGAQoABMACAEACAAAAAAAHgEA
AQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAADcBADJTY3JpcHRUYXNrXzY5NDg0
YWE5MGJiZTRiZmY4MjVlZjE0Yzc1NzdiY2NjLnZicHJvagAABQEAAAAABwEAAk1TAAAYAQATQ29w
eXJpZ2h0IEAgTVMgMjAwOAAABQEAAQAAKQEAJDVmMmNkMWYzLWQwNDYtNGU0ZC05Yzc5LTIzNjg1
Y2YwNWQzMQAADAEABzEuMC4wLjAAAEcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4U
RnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNAgBAAEAAAAAABgBAApNeVRlbXBs
YXRlCDExLjAuMC4wAABhAQA0U3lzdGVtLldlYi5TZXJ2aWNlcy5Qcm90b2NvbHMuU29hcEh0dHBD
bGllbnRQcm90b2NvbBJDcmVhdGVfX0luc3RhbmNlX18TRGlzcG9zZV9fSW5zdGFuY2VfXwAAABAB
AAtNeS5Db21wdXRlcgAAEwEADk15LkFwcGxpY2F0aW9uAAAMAQAHTXkuVXNlcgAAEwEADk15Lldl
YlNlcnZpY2VzAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFk
ZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5
VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNl
dAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAcEUAAAAAAAAAAAAAikUAAAAgAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAHxFAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAAB0
BAAAAAAAAAAAAAB0BDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
1AMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAsAMAAAEAMAAwADAAMAAwADQAYgAw
AAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACYAAwABAEMAbwBtAHAAYQBuAHkATgBhAG0A
ZQAAAAAATQBTAAAAAACOADMAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBj
AHIAaQBwAHQAVABhAHMAawBfADYAOQA0ADgANABhAGEAOQAwAGIAYgBlADQAYgBmAGYAOAAyADUA
ZQBmADEANABjADcANQA3ADcAYgBjAGMAYwAuAHYAYgBwAHIAbwBqAAAAAAAwAAgAAQBGAGkAbABl
AFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAACOADcAAQBJAG4AdABlAHIAbgBhAGwA
TgBhAG0AZQAAAFMAYwByAGkAcAB0AFQAYQBzAGsAXwA2ADkANAA4ADQAYQBhADkAMABiAGIAZQA0
AGIAZgBmADgAMgA1AGUAZgAxADQAYwA3ADUANwA3AGIAYwBjAGMALgB2AGIAcAByAG8AagAuAGQA
bABsAAAAAABMABQAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBn
AGgAdAAgAEAAIABNAFMAIAAyADAAMAA4AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEA
cgBrAHMAAAAAAAAAAACWADcAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBj
AHIAaQBwAHQAVABhAHMAawBfADYAOQA0ADgANABhAGEAOQAwAGIAYgBlADQAYgBmAGYAOAAyADUA
ZQBmADEANABjADcANQA3ADcAYgBjAGMAYwAuAHYAYgBwAHIAbwBqAC4AZABsAGwAAAAAAIYAMwAB
AFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBjAHIAaQBwAHQAVABhAHMAawBfADYAOQA0ADgA
NABhAGEAOQAwAGIAYgBlADQAYgBmAGYAOAAyADUAZQBmADEANABjADcANQA3ADcAYgBjAGMAYwAu
AHYAYgBwAHIAbwBqAAAAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4A
MAAuADAALgAwAAAAOAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAw
AC4AMAAuADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAAnDUAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{93125066-89A4-42C8-8FDD-3691531D04D8}"
      DTS:From="Package\Modify Archiving Connections"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Execute SQL Task" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{980FAC41-D3E2-49A1-9973-120BCDB53325}"
      DTS:From="Package\Execute SQL Task"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Foreach Loop Container" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="217,42"
          Id="Package\Modify Archiving Connections"
          TopLeft="75.5,168.357142857143" />
        <NodeLayout
          Size="136,44"
          Id="Package\Execute SQL Task"
          TopLeft="403.75,174.107142857143" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="292.5,192.732142857143">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="111.25,0"
              Start="0,0"
              End="103.75,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="103.75,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="187,42"
          Id="Package\Foreach Loop Container\Spawn a new partition"
          TopLeft="20.4999999999999,5.5" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Spawn a new partition]"
          TopLeft="111.142857142857,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,28.5714285714285"
              Start="0,0"
              End="0,21.0714285714285">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.0714285714285" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="154,42"
          Id="Package\Foreach Loop Container\Begin archiving"
          TopLeft="31.285714285714,76.0714285714285" />
        <NodeLayout
          Size="188,42"
          Id="Package\Foreach Loop Container\Archiving instance data"
          TopLeft="22.8571428571427,202.928571428571" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Archiving instance data]"
          TopLeft="119.714285714286,244.928571428571">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,25.7142857142859"
              Start="0,0"
              End="0,18.2142857142859">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.2142857142859" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="204,42"
          Id="Package\Foreach Loop Container\Archiving relationship data"
          TopLeft="20.5714285714287,270.642857142857" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Archiving relationship data]"
          TopLeft="124,312.642857142857">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,22.8571428571427"
              Start="0,0"
              End="0,15.3571428571427">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.3571428571427" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="217,42"
          Id="Package\Foreach Loop Container\Checking for successful transfer"
          TopLeft="16.9285714285714,335.5" />
        <NodeLayout
          Size="146,42"
          Id="Package\Foreach Loop Container\End archiving"
          TopLeft="56.7142857142857,469.5" />
        <NodeLayout
          Size="164,42"
          Id="Package\Foreach Loop Container\Verify archive tables empty"
          TopLeft="29.8571428571429,137.428571428571" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="31.285714285714,97.0714285714285">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-1.4285714285711,61.3571428571429"
              Start="0,0"
              End="-8.9285714285711,61.3571428571429">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-19.9285714285711,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-19.9285714285711,0"
                    Point2="-23.9285714285711,0"
                    Point3="-23.9285714285711,4" />
                  <mssgle:LineSegment
                    End="-23.9285714285711,57.3571428571429" />
                  <mssgle:CubicBezierSegment
                    Point1="-23.9285714285711,57.3571428571429"
                    Point2="-23.9285714285711,61.3571428571429"
                    Point3="-19.9285714285711,61.3571428571429" />
                  <mssgle:LineSegment
                    End="-8.9285714285711,61.3571428571429" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="114.357142857143,179.428571428571">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,23.5"
              Start="0,0"
              End="0,16">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="212,42"
          Id="Package\Foreach Loop Container\Recreating archiving tables"
          TopLeft="22.7142857142858,400.285714285714" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
          TopLeft="127.071428571429,377.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,22.7857142857142"
              Start="0,0"
              End="0,15.2857142857142">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.2857142857142" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 3]"
          TopLeft="129.214285714286,442.285714285714">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,27.2142857142858"
              Start="0,0"
              End="0,19.7142857142858">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.7142857142858" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="297,594"
          Size="297,637"
          Id="Package\Foreach Loop Container"
          TopLeft="505.357142857143,236.964285714286" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="539.75,196.107142857143">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="114.107142857143,40.8571428571424"
              Start="0,0"
              End="114.107142857143,33.3571428571424">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="110.107142857143,0" />
                  <mssgle:CubicBezierSegment
                    Point1="110.107142857143,0"
                    Point2="114.107142857143,0"
                    Point3="114.107142857143,4" />
                  <mssgle:LineSegment
                    End="114.107142857143,33.3571428571424" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>